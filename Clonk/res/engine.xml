<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.6.0_06" class="java.beans.XMLDecoder"> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bildet den Absolutwert (Betrag), entfernt also das Vorzeichen des ersten Parameters.</string> 
  </void> 
  <void property="name"> 
   <string>Abs</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wert, von dem der absolutwert gebildet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iValue</string> 
      </void> 
      <void property="scope"> 
       <object id="C4Variable$C4VariableScope0" class="net.arctics.clonk.parser.C4Variable$C4VariableScope" method="valueOf"> 
        <string>VAR_VAR</string> 
       </object> 
      </void> 
      <void property="type"> 
       <object id="C4Type0" class="net.arctics.clonk.parser.C4Type" method="valueOf"> 
        <string>INT</string> 
       </object> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object id="C4Function$C4FunctionScope0" class="net.arctics.clonk.parser.C4Function$C4FunctionScope" method="valueOf"> 
    <string>FUNC_GLOBAL</string> 
   </object> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Winkel, in dem sich der zweite Punkt vom ersten Punkt aus gesehen befindet. Der Winkel wird in Grad zurückgeliefert, 0° ist senkrecht oben. Alle Koordinaten sind global.</string> 
  </void> 
  <void property="name"> 
   <string>Angle</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate des ersten Punktes</string> 
      </void> 
      <void property="name"> 
       <string>iX1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate des ersten Punktes</string> 
      </void> 
      <void property="name"> 
       <string>iY1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate des zweiten Punktes</string> 
      </void> 
      <void property="name"> 
       <string>iX2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate des zweiten Punktes</string> 
      </void> 
      <void property="name"> 
       <string>iY2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Gibt, wenn angegeben, den Winkel multipliziert mit iPrec zurück, um so genauere Winkel zu erhalten. Eine Präzision von 10 gibt also Werte zwischen 0 und 3600 zurück.</string> 
      </void> 
      <void property="name"> 
       <string>iPrec</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Berechnet den Arcuscosinus von iVal/iRadius, also Result=arccos(iVal/iRadius). Dies entspricht cos(Result)=iVal/iRadius. Die Funktion wird benötigt, um Seitenverhältnisse zu einem Winkel umzurechnen. Für die meisten Fälle ist &lt;a href=&quot;../../../sdk/script/fn/Angle.html&quot;&gt;Angle&lt;/a&gt;() aber ausreichend und praktischer.</string> 
  </void> 
  <void property="name"> 
   <string>ArcCos</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Länge der Ankathete</string> 
      </void> 
      <void property="name"> 
       <string>iVal</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Länge der Hypotenuse</string> 
      </void> 
      <void property="name"> 
       <string>iRadius</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Berechnet den Arcussinus von iVal/iRadius, also Result=arcsin(iVal/iRadius). Dies entspricht Sin(Result)=iVal/iRadius. Die Funktion wird benötigt, um Seitenverhältnisse zu einem Winkel umzurechnen. Für die meisten Fälle ist &lt;a href=&quot;../../../sdk/script/fn/Angle.html&quot;&gt;Angle&lt;/a&gt;() aber ausreichend und praktischer.</string> 
  </void> 
  <void property="name"> 
   <string>ArcSin</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Länge der Gegenkathete</string> 
      </void> 
      <void property="name"> 
       <string>iVal</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Länge der Hypotenuse</string> 
      </void> 
      <void property="name"> 
       <string>iRadius</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt (iVal1 &amp;amp; iVal2) zurück (Bitweises And). Sollte in neuen Scripts durch den Operator &quot;&amp;amp;&quot; ersetzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>BitAnd</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>1. Bedingung</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>2. Bedingung</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt iVal zurück, wenn der Wert innerhalb der Grenzen liegt (iVal &amp;gt;= iRange1 und iVal &amp;lt;= iRange2). Andernfalls wird die jeweils nächstliegende Grenze zurückgegeben.</string> 
  </void> 
  <void property="name"> 
   <string>BoundBy</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zu vergleichende Zahl</string> 
      </void> 
      <void property="name"> 
       <string>iVal</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Untere Grenze</string> 
      </void> 
      <void property="name"> 
       <string>iRange1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Obere Grenze</string> 
      </void> 
      <void property="name"> 
       <string>iRange2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert cos(iAngle) * iRadius.</string> 
  </void> 
  <void property="name"> 
   <string>Cos</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Winkel in Grad</string> 
      </void> 
      <void property="name"> 
       <string>iAngle</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Radius</string> 
      </void> 
      <void property="name"> 
       <string>iRadius</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Der angegebene Winkel wird, wenn angegeben, vor der Berechnung durch diesen Wert dividiert. Bei einem Winkel von 455 und einer Präzision von 10 würde intern also mit einem Winkel von 45,5° gerechnet werden.</string> 
      </void> 
      <void property="name"> 
       <string>iPrec</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Berechnet den Abstand zwischen zwei Punkten. Die Funktion entspricht Sqrt((iX2-iX1)^2 + (iY2-iY1)^2;).</string> 
  </void> 
  <void property="name"> 
   <string>Distance</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des ersten Punktes</string> 
      </void> 
      <void property="name"> 
       <string>iX1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des ersten Punktes</string> 
      </void> 
      <void property="name"> 
       <string>iY1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des zweiten Punktes</string> 
      </void> 
      <void property="name"> 
       <string>iX2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des zweiten Punktes</string> 
      </void> 
      <void property="name"> 
       <string>iY2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Führt eine Division durch, wobei eine Division durch 0 einfach 0 zurückgibt. Statt dieser Funktion sollte der Operator &quot;/&quot; verwendet werden.</string> 
  </void> 
  <void property="name"> 
   <string>Div</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Dividend</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Divisor</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Addiert den angegeben Farbwert zum bestehenden des angegebenen 32bit-Farbewerts hinzu.
		
     &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;iSelect&lt;/th&gt;
&lt;th&gt;Auswahl&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Alpha-Wert&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Rotanteil&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Grünanteil&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Blauanteil&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
		</string> 
  </void> 
  <void property="name"> 
   <string>DoRGBaValue</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>32Bit-Farbwert</string> 
      </void> 
      <void property="name"> 
       <string>Val</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object id="C4Type1" class="net.arctics.clonk.parser.C4Type" method="valueOf"> 
        <string>UNKNOWN</string> 
       </object> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Farbwert, der dazuaddiert werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-3: Farbwert, der geändert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iSelect</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert einer der folgenden Farbwerte des angegebenen 32Bit-Farbwerts:
		
     &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;iSelect&lt;/th&gt;
&lt;th&gt;Rückgabewert&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Alpha-Wert&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Rotanteil&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Grünanteil&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Blauanteil&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

		</string> 
  </void> 
  <void property="name"> 
   <string>GetRGBaValue</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>32Bit-Farbwert</string> 
      </void> 
      <void property="name"> 
       <string>Val</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-3: Auswahl des gewünschten Rückgabewerts</string> 
      </void> 
      <void property="name"> 
       <string>iSelect</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt einen 32Bit-Farbwert aus den drei Parametern zusammen. 0-255 für alle Parameter.</string> 
  </void> 
  <void property="name"> 
   <string>HSL</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Farbton der Farbe. 0 ist Rot, 85 ist Grün, 170 Blau und 255 wieder Rot.</string> 
      </void> 
      <void property="name"> 
       <string>byH</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Sättigung der Farbe. Dies ist der Farbkontrast.</string> 
      </void> 
      <void property="name"> 
       <string>byS</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Helligkeit der Farbe. Helligkeit gleich null entspräche &lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(0,0,0)</string> 
      </void> 
      <void property="name"> 
       <string>byL</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Wandelt einen 24Bit HSL-Wert in den bekannten 32Bit RGB-Farbwert um.&lt;br&gt;
		Der 24Bit HSL-Wert kann mit &lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(Hue,Saturation,Lightness) erzeugt werden.&lt;br&gt;
		</string> 
  </void> 
  <void property="name"> 
   <string>HSL2RGB</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>24Bit HSL-Wert</string> 
      </void> 
      <void property="name"> 
       <string>Val</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt einen 32Bit-Farbwert aus den drei Parametern und einem Durchsichtigkeitswert zusammen. 0-255 für alle Parameter.</string> 
  </void> 
  <void property="name"> 
   <string>HSLa</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Farbton der Farbe. 0 ist Rot, 85 ist Grün, 170 Blau und 255 wieder Rot.</string> 
      </void> 
      <void property="name"> 
       <string>byH</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Sättigung der Farbe. Dies ist der Farbkontrast.</string> 
      </void> 
      <void property="name"> 
       <string>byS</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Helligkeit der Farbe. Helligkeit gleich null entspräche &lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(0,0,0)</string> 
      </void> 
      <void property="name"> 
       <string>byL</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Durchsichtigkeit der Farbe.</string> 
      </void> 
      <void property="name"> 
       <string>byA</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt TRUE zurück, wenn iVal &amp;gt;= iRange1 und iVal &amp;lt;= iRange2 ist.</string> 
  </void> 
  <void property="name"> 
   <string>Inside</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Eingabewert</string> 
      </void> 
      <void property="name"> 
       <string>iVal</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Untergrenze für den Wert</string> 
      </void> 
      <void property="name"> 
       <string>iRange1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Obergrenze für den Wert</string> 
      </void> 
      <void property="name"> 
       <string>iRange2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object id="C4Type2" class="net.arctics.clonk.parser.C4Type" method="valueOf"> 
    <string>BOOL</string> 
   </object> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt den größeren der beiden Werte zurück</string> 
  </void> 
  <void property="name"> 
   <string>Max</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>erster Wert</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>zweiter Wert</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt den kleineren der beiden Werte zurück</string> 
  </void> 
  <void property="name"> 
   <string>Min</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>erster Wert</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>zweiter Wert</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt den Divisionsrest von iVal1 / iVal2 zurück.</string> 
  </void> 
  <void property="name"> 
   <string>Mod</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Divident</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Divisor</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Multipliziert iVal1 mit iVal2 und gibt das Ergebnis zurück.</string> 
  </void> 
  <void property="name"> 
   <string>Mul</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Faktor 1</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Faktor 2</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Errechnet die Potenz von iVal1 und iVal2 (&quot;X hoch Y&quot;)</string> 
  </void> 
  <void property="name"> 
   <string>Pow</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Basis</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Exponent</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt einen 32Bit-Farbwert aus den drei Grundfarben zusammen. 0-255 für alle Parameter.</string> 
  </void> 
  <void property="name"> 
   <string>RGB</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Rotanteil für die Farbe</string> 
      </void> 
      <void property="name"> 
       <string>byR</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Grünanteil für die Farbe</string> 
      </void> 
      <void property="name"> 
       <string>byG</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Blauanteil für die Farbe</string> 
      </void> 
      <void property="name"> 
       <string>byB</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Wandelt einen 32Bit-Farbwert in die entsprechenden Hue-, Saturation- und Lightness-Werte um wie bereits von Malprogrammen bekannt.&lt;br&gt;
		Die HSL Werte werden ebenfalls als DWORD zurückgegeben und können mit &lt;a href=&quot;../../../sdk/script/fn/GetRGBaValue.html&quot;&gt;GetRGBaValue&lt;/a&gt;() oder &lt;a href=&quot;../../../sdk/script/fn/SplitRGBaValue.html&quot;&gt;SplitRGBaValue&lt;/a&gt;() weiter verwendet werden.&lt;br&gt;
		Alle Werte sind von 0 bis 255 skaliert.
		</string> 
  </void> 
  <void property="name"> 
   <string>RGB2HSL</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>32Bit-Farbwert</string> 
      </void> 
      <void property="name"> 
       <string>Val</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt einen 32Bit-Farbwert aus den drei Grundfarben und einem Durchsichtigkeitswert zusammen. 0-255 für alle Parameter.</string> 
  </void> 
  <void property="name"> 
   <string>RGBa</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Rotanteil für die Farbe</string> 
      </void> 
      <void property="name"> 
       <string>byR</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Grünanteil für die Farbe</string> 
      </void> 
      <void property="name"> 
       <string>byG</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Blauanteil für die Farbe</string> 
      </void> 
      <void property="name"> 
       <string>byB</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Durchsichtigkeit für die Farbe</string> 
      </void> 
      <void property="name"> 
       <string>byA</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt eine Zufallszahl zwischen 0 und iMaxVal-1 zurück. Der zurückgegebene Wert kann jedoch nicht höher als 32767 sein.</string> 
  </void> 
  <void property="name"> 
   <string>Random</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höchstwert</string> 
      </void> 
      <void property="name"> 
       <string>iMaxVal</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert einen Zufallswert zwischen iVal1 und iVal2. Dabei ist egal, welcher Wert der größere ist.</string> 
  </void> 
  <void property="name"> 
   <string>RandomX</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Anfang des Bereichs</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Ende des Bereichs</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt einen einzelnen Farbwert des angegebenen 32bit-Farbewerts.
		
     &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;iSelect&lt;/th&gt;
&lt;th&gt;Auswahl&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Alpha-Wert&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Rotanteil&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Grünanteil&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Blauanteil&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

		</string> 
  </void> 
  <void property="name"> 
   <string>SetRGBaValue</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>32Bit-Farbwert</string> 
      </void> 
      <void property="name"> 
       <string>Val</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-255: Farbwert, der mit dem alten ersetzt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iNewVal</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-3: Farbwert, der geändert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iSelect</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert sin(iAngle) * iRadius.</string> 
  </void> 
  <void property="name"> 
   <string>Sin</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Winkel in Grad</string> 
      </void> 
      <void property="name"> 
       <string>iAngle</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Radius</string> 
      </void> 
      <void property="name"> 
       <string>iRadius</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Der angegebene Winkel wird, wenn angegeben, vor der Berechnung durch diesen Wert dividiert. Bei einem Winkel von 455 und einer Präzision von 10 würde intern also mit einem Winkel von 45,5° gerechnet werden.</string> 
      </void> 
      <void property="name"> 
       <string>iPrec</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zerstückelt den 32Bit-Farbwert und schreibt die einzelnen Farbwerte in die jeweiligen angegeben Variablen.
		</string> 
  </void> 
  <void property="name"> 
   <string>SplitRGBaValue</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>32Bit-Farbwert</string> 
      </void> 
      <void property="name"> 
       <string>Val</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt] Variable, in der der Rotanteil gespeichert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iRed</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt] Variable, in der der Grünanteil gespeichert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iGreen</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt] Variable, in der der Blauanteil gespeichert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iBlue</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt] Variable, in der der Alpha-Wert gespeichert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iAlpha</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zieht die Wurzel aus dem ersten Parameter. Ist der Parameter kleiner als 0, wird einfach 0 zurückgegeben.</string> 
  </void> 
  <void property="name"> 
   <string>Sqrt</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wert, aus dem die Wurzel gezogen werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iValue</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Subtrahiert die Summe von iVal2, 3 und 4 von iVal1 und gibt das Ergebnis zurück. Diese Funktion sollte in neuen Scripts durch den Operator &quot;-&quot; ersetzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>Sub</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Minuend</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Subtrahend 1</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Subtrahend 2</string> 
      </void> 
      <void property="name"> 
       <string>iVal3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Subtrahend 3</string> 
      </void> 
      <void property="name"> 
       <string>iVal4</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bildet die Summe von iVal1, iVal2, iVal3 und iVal4 und gibt das Ergebnis zurück. Diese Funktion sollte in neuen Scripts durch den Operator &quot;+&quot; ersetzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>Sum</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>1. Summand</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>2. Summand</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>3. Summand</string> 
      </void> 
      <void property="name"> 
       <string>iVal3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>4. Summand</string> 
      </void> 
      <void property="name"> 
       <string>iVal4</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt einen Effekt. Rückgabewert ist der Effektindex bei Erfolg, oder 0 bei Fehlschlag (weil der Effekt beispielsweise abgelehnt wurde). Wenn der Effekt von einem anderen Effekt aufgenommen wurde, der sich in demselben Aufruf entfernt, wird -2 zurückgegeben.</string> 
  </void> 
  <void property="name"> 
   <string>AddEffect</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des Effektes ohne vorangestelltes Fx.</string> 
      </void> 
      <void property="name"> 
       <string>szEffectName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object id="C4Type3" class="net.arctics.clonk.parser.C4Type" method="valueOf"> 
        <string>STRING</string> 
       </object> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt für den Effekt. Bei 0 wird der Effekt global erzeugt.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object id="C4Type4" class="net.arctics.clonk.parser.C4Type" method="valueOf"> 
        <string>OBJECT</string> 
       </object> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Priorität für den Effekt. Achtung: Die Priorität darf nicht 0 sein; ansonsten wird der Effekt nicht erzeugt!</string> 
      </void> 
      <void property="name"> 
       <string>iPrio</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Intervall, in dem Timer-Aufrufe getätigt werden. Bei 0 werden keine Timer-Aufrufe durchgeführt, und der Effekt bleibt permanent bis er durch anderwertige Aufrufe entfernt wird.</string> 
      </void> 
      <void property="name"> 
       <string>iTimerIntervall</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Befehlsziel. Wenn angegeben, werden alle Callbacks in diesem Objekt ausgeführt. Ansonsten finden diese Callbacks grundsätzlich ohne Objektkontext statt. Wenn das Befehlszielobjekt gelöscht wird, werden alle verbundenen Effekte ohne weitere Callbacks ebenfalls gelöscht. Falls das Befehlsziel seine Definition ändert, sollten verbundene Effekte mit &lt;a href=&quot;../../../sdk/script/fn/ChangeEffect.html&quot;&gt;ChangeEffect&lt;/a&gt; ihre Funktionen neu zuweisen lassen.</string> 
      </void> 
      <void property="name"> 
       <string>pCmdTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Definition, in der bei nicht angegebenem Befehlsziel-Objekt Callbacks ausgeführt werden. Sind sowohl pCmdTarget als auch idCmdTarget 0, werden die Aufrufe global durchgeführt. Das heißt, die Fx*-Funktionen müssen als global deklariert sein, oder Enginefunktionen sein.</string> 
      </void> 
      <void property="name"> 
       <string>idCmdTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object id="C4Type5" class="net.arctics.clonk.parser.C4Type" method="valueOf"> 
        <string>ID</string> 
       </object> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Erster Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird</string> 
      </void> 
      <void property="name"> 
       <string>var1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object id="C4Type6" class="net.arctics.clonk.parser.C4Type" method="valueOf"> 
        <string>ANY</string> 
       </object> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zweiter Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird</string> 
      </void> 
      <void property="name"> 
       <string>var2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Dritter Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird</string> 
      </void> 
      <void property="name"> 
       <string>var3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Vierter Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird</string> 
      </void> 
      <void property="name"> 
       <string>var4</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert den Namen eines Effektes, und damit auch die aufgerufenen Callback-Funktionen.</string> 
  </void> 
  <void property="name"> 
   <string>ChangeEffect</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Name des Effektes ohne vorangestelltes Fx. Es können &apos;*&apos; und &apos;?&apos; als Suchmaske verwendet werden.</string> 
      </void> 
      <void property="name"> 
       <string>szEffectName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt, in dem Effekte geändert werden sollen. Bei 0 wird die globale Effektliste durchsucht.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Effektindex. Bei angegebenem szEffectName gibt dies bei mehreren, der Suchmaske entsprechenden Effekten den indizierten Effekt in der Liste der passenden Effekte an. Ist szEffectName nicht angegeben, wird dagegen der Effekt mit der entsprechenden Effektnummer geändert. Im Gegensatz zu Effektnummern ist bei Indizes stets sichergestellt, dass beim Hochzählen von 0 bis zur Effektzahl alle Effekte erfasst werden.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Neuer Effektname ohne vorangestelltes Fx</string> 
      </void> 
      <void property="name"> 
       <string>szNewEffectName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Neues Timer-Intervall. Bei -1 wird der alte Wert beibehalten; ansonsten wird bei diesem Aufruf auch die Effektzeit zurückgesetzt.</string> 
      </void> 
      <void property="name"> 
       <string>iNewTimer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Führt Fx*Effect (und ggf. auch Fx*Add)-Callbacks in der entsprechenden Effektliste aus, ohne einen Effekt selber zu erstellen. Rückgabewert ist -1, wenn ein anderer Effekt den Effekt abgelehnt hat, und die Effektnummer des aufnehmenden Effektes, wenn der Effekt aufgenommen wurde.</string> 
  </void> 
  <void property="name"> 
   <string>CheckEffect</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des Effektes ohne vorangestelltes Fx.</string> 
      </void> 
      <void property="name"> 
       <string>szEffectName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt, dessen Effekte benachrichtigt werden. Bei 0 wird die globale Effektliste benachrichtigt.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Priorität für den Effekt. Es werden Fx*Effect-Callbacks bei allen Effekten mit gleicher und höherer Priorität durchgeführt. Bei 0 werden alle Effekte benachrichtigt.</string> 
      </void> 
      <void property="name"> 
       <string>iPrio</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Intervall, in dem Timer-Aufrufe getätigt würden. Bei 0 würden keine Timer-Aufrufe durchgeführt, und der Effekt bliebe permanent bis er durch anderwertige Aufrufe entfernt würde.</string> 
      </void> 
      <void property="name"> 
       <string>iTimerIntervall</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Erster Zusatzparameter, der an Fx*Effect-Callbacks übergeben wird</string> 
      </void> 
      <void property="name"> 
       <string>var1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zweiter Zusatzparameter, der an Fx*Effect-Callbacks übergeben wird</string> 
      </void> 
      <void property="name"> 
       <string>var2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Dritter Zusatzparameter, der an Fx*Effect-Callbacks übergeben wird</string> 
      </void> 
      <void property="name"> 
       <string>var3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Vierter Zusatzparameter, der an Fx*Effect-Callbacks übergeben wird</string> 
      </void> 
      <void property="name"> 
       <string>var4</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Führt einen Funktionsaufruf im angegebenen Effekt durch. Der Aufruf erhält den Befehlskontext des Effektes, und die ersten beiden Aufrufparameter sind immer Zielobjekt und Effektindex. Die weiteren Parameter können frei gewählt werden.</string> 
  </void> 
  <void property="name"> 
   <string>EffectCall</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt des Effektes, auf dessen Variablenspeicher zugegriffen wird. 0 für globale Effekte.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Effektnummer. Effektnummern werden an Effekt-Callbackfunktionen übergeben, sind Rückgabewert von &lt;a href=&quot;../../../sdk/script/fn/AddEffect.html&quot;&gt;AddEffect&lt;/a&gt; und lassen sich über &lt;a href=&quot;../../../sdk/script/fn/GetEffect.html&quot;&gt;GetEffect&lt;/a&gt; aus dem Effektnamen herausfinden.</string> 
      </void> 
      <void property="name"> 
       <string>iNumber</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Aufzurufender Befehl. Es wird automatisch Fx[Effektname] vorangestellt; dies sollte nicht mit angegeben werden.</string> 
      </void> 
      <void property="name"> 
       <string>szCommand</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert eine Referenz auf eine effektlokale Variable. Diese kann zum Lesen und schreiben verwendet werden.</string> 
  </void> 
  <void property="name"> 
   <string>EffectVar</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt Effektdaten ab, oder ermittelt, ob ein bstimmter Effekt vorhanden ist. Der Rückgabetyp richtet sich nach dem abgefragten Wert. Wurde der Effekt nicht gefunden, wird immer 0 zurückgegeben.</string> 
  </void> 
  <void property="name"> 
   <string>GetEffect</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Name des Effektes ohne vorangestelltes Fx. Es können &apos;*&apos; und &apos;?&apos; als Suchmaske verwendet werden.</string> 
      </void> 
      <void property="name"> 
       <string>szEffectName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt, in dem Effekte abgefragt werden sollen. Bei 0 wird die globale Effektliste durchsucht.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Effektindex. Bei angegebenem szEffectName gibt dies bei mehreren, der Suchmaske entsprechenden Effekten den indizierten Effekt in der Liste der passenden Effekte an. Ist szEffectName nicht angegeben, wird dagegen der Effekt mit der entsprechenden Effektnummer abgefragt. Im Gegensatz zu Effektnummern ist bei Indizes stets sichergestellt, dass beim Hochzählen von 0 bis zur Effektzahl alle Effekte erfasst werden.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Index des Wertes, der abgefragt werden soll. Siehe Anmerkung.</string> 
      </void> 
      <void property="name"> 
       <string>iQueryVal</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn ungleich 0, werden nur Effekte zurückgegeben, die höchstens die angegebene Priorität haben.</string> 
      </void> 
      <void property="name"> 
       <string>iMaxPriority</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zählt die Effekte in einem Objekt oder globale Effekte.</string> 
  </void> 
  <void property="name"> 
   <string>GetEffectCount</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Suchmaske für den Namen der Effekte. Es können &apos;*&apos; und &apos;?&apos; in der Maske verwendet, oder auch direkt Effektnamen angegeben werden. Bei 0, werden alle Effekte gezählt.</string> 
      </void> 
      <void property="name"> 
       <string>szMask</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt, dessen Effekte gezählt werden sollen. Bei 0 werden globale Effekte gezählt.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn ungleich 0, werden nur Effekte zurückgegeben, die höchstens die angegebene Priorität haben.</string> 
      </void> 
      <void property="name"> 
       <string>iMaxPriority</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Löscht einen Effekt</string> 
  </void> 
  <void property="name"> 
   <string>RemoveEffect</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Name des Effektes ohne vorangestelltes Fx. Es können &apos;*&apos; und &apos;?&apos; als Suchmaske verwendet werden.</string> 
      </void> 
      <void property="name"> 
       <string>szEffectName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt, in dem ein Effekt gelöscht werden sollen. Bei 0 wird die globale Effektliste durchsucht.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Effektindex. Bei angegebenem szEffectName gibt dies bei mehreren, der Suchmaske entsprechenden Effekten den indizierten Effekt in der Liste der passenden Effekte an. Ist szEffectName nicht angegeben, wird dagegen der Effekt mit der entsprechenden Effektnummer geändert. Im Gegensatz zu Effektnummern ist bei Indizes stets sichergestellt, dass beim Hochzählen von 0 bis zur Effektzahl alle Effekte erfasst werden.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn ungleich 0, werden keine Stop-Aufrufe durchgeführt.</string> 
      </void> 
      <void property="name"> 
       <string>fDoNoCalls</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Neues Timer-Intervall. Bei -1 wird der alte Wert beibehalten; ansonsten wird bei diesem Aufruf auch die Effektzeit zurückgesetzt.</string> 
      </void> 
      <void property="name"> 
       <string>iNewTimer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Spielt einen Sound ab. Die entsprechende Sounddatei muss in der Gruppendatei Sound.c4g, in der aktiven Szenariodatei oder in einer geladenen Objektdefinition vorhanden sein. Bei lokalen Aufrufen werden Geräusche abhängig von der aktuellen Position des aufrufenden Objekts abgespielt.</string> 
  </void> 
  <void property="name"> 
   <string>Sound</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des Soundeffekts (ohne .wav-Endung)</string> 
      </void> 
      <void property="name"> 
       <string>szSound</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Gibt an, ob der Sound global, d.h. unabhängig von der Objektposition immer in derselben Lautstärke abgespielt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>fGlobal</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, bei dem der Sound abgespielt werden soll. 0 bei lokalem Aufruf. Die Position des Objekts relativ zum Viewport des Spielers ist entscheidend für die Lautstärke, in der der Sound abgespielt wird.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  0-100: Lautstärke, in der der Sound abgespielt wird. Bei 0 wird 100 als Standard angenommen.</string> 
      </void> 
      <void property="name"> 
       <string>iVolume</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Um eins erhöhte Spielernummer des Spielers, für den der Sound abgespielt werden soll. Im Netzwerkspiel wird der Sound dann nicht bei einem Spieler abgespielt, der an einem anderen Rechner spielt. Achtung: Die Spielernummer muss für den Parameter um eins erhöht angegeben werden, da der Standardparameter 0 für einen Sound für alle Spieler steht!</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Erhöht oder verringert die Anzahl der in einer Endlosschleife laufenden Sounds. Bei +1 wird dieser Sound unendlich oft abgespielt bis diese Funktion noch einmal mit -1 aufgerufen wird. Bei 0 wird der Sound normal abgespielt.</string> 
      </void> 
      <void property="name"> 
       <string>iLoopCount</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Spielt einen Soundeffekt permanent in einer Schleife ab, bis er wieder gestopp wird. Die Position ist global, solange pObj nicht angegeben ist; der Sound wird also überall auf der Karte gleichmäßig gehört.</string> 
  </void> 
  <void property="name"> 
   <string>SoundLevel</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des Soundeffekts (ohne .wav-Endung)</string> 
      </void> 
      <void property="name"> 
       <string>szSound</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-100: Lautstärke, in der der Sound abgespielt wird. Bei 0 wird die Abspielung dieses Soundeffektes gestoppt.</string> 
      </void> 
      <void property="name"> 
       <string>iVolume</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben wird der Sound für dieses Objekt abgespielt. Ab 4.9.6.0 CR</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert im Entwicklermodus der Engine das Objekt, welches sich im gerade unter dem Mauscursor befindet (Modus: Objekte auswählen und verschieben).</string> 
  </void> 
  <void property="name"> 
   <string>EditCursor</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Aktualisiert eine Definition. Dieser Befehl kann im Entwicklermodus in der Konsole eingegeben werden, nachdem die Definition auf der Festplatte verändert wurde. Sie muss zuvor geladen gewesen sein.</string> 
  </void> 
  <void property="name"> 
   <string>ReloadDef</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID der neu zu ladenden Definition</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Aktualisiert eine Partikeldefinition. Dieser Befehl kann im Entwicklermodus in der Konsole eingegeben werden, nachdem die Definition auf der Festplatte verändert wurde. Sie muss zuvor geladen gewesen sein.</string> 
  </void> 
  <void property="name"> 
   <string>ReloadParticle</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des neu zu ladenden Partikeltyps.</string> 
      </void> 
      <void property="name"> 
       <string>szParticle</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Startet den Scriptprofiler.</string> 
  </void> 
  <void property="name"> 
   <string>StartScriptProfiler</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn angegeben, werden nur Scriptfunktionen einer bestimmten Objektdefinition gemessen.</string> 
      </void> 
      <void property="name"> 
       <string>idDefScript</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Stoppt den Scriptprofiler, und gibt das Ergebnis im Log aus.</string> 
  </void> 
  <void property="name"> 
   <string>StopScriptProfiler</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt Aktionsdaten aus der &lt;a href=&quot;../../../sdk/definition/actmap.html&quot;&gt;ActMap.txt&lt;/a&gt; anhand deren dortigem Namen ab.</string> 
  </void> 
  <void property="name"> 
   <string>GetActMapVal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des abzufragenden Eintrags</string> 
      </void> 
      <void property="name"> 
       <string>strEntry</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Name der Aktion, von der der Eintrag abgefragt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>strAction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objektdefinition, von der die Aktionsdaten abgefragt werden sollen. Bei Übergabe von 0 wird die Definition des aufrufenden Objekts angenommen.</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.</string> 
      </void> 
      <void property="name"> 
       <string>iEntryNr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt einen Eigenschaftswert einer Objektdefinition nach seinem Namen in der &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore.txt&lt;/a&gt;
          zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetDefCoreVal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des abzufragenden Eintrags</string> 
      </void> 
      <void property="name"> 
       <string>strEntry</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Sektion des abzufragenden Eintrags. Wird 0 übergeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.</string> 
      </void> 
      <void property="name"> 
       <string>strSection</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objektdefinition, von der der Eintrag abgefragt werden soll. Bei Übergabe von 0 wird die Definition des aufrufenden Objekts angenommen.</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.</string> 
      </void> 
      <void property="name"> 
       <string>iEntryNr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt einen Eigenschaftswert einer Materialdefinition nach seinem Namen in der &lt;a href=&quot;../../../sdk/material/c4m.html&quot;&gt;Materialdatei&lt;/a&gt;
          zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetMaterialVal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des abzufragenden Eintrags</string> 
      </void> 
      <void property="name"> 
       <string>strEntry</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Sektion des abzufragenden Eintrags. Wird 0 übergeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.</string> 
      </void> 
      <void property="name"> 
       <string>strSection</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des Materials, von dem der Eintrag abgefragt werden soll. Bei Übergabe von 0 wird die Definition des aufrufenden Objekts angenommen.</string> 
      </void> 
      <void property="name"> 
       <string>iMaterial</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.</string> 
      </void> 
      <void property="name"> 
       <string>iEntryNr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bei dem InfoCore handelt es sich um die Informationen eines CrewMembers, die in dem Spieler gespeichert
          werden (*.c4i). Dementsprechend gibt GetObjectInfoCoreVal einen Eigenschaftswert eines Crewmembers
          nach Namen in einer c4i-Datei zurück</string> 
  </void> 
  <void property="name"> 
   <string>GetObjectInfoCoreVal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des abzufragenden Eintrags</string> 
      </void> 
      <void property="name"> 
       <string>strEntry</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Sektion des abzufragenden Eintrags. Wird 0 übergeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.</string> 
      </void> 
      <void property="name"> 
       <string>strSection</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, von dem der Eintrag abgefragt werden soll. Null bei lokalen Aufrufen.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.</string> 
      </void> 
      <void property="name"> 
       <string>iEntryNr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt einen Eigenschaftswert eines Objekts nach seinem Namen in der Objects.txt zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetObjectVal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des abzufragenden Eintrags</string> 
      </void> 
      <void property="name"> 
       <string>strEntry</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Sektion des abzufragenden Eintrags. Wird 0 übergeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.</string> 
      </void> 
      <void property="name"> 
       <string>strSection</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, von dem der Eintrag abgefragt werden soll. Null bei lokalen Aufrufen.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.</string> 
      </void> 
      <void property="name"> 
       <string>iEntryNr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt einen Eigenschaftswert aus der Player.txt eines Spielers zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetPlayerInfoCoreVal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des abzufragenden Eintrags</string> 
      </void> 
      <void property="name"> 
       <string>strEntry</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Sektion des abzufragenden Eintrags. Wird 0 übergeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.</string> 
      </void> 
      <void property="name"> 
       <string>strSection</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Spieler, dessen Eintrag abgefragt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.</string> 
      </void> 
      <void property="name"> 
       <string>iEntryNr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt Eigenschaftswerte eines Spielers anhand dessen Namen ab, wie sie beim Speichern eines Spiels in die game.txt geschrieben werden</string> 
  </void> 
  <void property="name"> 
   <string>GetPlayerVal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des abzufragenden Eintrags</string> 
      </void> 
      <void property="name"> 
       <string>strEntry</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Sektion des abzufragenden Eintrags. Wird 0 übergeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.</string> 
      </void> 
      <void property="name"> 
       <string>strSection</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des Spielers, von dem der Eintrag abgefragt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.</string> 
      </void> 
      <void property="name"> 
       <string>iEntryNr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt Eigenschaftswerte des Szenarios anhand dessen Namen/Sekion in der &lt;a href=&quot;../../../sdk/scenario/scenario.html&quot;&gt;Scenario.txt&lt;/a&gt; ab</string> 
  </void> 
  <void property="name"> 
   <string>GetScenarioVal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des abzufragenden Eintrags</string> 
      </void> 
      <void property="name"> 
       <string>strEntry</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Sektion des abzufragenden Eintrags. Wird 0 übergeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.</string> 
      </void> 
      <void property="name"> 
       <string>strSection</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.</string> 
      </void> 
      <void property="name"> 
       <string>iEntryNr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die Nummer des Frames zurück, in dem sich das Spiel befindet. Dieser Zähler beginnt beim Szenarienstart mit 0, und zählt dann mit ca. 37 Frames pro Sekunde hoch (abhängig von der Spielgeschwindigkeit)</string> 
  </void> 
  <void property="name"> 
   <string>FrameCounter</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Beendet die Runde. Die Runde wird für alle überlebenden Spieler als gewonnen gewertet.</string> 
  </void> 
  <void property="name"> 
   <string>GameOver</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liest die Schwerkraft (in Prozent) aus.</string> 
  </void> 
  <void property="name"> 
   <string>GetGravity</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Prüft, ob das aktuelle Spiel ein Netzwerkspiel ist.</string> 
  </void> 
  <void property="name"> 
   <string>IsNetwork</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt zurück, ob das 32 Bit/16 Bit-Grafiksystem aktiviert ist. Bei Rückgabewert FALSE befindet sich die Engine im 8 Bit-Modus. Diese Funktion ist veraltet. Ab 4.9.5.0 CE läuft die Engine ausschließlich im 32 Bit/16 Bit-Modus.</string> 
  </void> 
  <void property="name"> 
   <string>IsNewgfx</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt eine Gammarampe auf den Normalwert zurück. Dies entspricht &lt;a href=&quot;../../../sdk/script/fn/SetGamma.html&quot;&gt;SetGamma&lt;/a&gt;(&lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(0,0,0), &lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(128,128,128), &lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(255,255,255), iRampIndex);. Für weitere Informationen siehe &lt;a href=&quot;../../../sdk/script/fn/SetGamma.html&quot;&gt;SetGamma&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>ResetGamma</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-7: Index der Gammarampe, die zurückgesetzt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iRampIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Spielgeschwindigkeit.</string> 
  </void> 
  <void property="name"> 
   <string>SetGameSpeed</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielgeschwindigkeit in FPS (Frames per Second). Wird der Parameter nicht angegeben oder 0 übergeben, so wird die Standard-Spielgeschwindigkeit (38 FPS) gewählt.</string> 
      </void> 
      <void property="name"> 
       <string>iGameSpeed</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt eine Gammarampe. Mit Gammarampen kann global das Aussehen des gesamten Spieles gesteuert werden, indem jedem Farbkanal eine eigene Tabelle zugewiesen wird, aus der die neue Helligkeit abgelesen wird. Damit kann man zum Beispiel bestimmte Farben speziell hervorheben, alles abdunkeln oder erhellen oder sogar das Bild komplett invertieren.</string> 
  </void> 
  <void property="name"> 
   <string>SetGamma</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Veränderung für dunkle Farben. Standard ist &lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(0,0,0) für keine Veränderung.</string> 
      </void> 
      <void property="name"> 
       <string>dwClr1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Veränderung für mittlere Farben. Standard ist &lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(128,128,128) für keine Veränderung.</string> 
      </void> 
      <void property="name"> 
       <string>dwClr2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Veränderung für helle Farben. Standard ist &lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(255,255,255) für keine Veränderung.</string> 
      </void> 
      <void property="name"> 
       <string>dwClr3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-7: Index der zu verändernden Rampe. Es stehen acht Gammarampen zur Verfügung, die aufeinander gerechnet werden. So können zum Beispiel Tag/Nacht-Objekte die globale Helligkeit verändern, ohne dabei andere Effekte wie Blitze zu behindern.</string> 
      </void> 
      <void property="name"> 
       <string>iRampIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Schwerkraft. Dabei entspricht die Standardgravitation (100%) einer Beschleunigung von 0.2 Pixeln pro Tick² (Zunahme der YDir um 2 pro Tick bei iPrecision=10)</string> 
  </void> 
  <void property="name"> 
   <string>SetGravity</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Schwerkraft: Werte -300 bis 300 (in Prozent)</string> 
      </void> 
      <void property="name"> 
       <string>iGravity</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die mit &lt;a href=&quot;../../../sdk/script/fn/SetSkyAdjust.html&quot;&gt;SetSkyAdjust&lt;/a&gt; gesetzte Himmelsmodulation zurück. Für weitere Informationen siehe &lt;a href=&quot;../../../sdk/script/fn/SetSkyAdjust.html&quot;&gt;SetSkyAdjust&lt;/a&gt;
</string> 
  </void> 
  <void property="name"> 
   <string>GetSkyAdjust</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn ungleich 0, wird die in SetSkyAdjust angegebene Zweitfarbe zurückgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>fBackColor</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Farbwert des Himmels. Mit iRGB kann angegeben werden ob entweder Rot (iRGB ist 0), Grün (iRGB ist 1) oder Blau (iRGB ist 2) zurück gegeben werden soll. Mit iIndex wird festgelegt von welchem Palettenindex (0 - 19) der Wert zurück gegeben werden soll.</string> 
  </void> 
  <void property="name"> 
   <string>GetSkyColor</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Farb-Index in der Clonk-Palette.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Rückgabetyp bestimmen.</string> 
      </void> 
      <void property="name"> 
       <string>iRGB</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Himmelsmodulation. Die Himmelsfarben werden mit der angegebenen Farbe so verrechnet wie auch ColorByOwner-Grafiken.</string> 
  </void> 
  <void property="name"> 
   <string>SetSkyAdjust</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Primäre Farbmodulation</string> 
      </void> 
      <void property="name"> 
       <string>dwClrMod</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Hintergrundfarbe. Wenn in dwClrMod das Alphabyte nicht 0 ist, wird diese Farbe als Hintergrund hinter den Himmel gelegt. So lassen sich auch hellere oder entsättigte Himmel realisieren.</string> 
      </void> 
      <void property="name"> 
       <string>dwBackClr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert eine Himmelsfarben. Dabei wird im 8Bit-Modus der entsprechende Paletteneintrag geändert.</string> 
  </void> 
  <void property="name"> 
   <string>SetSkyColor</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-19: Himmelsfarbenindex</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Rot-Wert der Farbe</string> 
      </void> 
      <void property="name"> 
       <string>iRed</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Grün-Wert der Farbe</string> 
      </void> 
      <void property="name"> 
       <string>iGreen</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Blau-Wert der Farbe</string> 
      </void> 
      <void property="name"> 
       <string>iBlue</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert die Himmelsfarben. Dabei werden im 8Bit-Modus die Palettenfarben 0 (Anfangsfarbe) bis 19 (Endfartbe) auf einen Verlauf zwischen den angegebenen Farbwerten gesetzt. Das macht natürlich nur dann Sinn, wenn der Himmel aus einem Farbverlauf besteht.</string> 
  </void> 
  <void property="name"> 
   <string>SetSkyFade</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Rot-Wert der Anfangsfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iFromRed</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Grün-Wert der Anfangsfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iFromGreen</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Blau-Wert der Anfangsfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iFromBlue</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Rot-Wert der Endfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iToRed</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Grün-Wert der Endfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iToGreen</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Blau-Wert der Endfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iToBlue</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert Parallaxität und Scrollgeschwindigkeit des Himmels.</string> 
  </void> 
  <void property="name"> 
   <string>SetSkyParallax</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Scrollmodus. 0 ist Standard; bei 1 bewegt sich der Himmel mit dem Wind.</string> 
      </void> 
      <void property="name"> 
       <string>iMode</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Parallaxität in X-Richtung. Bei 10 ist der Himmel fest mit der Landschaft, mit größeren Werten beginnt die Parallaxität. Bei 0 wird der vorherige Wert beibehalten.</string> 
      </void> 
      <void property="name"> 
       <string>iParX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Parallaxität in Y-Richtung</string> 
      </void> 
      <void property="name"> 
       <string>iParY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Feste, horizontale Bewegungsgeschwindigkeit des Himmels</string> 
      </void> 
      <void property="name"> 
       <string>iXDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Feste, vertikale Bewegungsgeschwindigkeit des Himmels</string> 
      </void> 
      <void property="name"> 
       <string>iYDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Scrollposition des Himmels</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Scrollposition des Himmels</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für &lt;a href=&quot;../../../sdk/script/fn/SetSkyParallax.html&quot;&gt;SetSkyParallax&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>SkyPar_Keep</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt ein neues selbstdefiniertes Messageboard-Kommando. Dieses Kommando kann von jedem Spieler im Spiel durch Eingabe von &quot;/[Kommandoname]&quot; aufgerufen werden.
          In dem Fall wird der angegebene Script ausgeführt. Im Script kann &quot;%s&quot; dafür verwendet werden, eventuell angegebene Parameter einzubinden.</string> 
  </void> 
  <void property="name"> 
   <string>AddMsgBoardCmd</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des MessageBoard-Kommandos</string> 
      </void> 
      <void property="name"> 
       <string>strCommand</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Auszuführender Script</string> 
      </void> 
      <void property="name"> 
       <string>strScript</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert den Sichtbarkeitszähler für das Scoreboard. Der intern verwaltete Zähler beginnt bei 0. Ist er größer als 0, wird das Scoreboard gezeigt. Ist er kleiner als 0, wird es verborgen. Ist er gleich 0, wird das Scoreboard nur dann gezeigt, wenn der Spieler die entsprechende Taste (normalweise Tab) drückt.
    </string> 
  </void> 
  <void property="name"> 
   <string>DoScoreboardShow</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Änderung der Sichtbarkeit des Scoreboards.</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn größer 0, Spielernummer+1 des Spielers, für den die Scoreboard-Sichtbarkeit geändert werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iForPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Wandelt eine Objektdefinitions-ID in eine Zahl um, die als Spaltenidentifikator für &lt;a href=&quot;../../../sdk/script/fn/SetScoreboardData.html&quot;&gt;SetScoreboardData&lt;/a&gt; verwendet werden kann. Diese Funktion ist dann interessant, wenn ein Objekt auf das Scoreboard zugreifen will, aber dabei sicher stellen muss, dass es nicht dieselbe ID wie ein anderes Objekt verwendet.
    </string> 
  </void> 
  <void property="name"> 
   <string>ScoreboardCol</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>C4ID, die in einen Scoreboard-Spaltenindex umgewandelt werden soll. Für Scoreboards auf Objektbasis sollte hier die ID der Objektdefinition genommen werden, die die Scoreboardfunktionen bereit stellt.</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt Daten im Scoreboard. Das Scoreboard ist eine globale Tabelle, die Szenarien nutzen können um zum Beispiel den aktuellen Punktestand aller Spieler oder sonstige Rundendaten darzustellen. Es wird vom Spieler standardgemäß mit der Taste Tab aufgerufen, kann aber auch per Script mit &lt;a href=&quot;../../../sdk/script/fn/DoScoreboardShow.html&quot;&gt;DoScoreboardShow&lt;/a&gt; forciert gezeigt oder verborgen werden.&lt;br&gt;
	Das Scoreboard wird automatisch erstellt, sobald Daten darin gesetzt werden. Es wird automatisch gelöscht, wenn es außer Überschriften keine Daten mehr enthält.&lt;br&gt;
	Daten werden über einen Zeilen- und Spaltenindex adressiert. Werte mit gleichem Zeilenindex landen in der gleichen Zeile; Werte mit gleichem Spaltenindex in der gleichen Spalte. Existieren noch keine Daten für einen Zeilen- bzw. Spaltenindex, so wird die Zeile bzw. Spalte neu angelegt und unten bzw. rechts angehängt. Es ist also nicht entscheidend, welche Indizes verwendet werden, solange sie eindeutig sind. Es können z.B. Spielernummern, Spieler-IDs (siehe &lt;a href=&quot;../../../sdk/script/fn/GetPlayerID.html&quot;&gt;GetPlayerID&lt;/a&gt;) oder Team-IDs (siehe &lt;a href=&quot;../../../sdk/script/fn/GetPlayerTeam.html&quot;&gt;GetPlayerTeam&lt;/a&gt;) angegeben werden. Damit mehrere Objektdefinitionen wie zum Beispiel ein Todeszähler nicht dieselben IDs für Spalten verwenden, gibt es die Funktion &lt;a href=&quot;../../../sdk/script/fn/ScoreboardCol.html&quot;&gt;ScoreboardCol&lt;/a&gt;, die aus einer ID einen eindeutige Spaltenindex generiert. Dabei ist natürlich trotzdem darauf zu achten, dass mehrere solcher Objekte die gleichen Zeilenadressierungen verwenden. Indizes müssen nicht fortlaufend sein; Zeilen und Spalten werden nach Reihenfolge des Hinzufügens und nicht nach Indizes sortiert. Für benutzerdefinierte Sortierungen (zum Beispiel absteigend nach Punkten für eine Bestenliste) dient die Funktion &lt;a href=&quot;../../../sdk/script/fn/SortScoreboard.html&quot;&gt;SortScoreboard&lt;/a&gt;.
    </string> 
  </void> 
  <void property="name"> 
   <string>SetScoreboardData</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wert größer oder gleich 0, oder SBRD_Caption. Index der Zeile, dessen Daten gesetzt werden sollen. Die Konstante SBRD_Caption steht dabei für die erste Spalte, die als Spaltenbeschriftung verwendet werden sollte.</string> 
      </void> 
      <void property="name"> 
       <string>iRowID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wert größer oder gleich 0, oder SBRD_Caption. Index der Spalte, dessen Daten gesetzt werden sollen. Die Konstante SBRD_Caption steht dabei für die erste Zeile, die als Zeilenüberschrift verwendet werden sollte.</string> 
      </void> 
      <void property="name"> 
       <string>iColID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zu setzender Zellentext. Wenn 0 oder nicht angegeben, wird die Zelle ausgeleert. Sind in einer Zeile alle Zellen bis auf die Überschrift (Index SBRD_Caption) leer, wird diese Zeile komplett entfernt. Selbiges gilt für Spalten. Die Überprüfung auf leere Zeilen und Spalten wird immer nur dann durchgeführt, wenn eine Zelle ausgeleert wird.&lt;br&gt;Um Text in anderen Farben darzustellen oder Symbole im Scoreboard einzufügen, sollte entsprechendes Markup verwendet werden.</string> 
      </void> 
      <void property="name"> 
       <string>sText</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zusatzdaten für diese Zellen. Nach diesen Daten wird das Scoreboard mit &lt;a href=&quot;../../../sdk/script/fn/SortScoreboard.html&quot;&gt;SortScoreboard&lt;/a&gt; sortiert.</string> 
      </void> 
      <void property="name"> 
       <string>iData</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sortiert die Zeilen des Scoreboards nach den Extradaten einer Spalte. Wenn zwei Einträge in dieser Spalte die gleichen Werte besitzen, wird nicht umsortiert. So kann durch sukzessive Aufrufe dieser Funktion nach mehreren Spalten sortiert werden.
    </string> 
  </void> 
  <void property="name"> 
   <string>SortScoreboard</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID der Spalte, nach der sortiert werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iColID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn wahr, wird in absteigender Reihenfolge sortiert. Ansonsten in aufsteigender Reihenfolge.</string> 
      </void> 
      <void property="name"> 
       <string>fReverse</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Saugt ein Pixel Flüssigkeit an der angegebenen Position ab. Zurückgegeben wird die Materialnummer des abgesogenen Materials; bei Misserfolg -1.</string> 
  </void> 
  <void property="name"> 
   <string>ExtractLiquid</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  X-Position, an der abgesogen wird. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Y-Position, an der abgesogen wird. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Extrahiert eine bestimmte Menge des gleichen Materials an einer Stelle. Zurückgegeben wir die tatsächlich erfolgreich extrahierte Materialmenge.</string> 
  </void> 
  <void property="name"> 
   <string>ExtractMaterialAmount</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position, an der Material extrahiert wird. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position, an der Material extrahiert wird. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index des Materials, das extrahiert wird. Siehe dazu auch &lt;a href=&quot;../../../sdk/script/fn/Material.html&quot;&gt;Material&lt;/a&gt;.</string> 
      </void> 
      <void property="name"> 
       <string>iMat</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Maximale Menge, die extrahiert wird</string> 
      </void> 
      <void property="name"> 
       <string>iAmount</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Überprüft ob sich an angegebener Position in der Landschaft Flüssigkeit befindet.</string> 
  </void> 
  <void property="name"> 
   <string>GBackLiquid</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate, Offset bei lokalem Aufruf</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate, Offset bei lokalem Aufruf</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Überprüft ob sich an angegebener Position in der Landschaft feste Materie oder Flüssigkeit befindet. Also alles außer Himmel und Tunnel.</string> 
  </void> 
  <void property="name"> 
   <string>GBackSemiSolid</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate, Offset bei lokalem Aufruf</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate, Offset bei lokalem Aufruf</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Überprüft ob sich an angegebener Position in der Landschaft Himmel befindet.</string> 
  </void> 
  <void property="name"> 
   <string>GBackSky</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate, Offset bei lokalem Aufruf</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate, Offset bei lokalem Aufruf</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Überprüft ob sich an angegebener Position in der Landschaft feste Materie befindet. Also alles wo Objekte nicht durchkönnen.</string> 
  </void> 
  <void property="name"> 
   <string>GBackSolid</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate, Offset bei lokalem Aufruf</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate, Offset bei lokalem Aufruf</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt das Material an einer bestimmten Stelle der Landschaft ab. Der zurückgegebene Wert ist ein Materialindex, der mit anderen Indizes zum Beispiel über die Funktion &lt;a href=&quot;../../../sdk/script/fn/Material.html&quot;&gt;Material&lt;/a&gt;() verglichen werden kann. Für Himmel gibt die Funktion -1 zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetMaterial</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position, an der das Material abgefragt werden soll. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position, an der das Material abgefragt werden soll. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ermittelt die Farbe eines Materials.</string> 
  </void> 
  <void property="name"> 
   <string>GetMaterialColor</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index des Materials, von dem eine Farbe ermittelt wird</string> 
      </void> 
      <void property="name"> 
       <string>iMat</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Materialfarbnummer (0-2)</string> 
      </void> 
      <void property="name"> 
       <string>iNumber</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Channel. 0=Rot; 1=Grün; 2=Blau</string> 
      </void> 
      <void property="name"> 
       <string>iChannel</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die in der Landschaft vorhandene Menge des angegebenen Materials.</string> 
  </void> 
  <void property="name"> 
   <string>GetMaterialCount</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Materialsindex</string> 
      </void> 
      <void property="name"> 
       <string>iMaterial</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt ein Materialpixel an der angegebenen Position in der angegebenen Geschwindigkeit ein.</string> 
  </void> 
  <void property="name"> 
   <string>InsertMaterial</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Einzufügendes Material (siehe &lt;a href=&quot;../../../sdk/script/fn/Material.html&quot;&gt;Material&lt;/a&gt;())</string> 
      </void> 
      <void property="name"> 
       <string>iMat</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  X-Einfügeposition/-offset</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Y-Einfügeposition/-offset</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  X-Geschwindigkeit des eingefügten Mateiralpixels</string> 
      </void> 
      <void property="name"> 
       <string>iXDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Y-Geschwindigkeit des eingefügten Mateiralpixels</string> 
      </void> 
      <void property="name"> 
       <string>iYDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt den Index eines Materials anhand seines Namens zurück. Dieser Index wird in den meisten materialbezogenen Funktionen verwendet.</string> 
  </void> 
  <void property="name"> 
   <string>Material</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des Materials</string> 
      </void> 
      <void property="name"> 
       <string>szMaterialName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt den (internen, englischen) Namen eines Materials zurück.</string> 
  </void> 
  <void property="name"> 
   <string>MaterialName</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index des Materials, dessen Name ermittelt wird</string> 
      </void> 
      <void property="name"> 
       <string>iMat</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Farben eines Materials in der Palette. Dadurch werden alle Vorkommen dieses Materials auf der Karte in der neuen Farbe dargestellt.</string> 
  </void> 
  <void property="name"> 
   <string>SetMaterialColor</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index des Materials, dessen Farben gesetzt werden</string> 
      </void> 
      <void property="name"> 
       <string>iMat</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Roter Kanal der ersten Materialfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iR1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Grüner Kanal der ersten Materialfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iG1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Blauer Kanal der ersten Materialfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iB1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Roter Kanal der zweiten Materialfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iR2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Grüner Kanal der zweiten Materialfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iG2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Blauer Kanal der zweiten Materialfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iB2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Roter Kanal der dritten Materialfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iR3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Grüner Kanal der dritten Materialfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iG3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Blauer Kanal der dritten Materialfarbe</string> 
      </void> 
      <void property="name"> 
       <string>iB3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verschleudert namentlich angegebene Materialpixel an angegebener Position. Bei einem lokalen Aufruf gelten die Koordinaten als Offset zum aufrufenden Objekt.</string> 
  </void> 
  <void property="name"> 
   <string>CastPXS</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Materialname</string> 
      </void> 
      <void property="name"> 
       <string>szMaterial</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Menge</string> 
      </void> 
      <void property="name"> 
       <string>iAmount</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Stärke</string> 
      </void> 
      <void property="name"> 
       <string>iLevel</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gräbt ein kreisrundes Loch in halbfesten Materialien.</string> 
  </void> 
  <void property="name"> 
   <string>DigFree</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Lochradius</string> 
      </void> 
      <void property="name"> 
       <string>iRadius</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gräbt ein rechteckiges Loch in halbfesten Materialien.</string> 
  </void> 
  <void property="name"> 
   <string>DigFreeRect</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zeichnet eine dynamische Zufallskarte innerhalb eines Bereichs. Dazu wird die angegebene Karte in der Landscape.txt gesucht.</string> 
  </void> 
  <void property="name"> 
   <string>DrawDefMap</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Linke Kante des Rechtecks, in dem die Karte gezeichnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Obere Kante des Rechtecks, in dem die Karte gezeichnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite des Rechtecks, in dem die Karte gezeichnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe des Rechtecks, in dem die Karte gezeichnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name der zu benutzenden Karte aus der Landscape.txt</string> 
      </void> 
      <void property="name"> 
       <string>szMapDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zeichnet eine dynamische Zufallskarte innerhalb eines Bereichs. Dazu wird derselbe Generator benutzt, der auch die Karten der Landscape.txt zeichnet.</string> 
  </void> 
  <void property="name"> 
   <string>DrawMap</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Linke Kante des Rechtecks, in dem die Karte gezeichnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Obere Kante des Rechtecks, in dem die Karte gezeichnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite des Rechtecks, in dem die Karte gezeichnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe des Rechtecks, in dem die Karte gezeichnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Definition der dynamischen Karte. Das umschließende map { ...} - Tag muss vorhanden sein.</string> 
      </void> 
      <void property="name"> 
       <string>szMap</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zeichnet ein viereckiges Polygon im angegebenen Material mit der angegebenen Textur. Wenn keine Textur angegeben ist, wird Smooth angenommen.</string> 
  </void> 
  <void property="name"> 
   <string>DrawMaterialQuad</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Material-Textur-Tupel für das Material, das gezeichnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>szMaterialTexture</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des ersten Eckpunktes. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iX1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des ersten Eckpunktes. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iY1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des zweiten Eckpunktes. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iX2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des zweiten Eckpunktes. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iY2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des dritten Eckpunktes. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iX3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des dritten Eckpunktes. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iY3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des vierten Eckpunktes. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iX4</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des vierten Eckpunktes. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iY4</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn true, wird das Material unterirdisch gezeichnet.</string> 
      </void> 
      <void property="name"> 
       <string>sub</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sucht einen Bauplatz für ein Gebäude, ausgehend von &lt;a href=&quot;../../../sdk/script/fn/Var.html&quot;&gt;Var&lt;/a&gt;(iVarNumX)/&lt;a href=&quot;../../../sdk/script/fn/Var.html&quot;&gt;Var&lt;/a&gt;(iVarNumY). Wenn ein Bauplatz gefunden wird, wird er in den entsprechenden Variablen abgelegt, und es wird TRUE zurückgegeben. Ansonsten ist der Rückgabewert FALSE.</string> 
  </void> 
  <void property="name"> 
   <string>FindConstructionSite</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des gewünschten Gebäudetyps</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Variablennummer, in  der die globale X-Position des Bauplatzes abgelegt wird. Diese Variable sollte zuvor eine X-Position für den Start der Suche enthalten.</string> 
      </void> 
      <void property="name"> 
       <string>iVarNumX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Variablennummer, in  der die globale Y-Position des Bauplatzes abgelegt wird. Diese Variable sollte zuvor eine Y-Position für den Start der Suche enthalten.</string> 
      </void> 
      <void property="name"> 
       <string>iVarNumY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Entfernt alle Materialien innerhalb des angegebenen Rechtecks. Die Koordinaten sind immer global, und der untere und rechte Rand des Rechtecks zählen nicht mit dazu.</string> 
  </void> 
  <void property="name"> 
   <string>FreeRect</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Linke Kante des Rechtecks</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Obere Kante des Rechtecks</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite des Rechtecks</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe des Rechtecks</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn angegeben, wird Material mit der entsprechenden Dichte entfernt</string> 
      </void> 
      <void property="name"> 
       <string>iFreeDensity</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sucht mittels des auch für die Clonk-Wegfindung benutzten Algorithmus
          einen Weg zwischen zwei Punkten der Landschaft und gibt dessen Länge
          zurück. Wurde kein Weg gefunden, gibt die Funktion 0 zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetPathLength</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordiante der Startposition</string> 
      </void> 
      <void property="name"> 
       <string>iFromX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordiante der Startposition</string> 
      </void> 
      <void property="name"> 
       <string>iFromY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordiante der Zielposition</string> 
      </void> 
      <void property="name"> 
       <string>iToX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordiante der Zielposition</string> 
      </void> 
      <void property="name"> 
       <string>iToY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt TRUE zurück, wenn sich das Objekt in einer Flüssigkeit befindet.</string> 
  </void> 
  <void property="name"> 
   <string>InLiquid</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zielobjekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die Höhe der Landschaft in Pixel zurück.</string> 
  </void> 
  <void property="name"> 
   <string>LandscapeHeight</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die Breite der Landschaft in Pixel zurück.</string> 
  </void> 
  <void property="name"> 
   <string>LandscapeWidth</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt zurück, ob der Weg zwischen den beiden angegebenen Punkten in der Landschaft frei ist, d.h., ob sich keine festen Materialien auf der Verbindungslinie zwischen den Punkten befinden.</string> 
  </void> 
  <void property="name"> 
   <string>PathFree</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des Anfangspunktes</string> 
      </void> 
      <void property="name"> 
       <string>iX1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des Anfangspunktes</string> 
      </void> 
      <void property="name"> 
       <string>iY1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des Endpunktes</string> 
      </void> 
      <void property="name"> 
       <string>iX2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des Endpunktes</string> 
      </void> 
      <void property="name"> 
       <string>iY2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt das Klima (Durchschnittstemperatur).</string> 
  </void> 
  <void property="name"> 
   <string>SetClimate</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Temperatur zwischen -50 und 50.</string> 
      </void> 
      <void property="name"> 
       <string>iClimate</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Färbt ein Pixel in der Landschaft ein. Diese Funktion ist nicht im 8Bit-Grafiksystem verfügbar.</string> 
  </void> 
  <void property="name"> 
   <string>SetLandscapePixel</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des Pixels, das umgefärbt werden soll; relative Koordinaten bei objektlokalem Aufruf</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des Pixels, das umgefärbt werden soll; relative Koordinaten bei objektlokalem Aufruf</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>32Bit-Farbwert des Pixels.</string> 
      </void> 
      <void property="name"> 
       <string>dwValue</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Materialmodulation. Die Materialfarben werden mit der angegebenen Farbe so verrechnet wie auch ColorByOwner-Grafiken.</string> 
  </void> 
  <void property="name"> 
   <string>SetMatAdjust</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Primäre Farbmodulation</string> 
      </void> 
      <void property="name"> 
       <string>dwClrMod</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Löst innerhalb eines kreisförmigen Bereiches halbfestes Material in der Landschaft. Für gelöstes Material wird neu geprüft, ob es in darunterliegendes Material fallen kann. Dadurch kann man zum Beispiel Höhlendecken einstürzen lassen.</string> 
  </void> 
  <void property="name"> 
   <string>ShakeFree</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Mittelposition des freigeschüttelten Kreises. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Mittelposition des freigeschüttelten Kreises. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Radius des freigeschüttelten Kreises</string> 
      </void> 
      <void property="name"> 
       <string>iRadius</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt TRUE zurück, wenn beide Parameter ungleich Null sind (Logisches And). Sollte in neueren Scripts durch den &lt;a href=&quot;../../../sdk/script/operatoren.html&quot;&gt;Operator&lt;/a&gt; &quot;&amp;amp;&amp;amp;&quot; ersetzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>And</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>1. Bedingung</string> 
      </void> 
      <void property="name"> 
       <string>fCon1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>2. Bedingung</string> 
      </void> 
      <void property="name"> 
       <string>fCon2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt true zurück, wenn iVal1 == iVal2, false, wenn nicht.</string> 
  </void> 
  <void property="name"> 
   <string>Equal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zahl 1</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zahl 2</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt True zurück wenn iVal1 größer als iVal2 ist.</string> 
  </void> 
  <void property="name"> 
   <string>GreaterThan</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Erster Wert zum Vergleichen.</string> 
      </void> 
      <void property="name"> 
       <string>iVal1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zweiter Wert zum Vergleichen.</string> 
      </void> 
      <void property="name"> 
       <string>iVal2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt TRUE zurück, wenn der erste übergebene Wert kleiner ist als der zweite (iValue1 &amp;lt; iValue2)</string> 
  </void> 
  <void property="name"> 
   <string>LessThan</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>erster Wert</string> 
      </void> 
      <void property="name"> 
       <string>iValue1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>erster Wert</string> 
      </void> 
      <void property="name"> 
       <string>iValue1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt true zurück, wenn Value false ist, false, wenn Value true ist.</string> 
  </void> 
  <void property="name"> 
   <string>Not</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wert</string> 
      </void> 
      <void property="name"> 
       <string>Value</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt TRUE zurück, wenn einer der Parameter ungleich Null ist (Logisches Oder). Sollte in neueren Scripts durch den Operator &quot;||&quot; ersetzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>Or</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>1. Bedingung</string> 
      </void> 
      <void property="name"> 
       <string>fCon1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>2. Bedingung</string> 
      </void> 
      <void property="name"> 
       <string>fCon2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>3. Bedingung</string> 
      </void> 
      <void property="name"> 
       <string>fCon3</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>4. Bedingung</string> 
      </void> 
      <void property="name"> 
       <string>fCon4</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>5. Bedingung</string> 
      </void> 
      <void property="name"> 
       <string>fCon5</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Spielt ein Musikstück ab. Die entsprechende Datei muss in einer der aktiven Musikdateien vorhanden sein. Sind im ausgewählten Szenario Musikdateien vorhanden, gilt die Szenariodatei als aktive Musikdatei, andernfalls wird die globale Musikdatei Music.c4g genutzt. Bei erfolgreichem Aufruf dieser Funktion wird die Musikwiedergabe aktiviert, auch wenn sie in den Optionen des Menüsystems deaktiviert wurde.</string> 
  </void> 
  <void property="name"> 
   <string>Music</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Dateiame des Musikstückes. Die Endung muss mit angegeben werden. Wird der Parameter weggelassen oder 0 übergeben, so wird die Musikwiedergabe deaktiviert (auch wenn sie in den Optionen aktiviert wurde)</string> 
      </void> 
      <void property="name"> 
       <string>szSongName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn 1, wird das angegebene Musikstück andauernd abgespielt.</string> 
      </void> 
      <void property="name"> 
       <string>fLoop</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Lautstärke, mit der die Hintergrundmusik abgespielt wird (siehe &lt;a href=&quot;../../../sdk/script/fn/Music.html&quot;&gt;Music&lt;/a&gt;).</string> 
  </void> 
  <void property="name"> 
   <string>MusicLevel</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Gewünschte Lautstärke (0-100).</string> 
      </void> 
      <void property="name"> 
       <string>iLevel</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Liste der Musikstücke, die in zufälliger Reihenfolge abgespielt werden sollen (wenn die Musik aktiviert ist). Zurückgegeben wird die Anzahl der aktivierten Musikstücke (Im Netzwerk wird allerdings immer 0 zurückgegeben).</string> 
  </void> 
  <void property="name"> 
   <string>SetPlayList</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Liste der abzuspielenden Musikstücke. Dabei werden die Einzeldateinamen jeweils mit einem Semikolon (&quot;;&quot;) getrennt. Wildcards dürfen benutzt werden. Wird der Parameter wegelassen, so wird die Standard-Musikliste gespielt.</string> 
      </void> 
      <void property="name"> 
       <string>szPlayList</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt einen Text im Messageboard am unteren Bildschirmrand aus. Die Parameter können über den C-Formatierungsstil in den Text eingebunden werden. Siehe dazu auch &lt;a href=&quot;../../../sdk/script/fn/Format.html&quot;&gt;Format&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>Log</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Auszugebender Text</string> 
      </void> 
      <void property="name"> 
       <string>szMessage</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zeigt eine Nachricht an. Diese kann nach dem C-Formatierungsstil formatiert werden (siehe &lt;a href=&quot;../../../sdk/script/fn/Format.html&quot;&gt;Format&lt;/a&gt;)</string> 
  </void> 
  <void property="name"> 
   <string>Message</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nachricht, die angezeigt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>strMessage</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, über dem die Nachricht angezeigt werden soll. Wenn nicht angegeben oder 0 wird die Nachricht global angezeigt.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt eine Nachricht nur im Viewport eines Spielers aus. Die Nachrichtenformatierung erfolgt analog zu &lt;a href=&quot;../../../sdk/script/fn/Message.html&quot;&gt;Message&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>PlayerMessage</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, bei dem die Nachricht ausgegeben wird</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nachricht, die ausgegeben wird</string> 
      </void> 
      <void property="name"> 
       <string>szMessage</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, bei dem die Nachricht ausgegeben wird. Ohne angegebenes Objekt wird die Nachricht global (analog zu &lt;a href=&quot;../../../sdk/script/fn/PlrMessage.html&quot;&gt;PlrMessage&lt;/a&gt;) ausgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt eine Nachricht nur im Viewport eines Spielers aus. Die Nachrichtenformatierung erfolgt analog zu &lt;a href=&quot;../../../sdk/script/fn/Message.html&quot;&gt;Message&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>PlrMessage</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nachricht, die ausgegeben wird</string> 
      </void> 
      <void property="name"> 
       <string>szMessage</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, bei dem die Nachricht ausgegeben wird</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Prüft, ob das Objekt eine Aktivität ausführt. Bei lokalem Aufruf kann pObj == 0 sein.</string> 
  </void> 
  <void property="name"> 
   <string>ActIdle</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zu überprüfendes Objekt</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für &lt;a href=&quot;../../../sdk/script/fn/SetDir.html&quot;&gt;SetDir&lt;/a&gt;/&lt;a href=&quot;../../../sdk/script/fn/GetDir.html&quot;&gt;GetDir&lt;/a&gt;: Richtung nach links</string> 
  </void> 
  <void property="name"> 
   <string>DIR_Left</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für &lt;a href=&quot;../../../sdk/script/fn/SetDir.html&quot;&gt;SetDir&lt;/a&gt;/&lt;a href=&quot;../../../sdk/script/fn/GetDir.html&quot;&gt;GetDir&lt;/a&gt;: Richtung nach rechts</string> 
  </void> 
  <void property="name"> 
   <string>DIR_Right</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Zeitraum in Frames, die das angegebene Objekt bereits die aktuelle Aktivität ausgeführt hat.</string> 
  </void> 
  <void property="name"> 
   <string>GetActTime</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Namen der momentanen Aktivität eines Objekts zurück, &quot;Idle&quot;, wenn das Objekt keine Aktivität ausführt.</string> 
  </void> 
  <void property="name"> 
   <string>GetAction</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Abzufragendes Objekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die aktuellen Aktivitätszielobjekte eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>GetActionTarget</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0 für pTarget oder 1 für pTarget2</string> 
      </void> 
      <void property="name"> 
       <string>iTargetIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die aktuelle Richtung eines Objekts als DIR_x()-Wert.</string> 
  </void> 
  <void property="name"> 
   <string>GetDir</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Richtung abgefragt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Aktivitätsphase von *pObj. *pObj ist Null bei lokalem Aufruf.</string> 
  </void> 
  <void property="name"> 
   <string>GetPhase</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt dessen Aktivitätsphase zurückgegeben werden soll. Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die Prozedur der gegenwärtigen Aktivität eines Objekts zurück (z.B. FLOAT, ATTACH, etc.). Bei einer NONE-Prozedur oder keiner Aktivität wird 0 zurückgegeben.</string> 
  </void> 
  <void property="name"> 
   <string>GetProcedure</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Abzufragendes Objekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Aktivität des angegebenen Objekts. Siehe auch &lt;a href=&quot;../../../sdk/definition/actmap.html&quot;&gt;ActMap.txt&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>ObjectSetAction</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Aktivität geändert werden soll. Achtung: Anders als bei vielen anderen Funktionen, darf dieser Parameter nicht ausgelassen werden, um die Aktivität des aufrufenden Objekts zu ändern. Dafür sollte stattdessen &lt;a href=&quot;../../../sdk/script/fn/SetAction.html&quot;&gt;SetAction&lt;/a&gt; verwendet werden.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Aktivität. &quot;ActIdle&quot; oder &quot;Idle&quot; löscht die Aktivität.</string> 
      </void> 
      <void property="name"> 
       <string>szAction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Erstes Zielobjekt für die Aktivität</string> 
      </void> 
      <void property="name"> 
       <string>pTarget1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zweites Zielobjekt für die Aktivität</string> 
      </void> 
      <void property="name"> 
       <string>pTarget2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn gesetzt, wird die Aktivität direkt, ohne Start/AbortCalls und unter Umgehung des NoOtherAction-Flags gesetzt. Ab CE.</string> 
      </void> 
      <void property="name"> 
       <string>fDirect</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Aktivität des aufrufenden Objekts. Siehe auch &lt;a href=&quot;../../../sdk/definition/actmap.html&quot;&gt;ActMap.txt&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>SetAction</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Aktivität. &quot;ActIdle&quot; oder &quot;Idle&quot; löscht die Aktivität.</string> 
      </void> 
      <void property="name"> 
       <string>szAction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Erstes Zielobjekt für die Aktivität</string> 
      </void> 
      <void property="name"> 
       <string>pTarget1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zweites Zielobjekt für die Aktivität</string> 
      </void> 
      <void property="name"> 
       <string>pTarget2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt den Zusatzparameter für die aktuell ausgeführte Aktivitäts-Prozedur. Die Auswirkung dieses Parameters hängt von der gesetzten Prozedur ab. Siehe dazu auch &lt;a href=&quot;../../../sdk/definition/procedures.html&quot;&gt;ActMap-Prozeduren&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>SetActionData</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zusatzparameter für die Aktivität.</string> 
      </void> 
      <void property="name"> 
       <string>iData</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, für das die Aktivitätsdaten geändert werden sollen. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die aktuellen Aktivitätszielobjekte eines Objekts. Die Auswirkung der Zielobjekte richtet sich nach der &lt;a href=&quot;../../../sdk/definition/procedures.html&quot;&gt;Prozedur&lt;/a&gt; der aktuell gesetzten Aktivität.</string> 
  </void> 
  <void property="name"> 
   <string>SetActionTargets</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Erstes Zielobjekt</string> 
      </void> 
      <void property="name"> 
       <string>pTarget1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zweites Zielobjekt</string> 
      </void> 
      <void property="name"> 
       <string>pTarget2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Zielobjekte gesetzt werden sollen. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt Zusatzparameter für eine aktuell ausgeführte BRIDGE-Prozedur.</string> 
  </void> 
  <void property="name"> 
   <string>SetBridgeActionData</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Länge der Brücke.</string> 
      </void> 
      <void property="name"> 
       <string>iBridgeLength</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Ob sich der Clonk mit der Brücke mitbewegen soll.</string> 
      </void> 
      <void property="name"> 
       <string>fMoveClonk</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Sollte &lt;code&gt;true&lt;/code&gt; sein, wenn der Clonk keine Brücke, sondern eine Wand (d.h. über seinem Kopf) baut.</string> 
      </void> 
      <void property="name"> 
       <string>fWall</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Materialnummer des Materials aus dem die Brücke bestehen soll.</string> 
      </void> 
      <void property="name"> 
       <string>iBridgeMaterial</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt dessen Aktionsdaten geändert werden sollen. Kann bei lokalen Aufrufen 0 sein.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Richtung eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetDir</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Aktionsrichtung. Vordefinierte Werte: &lt;a href=&quot;../../../sdk/script/fn/DIR_Right.html&quot;&gt;DIR_Right&lt;/a&gt;() / &lt;a href=&quot;../../../sdk/script/fn/DIR_Left.html&quot;&gt;DIR_Left&lt;/a&gt;()</string> 
      </void> 
      <void property="name"> 
       <string>iDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Richtung gesetzt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Aktivitätsphase eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetPhase</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Aktionsphase.</string> 
      </void> 
      <void property="name"> 
       <string>iPhase</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bewegungsrichtung: Hoch. Für weitere Hinweise siehe &lt;a href=&quot;../../../sdk/script/fn/SetComDir.html&quot;&gt;SetComDir&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>COMD_Down</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bewegungsrichtung: Schräg nach unten links. Für weitere Hinweise siehe &lt;a href=&quot;../../../sdk/script/fn/SetComDir.html&quot;&gt;SetComDir&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>COMD_DownLeft</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bewegungsrichtung: Schräg nach unten rechts. Für weitere Hinweise siehe &lt;a href=&quot;../../../sdk/script/fn/SetComDir.html&quot;&gt;SetComDir&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>COMD_DownRight</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bewegungsrichtung: Hoch. Für weitere Hinweise siehe &lt;a href=&quot;../../../sdk/script/fn/SetComDir.html&quot;&gt;SetComDir&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>COMD_Left</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bewegungsrichtung: Anhalten. Für weitere Hinweise siehe &lt;a href=&quot;../../../sdk/script/fn/SetComDir.html&quot;&gt;SetComDir&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>COMD_None</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bewegungsrichtung: Hoch. Für weitere Hinweise siehe &lt;a href=&quot;../../../sdk/script/fn/SetComDir.html&quot;&gt;SetComDir&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>COMD_Right</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bewegungsrichtung: Anhalten. Für weitere Hinweise siehe &lt;a href=&quot;../../../sdk/script/fn/SetComDir.html&quot;&gt;SetComDir&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>COMD_Stop</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bewegungsrichtung: Hoch. Für weitere Hinweise siehe &lt;a href=&quot;../../../sdk/script/fn/SetComDir.html&quot;&gt;SetComDir&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>COMD_Up</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bewegungsrichtung: Schräg nach oben links. Für weitere Hinweise siehe &lt;a href=&quot;../../../sdk/script/fn/SetComDir.html&quot;&gt;SetComDir&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>COMD_UpLeft</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bewegungsrichtung: Schräg nach oben rechts. Für weitere Hinweise siehe &lt;a href=&quot;../../../sdk/script/fn/SetComDir.html&quot;&gt;SetComDir&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>COMD_UpRight</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verschleudert pObj in die angegebene Richtung. Diese Funktion ist für Lebewesen konzipiert, da sie die entsprechenden Aktivitäten setzt.</string> 
  </void> 
  <void property="name"> 
   <string>Fling</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, das weggeschleudert wird. Muss angegeben werden.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Schleudergeschwindigkeit</string> 
      </void> 
      <void property="name"> 
       <string>iXDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Schleudergeschwindigkeit</string> 
      </void> 
      <void property="name"> 
       <string>iYDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die aktuelle Befehlsrichtung eines Objekts. Diese gibt die momentane, beabsichtigte Bewegungsrichtung an. Die Auswirkung dieser Richtung hängt von der &lt;a href=&quot;../../../sdk/definition/procedures.html&quot;&gt;Prozedur&lt;/a&gt; der aktuellen &lt;a href=&quot;../../../sdk/definition/actmap.html&quot;&gt;Aktivität&lt;/a&gt; ab.</string> 
  </void> 
  <void property="name"> 
   <string>GetComDir</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt dessen ComDir abgefragt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Rotation in Grad von *pObj. Der Rückgabewert liegt zwischen -180° und 180°. 0° ist der Normalzustand.</string> 
  </void> 
  <void property="name"> 
   <string>GetR</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt dessen Rotation zurück gegeben werden soll. Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Rotations-Geschwindigkeit von pObj.</string> 
  </void> 
  <void property="name"> 
   <string>GetRDir</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt dessen Rotations-Geschwindigkeit zurück gegeben werden soll. Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Genauigkeit. Keine Angabe oder Null entspricht 10.</string> 
      </void> 
      <void property="name"> 
       <string>iPrecision</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Geschwindigkeit in X-Richtung von pObj.</string> 
  </void> 
  <void property="name"> 
   <string>GetXDir</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt dessen Geschwindigkeit zurück gegeben werden soll. Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Genauigkeit mit der die Geschwindigkeit zurückgegeben werden soll (Standardwert: 10)</string> 
      </void> 
      <void property="name"> 
       <string>iPrecision</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Geschwindigkeit in Y-Richtung von pObj.</string> 
  </void> 
  <void property="name"> 
   <string>GetYDir</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt dessen Geschwindigkeit zurück gegeben werden soll. Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Genauigkeit mit der die Geschwindigkeit zurückgegeben werden soll (Standardwert: 10)</string> 
      </void> 
      <void property="name"> 
       <string>iPrecision</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Veranlasst das Objekt dazu, zu springen. Dabei gelten sämtliche Beschränkungen, die auch bei Ansteuerung über die Tastatur gelten:
          Das Objekt kann nur springen, wenn es gerade steht (seine Action die Procedure &quot;WALK&quot; hat).&lt;br&gt;
          Im Wasser wird die Action &quot;Dive&quot; aktiviert.&lt;br&gt;
          Die Funktion gibt zurück, ob die Aktion erfolgreich durchgeführt wurde.
          </string> 
  </void> 
  <void property="name"> 
   <string>Jump</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, das springen soll.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Befehlsrichtung eines Objekts (siehe &lt;a href=&quot;../../../sdk/script/fn/GetComDir.html&quot;&gt;GetComDir&lt;/a&gt;)</string> 
  </void> 
  <void property="name"> 
   <string>SetComDir</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Befehlsrichtung. Muss &lt;a href=&quot;../../../sdk/script/fn/COMD_None.html&quot;&gt;COMD_None&lt;/a&gt;(), &lt;a href=&quot;../../../sdk/script/fn/COMD_Down.html&quot;&gt;COMD_Down&lt;/a&gt;(), &lt;a href=&quot;../../../sdk/script/fn/COMD_DownLeft.html&quot;&gt;COMD_DownLeft&lt;/a&gt;(), &lt;a href=&quot;../../../sdk/script/fn/COMD_DownRight.html&quot;&gt;COMD_DownRight&lt;/a&gt;(), &lt;a href=&quot;../../../sdk/script/fn/COMD_Left.html&quot;&gt;COMD_Left&lt;/a&gt;(), &lt;a href=&quot;../../../sdk/script/fn/COMD_Right.html&quot;&gt;COMD_Right&lt;/a&gt;(), &lt;a href=&quot;../../../sdk/script/fn/COMD_Up.html&quot;&gt;COMD_Up&lt;/a&gt;(), &lt;a href=&quot;../../../sdk/script/fn/COMD_UpLeft.html&quot;&gt;COMD_UpLeft&lt;/a&gt;() oder &lt;a href=&quot;../../../sdk/script/fn/COMD_UpRight.html&quot;&gt;COMD_UpRight&lt;/a&gt;() sein.</string> 
      </void> 
      <void property="name"> 
       <string>iComDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Befehlsrichtung gesetzt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Drehung eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetR</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Winkel in Grad</string> 
      </void> 
      <void property="name"> 
       <string>iR</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Drehungsgeschwindigkeit eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetRDir</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Rotationsgeschwindigkeit geteilt durch iPrecision</string> 
      </void> 
      <void property="name"> 
       <string>iRDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Genauigkeit. Keine Angabe oder Null entspricht 10.</string> 
      </void> 
      <void property="name"> 
       <string>iPrecision</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die horizontale Geschwindigkeit eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetXDir</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Horizontale Gechwindigkeit geteilt durch iPrecision.</string> 
      </void> 
      <void property="name"> 
       <string>iXDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt. Bei lokalem Aufruf Null.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Genauigkeit. Keine Angabe oder Null entspricht 10.</string> 
      </void> 
      <void property="name"> 
       <string>iPrecision</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die vertikale Geschwindigkeit eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetYDir</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Vertikale Gechwindigkeit geteilt durch iPrecision.</string> 
      </void> 
      <void property="name"> 
       <string>iYDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Genauigkeit. Keine Angabe oder Null entspricht 10.</string> 
      </void> 
      <void property="name"> 
       <string>iPrecision</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Simuliert die Bewegung eines freien Falles mit Anfangsgeschwindigkeit in die angegebene Richtung. Wenn die simulierte Bewegung ein Material mit der gewünschten Dichte durchläuft, gibt diese Funktion true zurück, ansonsten false.&lt;br&gt; Bei true wird die X- und Y-Position des Aufpralls in den angegebenen Variablen für iX und iY gespeichert, die Aufprallgeschwindigkeit in den angegebenen Variablen fü iXDir und iYDir. Siehe dazu &lt;a href=&quot;../../../sdk/script/Funcs.html#referenzen&quot;&gt;Referenzen&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>SimFlight</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Minimale Dichte des Materials nach dem auf der Wurfbahn gesucht wird. Keine Angabe oder Null entspricht 50 (festes Material).</string> 
      </void> 
      <void property="name"> 
       <string>iMinDensity</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Maximale Dichte des Materials nach dem auf der Wurfbahn gesucht wird. Keine Angabe oder Null entspricht 50 (festes Material).</string> 
      </void> 
      <void property="name"> 
       <string>iMaxDensity</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Anzahl der simulierten Frames bis zum Abbruch der Simulation. Keine Angabe oder Null entspricht -1 (Kein Abbruch).</string> 
      </void> 
      <void property="name"> 
       <string>iIteration</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Genauigkeit. Keine Angabe oder Null entspricht 10.</string> 
      </void> 
      <void property="name"> 
       <string>iPrecision</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt ein Kommado in die Kommandoliste eines Objekts hinzu (an den Anfang, siehe auch &lt;a href=&quot;../../../sdk/script/fn/AppendCommand.html&quot;&gt;AppendCommand&lt;/a&gt;). D.h. es wird ein Kommando hinzugefügt, welches das Objekt vor anderen vorher gegebenen Kommandos auszuführen hat (war vorher kein Kommando gesetzt, so entspricht AddCommand &lt;a href=&quot;../../../sdk/script/fn/SetCommand.html&quot;&gt;SetCommand&lt;/a&gt;) &lt;br&gt;
          Für Kommando-Beschreibungen siehe &lt;a href=&quot;../../../sdk/script/fn/SetCommand.html&quot;&gt;SetCommand&lt;/a&gt;
	</string> 
  </void> 
  <void property="name"> 
   <string>AddCommand</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dem das Kommando gegeben wird.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Kommandoname (als String). Siehe untere Tabelle </string> 
      </void> 
      <void property="name"> 
       <string>szCommand</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt für Aktion</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  X-Zielkoordinate</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Y-Zielkoordinate</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  zweites Zielobjekt</string> 
      </void> 
      <void property="name"> 
       <string>pTarget2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zeit (in Ticks/Frames), bis das Kommando abgebrochen wird (es wird dann mit dem nachsten in der Kommandoliste fortgesetzt)</string> 
      </void> 
      <void property="name"> 
       <string>iInterval</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  zusätzliche Daten zur Aktion</string> 
      </void> 
      <void property="name"> 
       <string>Data</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Anzahl der Wiederholungen (wenn das Kommando fehlschlägt), bis das Kommando abgebrochen wird.</string> 
      </void> 
      <void property="name"> 
       <string>iRetries</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Bestimmt, wie beim Fehlschlag des Commands verfahren wird.&lt;br&gt;&lt;br&gt;
            &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;iBaseMode&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Beschreibung&lt;/th&gt;
&lt;th&gt;Fehlschlagsmeldung und CallFailed-Aufrufe&lt;/th&gt;
&lt;th&gt;Nächster Befehl&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;C4CMD_SilentSub&lt;/td&gt;
&lt;td&gt;Stiller Unterbefehl&lt;/td&gt;
&lt;td&gt;Nur wenn dies der letzte Befehl ist&lt;/td&gt;
&lt;td&gt;Schlägt fehl&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;C4CMD_Sub&lt;/td&gt;
&lt;td&gt;Unterbefehl&lt;/td&gt;
&lt;td&gt;Wenn der nächste Befehl keine Wiederholungen mehr hat oder dies der letzte Befehl ist&lt;/td&gt;
&lt;td&gt;Schlägt fehl&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;C4CMD_SilentBase&lt;/td&gt;
&lt;td&gt;Stiller Basisbefehl&lt;/td&gt;
&lt;td&gt;Nie&lt;/td&gt;
&lt;td&gt;Schlägt nicht fehl&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;C4CMD_Base&lt;/td&gt;
&lt;td&gt;Basisbefehl&lt;/td&gt;
&lt;td&gt;Immer&lt;/td&gt;
&lt;td&gt;Schlägt nicht fehl&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
          </string> 
      </void> 
      <void property="name"> 
       <string>iBaseMode</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt ein Kommando der Kommandoliste eines Objekts am Ende hinzu. Das Objekt wird also das zuerst gegebene Kommando ausführen und sich danach automatisch dem mit AppendCommand hinzugefügten widmen.&lt;br&gt;
          Für Kommando-Beschreibungen siehe &lt;a href=&quot;../../../sdk/script/fn/SetCommand.html&quot;&gt;SetCommand&lt;/a&gt;&lt;br&gt;
          Bemerkung: Mit AppendCommand hinzugefügte Befehle werden nicht an gesteuerte Fahrzeuge weitergeleitet (siehe VehicleControl)</string> 
  </void> 
  <void property="name"> 
   <string>AppendCommand</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dem das Kommando gegeben wird.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Kommandoname (als String). Siehe untere Tabelle </string> 
      </void> 
      <void property="name"> 
       <string>szCommand</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt für Aktion</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  X-Zielkoordinate</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Y-Zielkoordinate</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  zweites Zielobjekt</string> 
      </void> 
      <void property="name"> 
       <string>pTarget2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zeit (in Ticks/Frames), bis das Kommando abgebrochen wird</string> 
      </void> 
      <void property="name"> 
       <string>iInterval</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  zusätzliche Daten zur Aktion</string> 
      </void> 
      <void property="name"> 
       <string>Data</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Anzahl der Wiederholungen (wenn das Kommando fehlschlägt), bis das Kommando abgebrochen wird.</string> 
      </void> 
      <void property="name"> 
       <string>iRetries</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Befehlsstapelmodus. Werte siehe &lt;a href=&quot;../../../sdk/script/fn/AddCommand.html&quot;&gt;AddCommand&lt;/a&gt;.</string> 
      </void> 
      <void property="name"> 
       <string>iBaseMode</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Beendet ein Kommado in der Kommandoliste eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>FinishCommand</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Kommando beendet wird.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Ob das Kommando als erfolgreich gewertet werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>fSuccess</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Index des Kommandos. 0 für das aktuelle, 1 für das als nächstes auszuführende usw.</string> 
      </void> 
      <void property="name"> 
       <string>iCommandNum</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt Informationen über ein Kommando eines Objekts zurück. Führt das Objekt momentan keine Aktion aus, so wird (bei jedem Wert von iElement) 0 zurückgegeben.</string> 
  </void> 
  <void property="name"> 
   <string>GetCommand</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, von dem ein Kommando abgefragt wird.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Information, die zurückgegeben werden soll. 0 oder kA: Name, 1: Target, 2: TargetX, 3: TargetY, 4: Target2, 5: Data</string> 
      </void> 
      <void property="name"> 
       <string>iElement</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nummer des Kommandos. 0 steht für das momentan aktive, 1 für das danach auszuführende usw.</string> 
      </void> 
      <void property="name"> 
       <string>iCommandNum</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt einem Objekt ein Kommando, welches dieses selbstständig (ggf. durch automatische Wegfindung) auszuführen versucht.
    </string> 
  </void> 
  <void property="name"> 
   <string>SetCommand</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dem das Kommando gegeben wird.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Kommandoname (als String). Siehe untere Tabelle </string> 
      </void> 
      <void property="name"> 
       <string>szCommand</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt für Aktion</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  X-Zielkoordinate</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Y-Zielkoordinate</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  zweites Zielobjekt</string> 
      </void> 
      <void property="name"> 
       <string>pTarget2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  zusätzliche Daten zur Aktion</string> 
      </void> 
      <void property="name"> 
       <string>Data</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Anzahl der Wiederholungen (wenn das Kommando fehlschlägt), bis das Kommando abgebrochen wird.</string> 
      </void> 
      <void property="name"> 
       <string>iRetries</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt die Farbmodulation eines Objekts ab. Diese ist ein Farbwert, der multiplikativ (oder auch additiv, bei entsprechend aktiviertem  BlitMode in der DefCore) aufgerechnet wird. Für weitere Hinweise siehe auch &lt;a href=&quot;../../../sdk/script/fn/SetClrModulation.html&quot;&gt;SetClrModulation&lt;/a&gt;().</string> 
  </void> 
  <void property="name"> 
   <string>GetClrModulation</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Färbung abgefragt werden soll. 0 bei lokalen Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, wird stattdessen die Farbmodulation dieses Grafikoverlays abgefragt. Das Overlay muss vorher mit &lt;a href=&quot;../../../sdk/script/fn/SetGraphics.html&quot;&gt;SetGraphics&lt;/a&gt; erstellt worden sein. Ab CR.</string> 
      </void> 
      <void property="name"> 
       <string>iOverlayID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt den indizierten Farbwert eines Objekts ab, nach dem die ColorByOwner-Flächern eingefärbt sind. Dieser konnte beispielsweise durch &lt;a href=&quot;../../../sdk/script/fn/SetOwner.html&quot;&gt;SetOwner&lt;/a&gt; oder &lt;a href=&quot;../../../sdk/script/fn/SetColor.html&quot;&gt;SetColor&lt;/a&gt; gesetzt worden sein.</string> 
  </void> 
  <void property="name"> 
   <string>GetColor</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Abgefragtes Objekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt den RGB-Farbwert der Färbung der ColorByOwner-Flächen eines Objekts ab. Diese werden beispielsweise durch &lt;a href=&quot;../../../sdk/script/fn/SetOwner.html&quot;&gt;SetOwner&lt;/a&gt;, &lt;a href=&quot;../../../sdk/script/fn/SetColor.html&quot;&gt;SetColor&lt;/a&gt; oder &lt;a href=&quot;../../../sdk/script/fn/SetColorDw.html&quot;&gt;SetColorDw&lt;/a&gt; gesetzt.</string> 
  </void> 
  <void property="name"> 
   <string>GetColorDw</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Abgefragtes Objekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den aktuellen Zeichenmodus eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>GetObjectBlitMode</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Zeichenstil abgefragt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, wird stattdessen der Blitmodus dieses Grafikoverlays abgefragt. Das Overlay muss vorher mit &lt;a href=&quot;../../../sdk/script/fn/SetGraphics.html&quot;&gt;SetGraphics&lt;/a&gt; erstellt worden sein. Ab CR.</string> 
      </void> 
      <void property="name"> 
       <string>iOverlayID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Frägt Name oder ID des Portraits eines Crew-Mitglieds ab.</string> 
  </void> 
  <void property="name"> 
   <string>GetPortrait</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, über dessen Portrait Informationen abgefragt werden sollen. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn TRUE gibt die Funktion die ID der Definition zurück, aus der das Portrait stammt. Andernfalls wird der Name des Portraits zurückgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>fGetID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn TRUE gibt die Funktion die Portraitwerte des permanenten Portraits zurück, sonst die des momentan verwendeten.</string> 
      </void> 
      <void property="name"> 
       <string>fGetPermanent</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt eine ungenutzte Overlay-ID zurück. Es wird der erste freie Overlay nach iBaseIndex zurückgegeben.</string> 
  </void> 
  <void property="name"> 
   <string>GetUnusedOverlayID</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des Overlays hinter dem die Suche beginnen soll.</string> 
      </void> 
      <void property="name"> 
       <string>iBaseIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Overlays durchsucht werden sollen. Kann bei lokalen Aufrufen 0 sein.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert die Farbmodulation eines Objekts. Diese ist ein Farbwert, der multiplikativ aufgerechnet wird. Bei &lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(255,0,0) würden also nur die Rotanteile der Grafik gezeichnet werden. &lt;a href=&quot;../../../sdk/script/fn/RGBa.html&quot;&gt;RGBa&lt;/a&gt;(255,255,255,128) würde die Grafik halbtransparent machen (sofern Alphaaddition nicht in den Grafikoptionen deaktiviert ist).</string> 
  </void> 
  <void property="name"> 
   <string>SetClrModulation</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Farbe, mit der moduliert wird. Wenn 0 angegeben wird, wird die Modulation deaktiviert. Für eine völlige Schwarzfärbung sollte also ein knapp darüber liegender Wert wie &lt;a href=&quot;../../../sdk/script/fn/RGB.html&quot;&gt;RGB&lt;/a&gt;(0,0,1); verwendet werden.</string> 
      </void> 
      <void property="name"> 
       <string>dwClr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Färbung verändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, wird stattdessen die Farbmodulation dieses Grafikoverlays gesetzt. Das Overlay muss vorher mit &lt;a href=&quot;../../../sdk/script/fn/SetGraphics.html&quot;&gt;SetGraphics&lt;/a&gt; erstellt worden sein. Ab CR.</string> 
      </void> 
      <void property="name"> 
       <string>iOverlayID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die ColorByOwner-Färbung eines Objekts. Dieser Aufruf entspricht dem Setzen eines neuen Besitzers mit &lt;a href=&quot;../../../sdk/script/fn/SetOwner.html&quot;&gt;SetOwner&lt;/a&gt; bei einem Spieler mit der Spielerfarbe iColor.</string> 
  </void> 
  <void property="name"> 
   <string>SetColor</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Farbe für ColorByOwner-Flächen</string> 
      </void> 
      <void property="name"> 
       <string>iColor</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die ColorByOwner-Färbung eines Objekts. Dieser Aufruf entspricht dem Setzen eines neuen Besitzers mit &lt;a href=&quot;../../../sdk/script/fn/SetOwner.html&quot;&gt;SetOwner&lt;/a&gt; bei einem Spieler mit der Spielerfarbe dwNewColor.</string> 
  </void> 
  <void property="name"> 
   <string>SetColorDw</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Farbe für ColorByOwner-Flächen</string> 
      </void> 
      <void property="name"> 
       <string>dwNewColor</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert die Grafik eines Objekts. Diese beeinflusst die Darstellung des betreffenden Objekts überall im Spiel: In der Landschaft, im Menü oder auf Maussteuerungssymbolen.</string> 
  </void> 
  <void property="name"> 
   <string>SetGraphics</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Name der neu zu setzenden Grafik. Bei 0 wird die Standardgrafik (Graphics.png bzw. bmp) gesetzt.</string> 
      </void> 
      <void property="name"> 
       <string>szGfxName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Grafik geändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Definition, von der die Grafik entnommen werden soll. Wenn nicht angegeben, gilt die Definition des Objekts, dessen Grafik geändert wird. Wenn nicht angegeben für iOverlay!=0, wird das entsprechende Overlay entfernt.</string> 
      </void> 
      <void property="name"> 
       <string>idSrcDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Index der zu setzenden Overlaygrafik. Muss wenn angegeben größer 0 sein, und fügt dem Objekt eine Grafik mit dem gegebenen Index hinzu, bzw. ändert sie wenn eine Grafik mit dem gegebenen Overlayindex schon existiert. Overlays mit größerem Index werden stets über denen mit kleinerem Index gezeichnet. Wenn ein Objekt nur eine Overlaygrafik hat, kann die symbolische Konstante GFX_Overlay (=1) verwendet werden.</string> 
      </void> 
      <void property="name"> 
       <string>iOverlay</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  
			Nur beachtet bei angegebenem iOverlay: Gibt an, wie das Overlay gezeichnet wird. Folgende Konstanten sind möglich:
			&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Konstante&lt;/th&gt;
&lt;th&gt;Wert&lt;/th&gt;
&lt;th&gt;Effekt&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GFXOV_MODE_None&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Ungültig: Nicht benutzen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;GFXOV_MODE_Base&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Die Basisgrafik der angegebenen Definition, das heißt das Zielrechteck (0,0,Width,Height,OffsetX,OffsetY), wird an der Objektposition über die Grafik gelegt.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GFXOV_MODE_Action&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Die Aktivität der angegebenen Objektdefinition. Ab CR.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;GFXOV_MODE_Picture&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Hat nur Auswirkung, wenn das Objekt im Inventar eines Clonks oder in einem Menü (z.B. Aktivieren in Gebäuden) auftaucht: Das Picture-Rechteck der angegebenen Definition wird über das Repräsentativbild des Objekts gezeichnet. Hiermit können zum Beispiel Zauberer auf Steine oder Zaubersymbole auf Schriftrollen gedruckt werden.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GFXOV_MODE_IngamePicture&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Legt die Picture-Grafik der Quelldefinition über das Shape des Zielobjektes. Ab CR.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;GFXOV_MODE_Object&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Legt die aktuelle Objektgrafik inklusive aller Overlays von pOverlayObject über das Objekt. Achtung: Ein Objekt darf sich nicht rekursiv über sich selbst als Overlay legen. Ab CR.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GFXOV_MODE_ExtraGraphics&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Benutzt die angegebene Grafik als Quellgrafik, um das Objekt erneut zu zeichnen. Die Quellkoordinaten sind die gleichen wie die, die auch beim Zeichnen von pObj verwendet wurden. Ab CR.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
		</string> 
      </void> 
      <void property="name"> 
       <string>iOverlayMode</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nur für iOverlayMode==GFXOV_MODE_Action: Aktivität in der Definition idSrcDef, dessen Grafik über das Zielobjekt gelegt werden soll. Diese Aktivität muss in der &lt;a href=&quot;../../../sdk/definition/actmap.html&quot;&gt;ActMap.txt&lt;/a&gt; der Quelldefinition definiert sein. Achtung: Die Länge dieser Animation sollte 1 sein; bewegte Animtionen sind noch nicht möglich. Ab CR.</string> 
      </void> 
      <void property="name"> 
       <string>szAction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Blitmodus der überlegten Grafik (z.B. additiv). Siehe &lt;a href=&quot;../../../sdk/script/fn/SetObjectBlitMode.html&quot;&gt;SetObjectBlitMode&lt;/a&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>dwBlitMode</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nur für iOverlayMode==GFXOV_MODE_Object: Objekt, dessen Grafik über das Zielobjekt gelegt werden soll. Ab CR.</string> 
      </void> 
      <void property="name"> 
       <string>pOvelayObject</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Transformiert die Grafik des angegebenen Objektes.</string> 
  </void> 
  <void property="name"> 
   <string>SetObjDrawTransform</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite der Grafik. 1000 ist die Standardbreite, negative Angaben bedeuten eine horizontale Spiegelung der Grafik. Die Grafik wird immer mittig (zentriert) dargestellt.</string> 
      </void> 
      <void property="name"> 
       <string>iWidth</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Horizontale schräge Streckung der Grafik: 0 bedeutet keine Streckung. 1000 bedeutet eine Verschiebung der horizontalen Kante um 45° nach links (oben nach links, unten nach rechts). Negative Werte bedeuten eine Verschiebung nach rechts.</string> 
      </void> 
      <void property="name"> 
       <string>iXSkew</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Horizontale Verschiebung der Grafik. Bei 1000 wird die Grafik einen Pixel nach rechts verschoben, bei negativen Angaben wird die Grafik nach links verschoben. Die Grafik um halbe Pixel zu verschieben, ist auch möglich.</string> 
      </void> 
      <void property="name"> 
       <string>iXAdjust</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Vertikale schräge Streckung der Grafik: 0 bedeutet keine Streckung. 1000 bedeutet eine Verschiebung der vertikalen Kante um 45° nach unten (links hoch, rechts runter). Negative Werte bedeuten eine Verschiebung nach oben.</string> 
      </void> 
      <void property="name"> 
       <string>iYSkew</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe der Grafik. 1000 ist die Standardhöhe, negative Angaben bedeuten eine vertikale Spiegelung der Grafik. Die Grafik wird immer mittig (zentriert) dargestellt.</string> 
      </void> 
      <void property="name"> 
       <string>iHeight</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Vertikale Verschiebung der Grafik. Bei 1000 wird die Grafik einen Pixel nach unten verschoben, bei negativen Angaben wird die Grafik nach oben verschoben. Die Grafik um halbe Pixel zu verschieben, ist auch möglich.</string> 
      </void> 
      <void property="name"> 
       <string>iYAdjust</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Das Objekt dessen Grafik transformiert dargestellt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des Overlays, dessen Transformation angepasst werden soll. Bei 0 (default) wird die Hauptgrafik transformiert.</string> 
      </void> 
      <void property="name"> 
       <string>iOverlayID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert den Zeichenmodus für eine Objekts. Die möglichen Werte entsprechen denen des DefCore-Flags BlitMode (siehe Anmerkung). Die Funktion gibt jeweils den vorher gesetzten Blitmodus zurück.</string> 
  </void> 
  <void property="name"> 
   <string>SetObjectBlitMode</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Neuer Zeichenmodus (mögliche Werte siehe unten) - bei 0 wird das Objekt auf seinen Definitions-Blitmodus zurückgesetzt. Ansonsten wird Bit 8 (benutzerdefinierter Farbwert) implizit gesetzt.</string> 
      </void> 
      <void property="name"> 
       <string>dwNewBlitMod</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Zeichenstil geändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, wird stattdessen der Blitmodus dieses Grafikoverlays gesetzt. Das Overlay muss vorher mit &lt;a href=&quot;../../../sdk/script/fn/SetGraphics.html&quot;&gt;SetGraphics&lt;/a&gt; erstellt worden sein. Ab CR.</string> 
      </void> 
      <void property="name"> 
       <string>iOverlayID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert die Repräsentativgrafik eines Objekts auf ein neues Zielrechteck der aktuell benutzten Grafik. Die Repräsentativgrafik wird beispielsweise im Menü oder der Inventarliste des ausgewählten Clonks verwendet. Siehe auch Eintrag Picture in der &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore.txt&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>SetPicture</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position der oberen linken Ecke des neuen Grafikrechtecks</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position der oberen linken Ecke des neuen Grafikrechtecks</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite des neuen Grafikrechtecks</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe des neuen Grafikrechtecks</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Bildgrafik geändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert das Portrait eines Crew-Mitglieds während des Spiels.</string> 
  </void> 
  <void property="name"> 
   <string>SetPortrait</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des zu setzenden Portraits. Dabei wird die Datei &quot;PortraitX.png&quot; benutzt (wobei X der Name ist). Dieser Parameter kann die folgenden Spezialwerte annehmen:
            &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Wert&lt;/th&gt;
&lt;th&gt;Bedeutung&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;none&quot;&lt;/td&gt;
&lt;td&gt;Portrait wird entfernt.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;&quot;random&quot;&lt;/td&gt;
&lt;td&gt;Aus den vorhandenen Portraits wird eines zufällig ausgewählt.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;custom&quot;&lt;/td&gt;
&lt;td&gt;Das Portrait wird auf das individuelle Portrait des Objekts, sofern vorhanden, geändert.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
	        </string> 
      </void> 
      <void property="name"> 
       <string>szPortrait</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Portrait geändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Definition, von der das Portrait entnommen werden soll. Wenn nicht angegeben, gilt die Definition des Objekts, dessen Grafik geändert wird.</string> 
      </void> 
      <void property="name"> 
       <string>idSrcDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn TRUE wird das neue Portrait in der Spielerdatei vermerkt und bei weiteren Runden ebenfalls verwendet. Andernfalls verfällt das Portrait nach dem Ende der Runde.</string> 
      </void> 
      <void property="name"> 
       <string>fPermanent</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Kopiert die Grafik des neuen Portraits in die Spielerdatei des Spielers und setzt das Portrait auf &quot;custom&quot;. Dies bewirkt, dass das Portrait auch dann noch erhalten bleibt, wenn die Definition, aus der das Objekt kommt, nicht mehr vorhanden ist. Allerdings lässt sich dann nicht mehr zurückverfolgen, woher das Portrait stammt oder wie es heißt.</string> 
      </void> 
      <void property="name"> 
       <string>fCopyGfx</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Kauft ein Objekt für iForPlr, und zieht iPayPlr Geld ab. Wenn dieser nicht genug Geld oder das Objekt nicht im Heimatbasismaterial hat, wird der Vorgang nicht ausgeführt.</string> 
  </void> 
  <void property="name"> 
   <string>Buy</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des Objekttyps, der gekauft wird</string> 
      </void> 
      <void property="name"> 
       <string>idBuyObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, dem das Objekt hinterher gehört</string> 
      </void> 
      <void property="name"> 
       <string>iForPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, der den Kauf bezahlt</string> 
      </void> 
      <void property="name"> 
       <string>iPayPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt, in das das neu gekaufte Objekt hineinversetzt wird</string> 
      </void> 
      <void property="name"> 
       <string>pToBase</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn ungleich Null, werden Fehlermeldugnen wie &quot;Kaufen nicht möglich&quot; aufgrund von Geldmangel angezeigt.</string> 
      </void> 
      <void property="name"> 
       <string>fShowErrors</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verschleudert iNumber Objekte an angegebener Position mit einer Geschwindigkeit von iLevel. Bei einem lokalen Aufruf haben die erzeugten Objekte den selben Besitzer wie das aufrufende Objekt.</string> 
  </void> 
  <void property="name"> 
   <string>CastObjects</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des Objekttyps, der verschleudert wird</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Anzahl verschleuderter Objekte.</string> 
      </void> 
      <void property="name"> 
       <string>iNumber</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Geschwindigkeit der verschleuderten Objekte</string> 
      </void> 
      <void property="name"> 
       <string>iLevel</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  X-Ausgangsposition. Offset zum aufrufenden Objekt bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Y-Ausgangsposition. Offset zum aufrufenden Objekt bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt ein Objekt vom Typ id als Inhalt von pObj. Das Objekt wird aus seinen Komponenten zusammen gesetzt, die in pObj enthalten sein müssen. Andernfalls wird eine Meldung ausgegeben, welche Objekte noch benötigt werden. Auch ComposeContents produziert den Engine Objekt-Call BuildNeedsMaterial, durch den die Meldung über noch benötigtes Material ausgewertet und abgefangen werden kann.</string> 
  </void> 
  <void property="name"> 
   <string>ComposeContents</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Typ des zu erstellenden Objekts</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, welches die benötigten Komponenten enthält</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sollte statt &lt;a href=&quot;../../../sdk/script/fn/CreateObject.html&quot;&gt;CreateObject&lt;/a&gt; benutzt werden, wenn ein Gebäude oder eine Baustelle erzeugt werden soll. Bei lokalen Aufrufen dieser Funktion wird die angegebene Position zu Offset-Koordinaten zum aufrufenden Objekt.
Wenn fCheckSite 1 ist, wird die Baustelle vorher auf ihre Eignung überprüft. Ist die Position ungeeignet (z.B. durch unebenen Untergrund oder andere Gebäude), wird beim aufrufenden Objekt eine entsprechende Meldung ausgegeben und die Funktion gibt 0 zurück.</string> 
  </void> 
  <void property="name"> 
   <string>CreateConstruction</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Typ des zu erstellenden Objekts</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iXOffset</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iYOffset</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Besitzer des zu erstellenden Objekts (Index eines Spielers oder &lt;a href=&quot;../../../sdk/script/fn/NO_OWNER.html&quot;&gt;NO_OWNER&lt;/a&gt; für keinen Besitzer)</string> 
      </void> 
      <void property="name"> 
       <string>iOwner</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Gibt die Fertigstellung des Objekts in Prozent an (muss mindestens 1 sein)</string> 
      </void> 
      <void property="name"> 
       <string>iCompletion</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Bestimmt, ob die Landschaft an die Baustelle angepasst werden soll (inkl. Fundament.</string> 
      </void> 
      <void property="name"> 
       <string>fTerrain</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Überprüft die Baustelle vorher auf ihre Eignung</string> 
      </void> 
      <void property="name"> 
       <string>fCheckSite</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt ein Objekt vom Typ id als Inhalt von pObj.</string> 
  </void> 
  <void property="name"> 
   <string>CreateContents</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Typ des zu erstellenden Objekts</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Hierin wird das Objekt erstellt</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Anzahl zu erstellender Objekte. Ab 4.9.6.0 CR</string> 
      </void> 
      <void property="name"> 
       <string>iCount</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt ein Objekt des angegebenen Typs an der angegebenen Position. iXOffset und iYOffset bestimmen die Position in absoluten Pixel-Koordinaten der Landschaft (Mitte Unterkante des Objekts). Bei lokalen Aufrufen dieser Funktion wird die angegebene Position zu Offset-Koordinaten zum aufrufenden Objekt.</string> 
  </void> 
  <void property="name"> 
   <string>CreateObject</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Typ des zu erstellenden Objekts</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iXOffset</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iYOffset</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Besitzer des zu erstellenden Objekts (Index eines Spielers oder &lt;a href=&quot;../../../sdk/script/fn/NO_OWNER.html&quot;&gt;NO_OWNER&lt;/a&gt; für keinen Besitzer)</string> 
      </void> 
      <void property="name"> 
       <string>iOwner</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt ein Objekt des gewünschten Typs irgendwo in der Landscape im gewünschten Material und liefert es zurück.</string> 
  </void> 
  <void property="name"> 
   <string>PlaceInMaterial</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekttyp</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Material</string> 
      </void> 
      <void property="name"> 
       <string>iMaterial</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Anzahl Wiederholungen</string> 
      </void> 
      <void property="name"> 
       <string>iRetries</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt iAmount viele Objekte im angegebenen Zielrechteck (optional) im angegebenen Material.
Gibt die Anzahl der Iterationen zurück, oder -1 wenn die Erzeugung fehlschlägt.
		</string> 
  </void> 
  <void property="name"> 
   <string>PlaceObjects</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des zu platzierenden Objekts</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Menge der zu erzeugenden Objekte</string> 
      </void> 
      <void property="name"> 
       <string>iAmount</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Material in die Objekte erzeugt werden soll. Hier kann entweder die Materialnummer angegeben werden oder folgende Zeichenketten:
&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;iMat&lt;/th&gt;
&lt;th&gt;Erzeugung in&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;GBackSolid&quot;&lt;/td&gt;
&lt;td&gt;Objekte werden in festem Material erzeugt. Siehe auch &lt;a href=&quot;../../../sdk/script/fn/GBackSolid.html&quot;&gt;GBackSolid&lt;/a&gt;()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;&quot;GBackSemiSolid&quot;&lt;/td&gt;
&lt;td&gt;Objekte werden in festem oder flüssigem Material erzeugt. Siehe auch &lt;a href=&quot;../../../sdk/script/fn/GBackSemiSolid.html&quot;&gt;GBackSemiSolid&lt;/a&gt;()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;GBackLiquid&quot;&lt;/td&gt;
&lt;td&gt;Objekte werden in flüssigem Material erzeugt. Siehe auch &lt;a href=&quot;../../../sdk/script/fn/GBackLiquid.html&quot;&gt;GBackLiquid&lt;/a&gt;()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;&quot;GBackSky&quot;&lt;/td&gt;
&lt;td&gt;Objekte werden im freien Himmel erzeugt. Siehe auch &lt;a href=&quot;../../../sdk/script/fn/GBackSky.html&quot;&gt;GBackSky&lt;/a&gt;()&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>iMat</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Linke Kante der Position. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Obere Kante der Position. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Platzierrechteck Breite. Wenn nicht angegeben wird das Ende der Landschaft angenommen</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Platzierrechteck Höhe. Wenn nicht angegeben wird das Ende der Landschaft angenommen</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn true, werden alle Objekte oberhalb des angegeben Materials erzeugt. (Ohne Berücksichtigung des Zielrechtecks)</string> 
      </void> 
      <void property="name"> 
       <string>fOnSurface</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn true, wird nicht sichergestellt dass des Objekt fest in der Erde ist. Dies ist z.B.: nötig wenn man Objekte im Flüssigkeiten erstellen will.</string> 
      </void> 
      <void property="name"> 
       <string>fNoStuck</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Lässt ein Objekt explodieren. Die Explosion beschädigt Landschaft und Objekte, und das Objekt wird mitsamt Inhalt vor der Explosion entfernt. Wenn sich das Objekt in einen anderen Objekt befindet, werden alle anderen Inhaltsobjekte und das enthaltende Objekt beschädigt. Als Verursacher des Schadens gilt der Besitzer des explodierenden Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>Explode</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Explosionsstärke. Die Explosionsstärke bestimmt das Ausmaß des Explosionsschadens sowie die akustische Gestaltung. Bis Stärke 29 einschließlich wird Blast1 abgespielt, von Stärke 30 bis stärke 39 einschließlich Blast2, und bei Werten darüber Blast3.</string> 
      </void> 
      <void property="name"> 
       <string>iLevel</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das explodiert. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, wird ein Objekt dieser Art und keine Partikel erzeugt. Es wird angenommen, dass das neu erstellte Objekt den Explosionseffekt übernimmt. Ab 4.9.6.0 CR</string> 
      </void> 
      <void property="name"> 
       <string>idEffect</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Name eines Partikels, der statt der normalen Explosionspartikel erzeugt wird.</string> 
      </void> 
      <void property="name"> 
       <string>szParticle</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Entfernt ein Objekt.</string> 
  </void> 
  <void property="name"> 
   <string>RemoveObject</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das entfernt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn wahr, wird der Inhalt des Objekts vor der Vernichtung ausgeleert. Ansonsten wird er mit vernichtet.</string> 
      </void> 
      <void property="name"> 
       <string>fEjectContents</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verkauft ein Objekt mitsamt Inhalt.</string> 
  </void> 
  <void property="name"> 
   <string>Sell</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, an den verkauft wird</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das verkauft wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zerlegt ein Objekt in seine Bestandteile. Die Bestandteile werden in zufälliger Drehung und mit geringer Geschwindigkeit in zufälliger Richtung an der Stelle erzeugt, an der sich das Objekt befand. Das Objekt wird anschließend vernichtet. Wenn sich das Objekt in einem Behälter befand, werden auch die Komponenten nach der Erschaffung in den Behälter versetzt.</string> 
  </void> 
  <void property="name"> 
   <string>Split2Components</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das zerlegt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sammelt ein Objekt auf. Der Befehl führt dieselben Funktionen aus, als wäre das Objekt durch den normalen Collection-Bereich des Objekts eingesammelt worden (z.B. RejectCollect, Prüfung auf Flagge/Flagge abnehmbar, Hit-Aufruf bei OCF_HitSpeed2, usw.). Die einzigen Unterschiede sind, dass keine Prüfung der Position von pItem auf den Entrance-Bereich von pTarget/this() gemacht wird, und dass pItem nicht auf OCF_Carryable geprüft wird.&lt;br&gt;Mit diesem Befehl lässt sich beispielsweise das Aufnehmen von Objekten aus Containern heraus realisieren. Wenn die Aufnahme fehlschlug (Beispielsweise durch den RejectCollect-Aufruf oder weil der Container voll war), gibt die Funktion 0 zurück. Ansonsten 1.</string> 
  </void> 
  <void property="name"> 
   <string>Collect</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, das aufgesammelt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>pItem</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das pItem aufsammeln soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das Objekt, in dem sich pObj befindet. Rückgabewert Null, wenn pObj sich im Freien befindet.</string> 
  </void> 
  <void property="name"> 
   <string>Contained</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, für welches die Überprüfung durchgeführt werden soll; Null für lokale Aufrufe</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das indizierte Objekt, das in pObj enthalten ist.</string> 
  </void> 
  <void property="name"> 
   <string>Contents</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index des Objekts in pObj, Zählung beginnt mit 0</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, in welchem gesucht werden soll; null für lokale Aufrufe</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Anzahl der Objekte vom Typ id, die in pObj enthalten sind.</string> 
  </void> 
  <void property="name"> 
   <string>ContentsCount</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekttyp, der gezählt wird</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, in dessen Inhalt gezählt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Entfernt sämtlichen Inhalt von *pObj, und gibt diesen dem aufrufenden Objekt.</string> 
  </void> 
  <void property="name"> 
   <string>GrabContents</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt dessen Inhalt gestohlen werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Rotiert den Inhalt eines Objekts. Dabei wird immer genau ein Objekt weiter gescrollt (im Gegensatz zu &lt;a href=&quot;../../../sdk/script/fn/ShiftContents.html&quot;&gt;ShiftContents&lt;/a&gt;). Es wird außerdem kein ControlContents aufgerufen. &lt;br&gt;
          Zurückgegeben wird ein Pointer auf das Objekt, das sich nach der Rotation am Anfang der Inhaltsliste befindet.</string> 
  </void> 
  <void property="name"> 
   <string>ScrollContents</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Inhalt rotiert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sortiert die Inhaltsobjekte so um, dass das nächste Objekt mit anderer ID vorne liegt. Die häufigste Anwendung für diesen Befehl ist ein Inventarwechsel.</string> 
  </void> 
  <void property="name"> 
   <string>ShiftContents</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Inhaltsobjekte rotiert werden sollen. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn wahr, wird rückwärts durchsortiert.</string> 
      </void> 
      <void property="name"> 
       <string>fShiftBack</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  ID des Objekttyps, der als nächstes ausgewählt sein soll. Wenn dieser Parameter angegeben ist, wird kein ControlContents-Aufruf mehr getätigt, sondern es wird direkt und ohne das Abspielen eines Sounds durchgeschaltet. Damit lässt sich beispielsweise das Durchschalten des Inventars in ControlConents überladen, und mit eigenen Sounds oder Zusatzaktivitäten versehen.</string> 
      </void> 
      <void property="name"> 
       <string>idTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn wahr, werden ControlContents- und Selection-Aufrufe getätigt.</string> 
      </void> 
      <void property="name"> 
       <string>fDoCalls</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: Alle Kategorien</string> 
  </void> 
  <void property="name"> 
   <string>C4D_All</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: Wird hinter der Landschaft gezeichnet. Nützlich beispielsweise für Effektobjekte wie Wolken oder Himmelskörper.</string> 
  </void> 
  <void property="name"> 
   <string>C4D_Background</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: Spielziele</string> 
  </void> 
  <void property="name"> 
   <string>C4D_Goal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: Bauplan.</string> 
  </void> 
  <void property="name"> 
   <string>C4D_Knowledge</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: Lebewesen.</string> 
  </void> 
  <void property="name"> 
   <string>C4D_Living</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: kleines Objekt.</string> 
  </void> 
  <void property="name"> 
   <string>C4D_Object</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: Bewegt sich parallax zum Rest der Landschaft. Das bedeutet, dass sich die scheinbare Objektposition je nach Scrollposition des Viewports ändert. Damit können beispielsweise Objekte scheinbar in den Hintergrund geschoben, oder Statusanzeigen realisiert werden.&lt;br&gt;
			Die parallaxe Verschiebung wird dabei prozentual zum Normalverhalten in den ersten beiden indizierten, lokalen Variablen (siehe &lt;a href=&quot;../../../sdk/script/fn/Local.html&quot;&gt;Local&lt;/a&gt;()) des Objekts angegeben (Local(0) und Local(1) jeweils für die horizontale respektive vertikale Verschiebung). Das heißt, um das Normalverhalten zu erzielen, müssen diese Werte jeweils auf 100 gesetzt werden. Stehen sie auf 0, gleicht die Objektposition der Sichtfensterposition. Für Hintergrundparallaxität werden also gewöhnlich Werte zwischen 0 und 100 gewählt.&lt;br&gt;
Um Objekte direkt am Sichtfenster des Spielers zu positionieren, um so zum Beispiel Statusanzeigen zu realisieren, können Local(0) und Local(1) auf 0 gesetzt werden. Die Objektposition ist dann immer relativ zur oberen linken Ecke des Sichtfensters. Ab CR können für die Position solcher Objekte auch negative Werte angegeben werden: Diese werden dann jeweils vom rechten bzw. unteren Rand des Sichtfensters gerechnet. Auf diese Weise lassen sich Statusanzeigen auch am rechten oder unteren Rand der Sichtfenster platzieren.
		</string> 
  </void> 
  <void property="name"> 
   <string>C4D_Parallax</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: Spielregeln</string> 
  </void> 
  <void property="name"> 
   <string>C4D_Rule</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: Unbewegliche Hintergrundobjekte.</string> 
  </void> 
  <void property="name"> 
   <string>C4D_StaticBack</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: Gebäude.</string> 
  </void> 
  <void property="name"> 
   <string>C4D_Structure</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Objektkategorie: Fahrzeug.</string> 
  </void> 
  <void property="name"> 
   <string>C4D_Vehicle</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt die Objektkategorie eines Objekts ab. Die Objektkategorie wird normalerweise über die &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore&lt;/a&gt; gesetzt, und danach höchstens in seltenen Fällen mit &lt;a href=&quot;../../../sdk/script/fn/SetCategory.html&quot;&gt;SetCategory&lt;/a&gt; geändert. Sie bestimmt das allgemeine Verhalten eines Objekts und dessen Platzierung. Eine mit GetCategory abgefragt Kategorie kann mit dem &amp;amp;-Operator gegen eine C4D_-Konstante geprüft werden.</string> 
  </void> 
  <void property="name"> 
   <string>GetCategory</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Kategorie abgefragt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, wird die Kategorie dieser Definition zurückgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert die Kategorie eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetCategory</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objektkategorie. Sollte ein gültiger C4D_x()-Wert sein.</string> 
      </void> 
      <void property="name"> 
       <string>iCategory</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zu veränderndes Objekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Prüft, ob ein Objekt nur aus einem Objekttyp besteht.</string> 
  </void> 
  <void property="name"> 
   <string>ComponentAll</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Das Objekt, dessen Components geprüft werden sollen.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID der erwarteten Components.</string> 
      </void> 
      <void property="name"> 
       <string>idComponents</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert Objektkomponenten.</string> 
  </void> 
  <void property="name"> 
   <string>GetComponent</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Anzahl einer Komponente eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetComponent</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Hinzuzufügende Komponente</string> 
      </void> 
      <void property="name"> 
       <string>idComponent</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zu setzende Anzahl der Komponenten mit der ID idComponent</string> 
      </void> 
      <void property="name"> 
       <string>iCount</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zu veränderndes Objekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt eine Botschaft a la &quot;[name] ist von uns gegangen&quot;  über dem aufrufenden Objekt aus.</string> 
  </void> 
  <void property="name"> 
   <string>DeathAnnounce</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert den Atemwert eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>DoBreath</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Veränderung des Atemwertes; positiv oder negativ in Prozent zum Maximalwert. 100% entsprechen hierbei dem maximalen Physical-Wert von 100000.</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Atem verändert wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt zurück, ob das Objekt noch am Leben ist.</string> 
  </void> 
  <void property="name"> 
   <string>GetAlive</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Zustand geprüft werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den aktuellen Atemwert eines Objekts in Prozent. 100% stellen hierbei den maximalen Physical-Wert von 100000 dar. Siehe auch DefCore.txt Sektion [Physical]. pObj Null bei lokalem Aufruf.</string> 
  </void> 
  <void property="name"> 
   <string>GetBreath</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Das Objekt, dessen Atemwert gesucht wird.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Tötet ein Objekt. Nur Lebewesen.</string> 
  </void> 
  <void property="name"> 
   <string>Kill</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das getötet wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn gesetzt, wird das Objekt auch dann getötet, wenn ein Effekt das zu unterbrechen versucht. Ab CE.</string> 
      </void> 
      <void property="name"> 
       <string>fForced</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Schlägt pObj.</string> 
  </void> 
  <void property="name"> 
   <string>Punch</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Das Opfer.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Stärke des Schlages (abgezogene Energiemenge).</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Legt fest, ob ein Objekt lebt.</string> 
  </void> 
  <void property="name"> 
   <string>SetAlive</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0 = Tot; ansonsten lebendig</string> 
      </void> 
      <void property="name"> 
       <string>fAlive</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Zustand gesetzt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Wert von &quot;CrewMember&quot; aus der DefCore von id.</string> 
  </void> 
  <void property="name"> 
   <string>CrewMember</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zu prüfende Objektdefinition.</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt einem Clonk Erfahrungspunkte.</string> 
  </void> 
  <void property="name"> 
   <string>DoCrewExp</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Veränderung des Erfahrungswertes</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Crewobjekt, dem Erfahrung gegeben werden soll</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Captain von iPlayer. Nur bei der Spielregel &quot;Verlust Captain&quot;.</string> 
  </void> 
  <void property="name"> 
   <string>GetCaptain</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt ab, welcher Spieler ein Objekt zur Zeit kontrolliert bzw. zuletzt kontrolliert hat. Bei Mannschaftsmitgliedern ist dies normalerweise immer der Besitzer; bei Fahrzeugen der Controller des Clonks, der es zuletzt bedient (angefasst und geschoben/gezogen) hat. Objekte, die von Lebewesen aufgenommen werden, nehmen automatisch den Controller ihres Containers an. Beim Besitzerwechsel (siehe &lt;a href=&quot;../../../sdk/script/fn/SetOwner.html&quot;&gt;SetOwner&lt;/a&gt;())wird automatisch auch der Controller auf den neuen Besitzer geändert.</string> 
  </void> 
  <void property="name"> 
   <string>GetController</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen kontrollierender Spieler abgegfragt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt ein Mannschaftsmitglied eines Spielers zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetCrew</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spielers, dessen Mannschaftsmitglied zurückgegeben werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index des Clonks in der Crew</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Anzahl der Mannschaftsmitglieder eines Spielers zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetCrewCount</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spielers, dessen Mannschaftsmitglieder gezählt werden sollen.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt ab, ob ein Mannschaftsmitglied gegenwärtig angewählt werden kann.</string> 
  </void> 
  <void property="name"> 
   <string>GetCrewEnabled</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Status abgefragt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt den momentan kontrollierten Clonk eines Spielers zurück. Werden mehrere Clonks gelenkt, ist es bei iIndex=0 (oder weggelassen) immer das primär ausgewählte Mannschaftsmitglied. Also das, dem beispielsweise auch die Sicht folgt.</string> 
  </void> 
  <void property="name"> 
   <string>GetCursor</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spielers, dessen kontrollierter Clonk zurückgegeben werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Index, mit dem durch die ausgewählte Crew durchgeschaltet werden kann. 0 gibt immer den aktiv gelenkten Clonk zurück.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den höchstrangigen aktiven Clonk von iPlayer.</string> 
  </void> 
  <void property="name"> 
   <string>GetHiRank</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Überträgt die Infosektion von einem anderen Objekt zu pFrom bzw. dem aufrufenden Objekt. Die Infosektion enthält Namen, Rang, permantente Physicals, usw. Mit diesem Befehl lassen sich beispielsweise Wiederbelebungen realisieren, indem einfach beim Tod eines Clonks ein neuer erstellt und die Infosektion übertragen wird.</string> 
  </void> 
  <void property="name"> 
   <string>GrabObjectInfo</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt (Clonk), von dem die Infosektion genommen werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pFrom</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt (Clonk), das die Infosektion übernehmen soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pTo</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt ein Objekt (z.B. einen Clonk) der Crew eines Spielers hinzu. Das Objekt muss die CrewMember-Eigenschaft in der DefCore gesetzt haben.&lt;br&gt;
        Gibt 1 zurück, wenn das Objekt erfolgreich der Crew hinzugefügt wurde.</string> 
  </void> 
  <void property="name"> 
   <string>MakeCrewMember</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt (Clonk), das der Crew hinzugefügt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler, dessen Crew das Objekt hinzugefügt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Aktiviert oder deaktiviert Mannschaftsmitglieder. Deaktivierte Mannschaftsmitglieder können nicht mehr vom Spieler angewählt werden. So kann es auch passieren, dass ein Spieler zwar 0 Mannschaftsmitglieder zur Auswahl hat, aber trotzdem nicht eliminiert ist. Nur für Objekte, die auch wirklich zu einer Mannschaft gehören. Deaktivierte Mannschaftsmitglieder sind automatisch nicht mehr ausgewählt.</string> 
  </void> 
  <void property="name"> 
   <string>SetCrewEnabled</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Gibt an, ob das Mannschaftsmitglied aktiviert oder deaktiviert werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>fEnabled</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Status verändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt ein Objekt (z.B. einen Clonk) der Crew eines Spielers hinzu oder entfernt dieses aus der Crew. Das Objekt muss die CrewMember-Eigenschaft in der DefCore gesetzt haben.</string> 
  </void> 
  <void property="name"> 
   <string>SetCrewStatus</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spielers, dessen Crew verändert werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>&lt;code&gt;true&lt;/code&gt; wenn der Clonk der Crew hinzugefügt und &lt;code&gt;false&lt;/code&gt; wenn er aus dieser entfernt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>fInCrew</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>CrewMember-Objekt welches hinzugefügt oder entfernt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pCrew</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Wählt die gesamte Mannschaft eines Spieler ab. Nach dem Aufruf dieses Befehls sollte mit &lt;a href=&quot;../../../sdk/script/fn/SelectCrew.html&quot;&gt;SelectCrew&lt;/a&gt; wieder ein Clonk angewählt werden.</string> 
  </void> 
  <void property="name"> 
   <string>UnselectCrew</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler, dessen Mannschaft abgewählt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt einen Menüeintrag hinzu.</string> 
  </void> 
  <void property="name"> 
   <string>AddMenuItem</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Text des neuen Menüeintrags</string> 
      </void> 
      <void property="name"> 
       <string>szCaption</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Kommando, das bei Auswahl des Menüeintrags ausgeführt werden soll. Kann entweder ein Funktionsname oder ein Statement sein.</string> 
      </void> 
      <void property="name"> 
       <string>szCommand</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Die ID wird als &lt;a href=&quot;../../../sdk/script/fn/Par.html&quot;&gt;Par&lt;/a&gt;(0) des szCommand übergeben und als Bild für den Menüeintrag verwendet. Der Name der Definition kann mit %s in szCaption verwendet werden.</string> 
      </void> 
      <void property="name"> 
       <string>idItem</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Menü der Eintrag hinzugefügt werden soll. Kann bei lokalen Aufrufen 0 sein.</string> 
      </void> 
      <void property="name"> 
       <string>pMenuObject</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Gewünschte Zahl, die neben dem Menüeintrag angezeigt werden soll (ähnlich der Mengenanzeige im Aktivieren-Menü)</string> 
      </void> 
      <void property="name"> 
       <string>iCount</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wird als 2. Parameter an die in szCommand angegebene Funktion übergeben (siehe Anmerkung)</string> 
      </void> 
      <void property="name"> 
       <string>iParameter</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Beschreibungstext des neuen Menüeintrags</string> 
      </void> 
      <void property="name"> 
       <string>szInfoCaption</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zusatzparameter für das Verhalten des Menüeintrags.&lt;br&gt;
					Untere 7 Bits (0-127): Menüsymbol.&lt;br&gt;
					0: Normal&lt;br&gt;
					1: Rangsymbol. Bei angegebenem idItem wird ggf. die Rank.png der Definition genutzt. iCount gibt die Ranghöhe an&lt;br&gt;
					2: Picturefacet, das um XPar1-fache Picturebreite nach rechts verschoben ist. Damit lassen sich mehrere Menüsymbole innerhalb einer Definition unterbringen.&lt;br&gt;
					3: XPar1 gibt ein Objekt an, dessen Picture-Grafik mit Rang gezeichnet wird. Hat das Objekt keine Infosektion (und dmait keinen Rang), so wird in Kontextmenüs dennoch ein entsprechender Leerraum gelassen. Ab CE.&lt;br&gt;
					4: XPar1 gibt ein Objekt an, dessen Picture-Grafik gezeichnet wird. Ab CE.&lt;br&gt;
					Bit 8 (128): XPar2 wird als Wertangabe benutzt, und überschreibt die Standardangabe (Wert der Definition idItem). Siehe auch iExtra von &lt;a href=&quot;../../../sdk/script/fn/CreateMenu.html&quot;&gt;CreateMenu&lt;/a&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>iExtra</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Erster Zusatzparameter für iExtra.</string> 
      </void> 
      <void property="name"> 
       <string>XPar1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zweiter Zusatzparameter für iExtra.</string> 
      </void> 
      <void property="name"> 
       <string>XPar2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Entfernt alle Einträge aus einem Menü.</string> 
  </void> 
  <void property="name"> 
   <string>ClearMenuItems</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, aus dessen Menü alle Einträge geleert werden sollen. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pMenuObject</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Schließt das Menü eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>CloseMenu</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Menü geschlossen wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt ein benutzerdefiniertes Menü in pMenuObject. Menüeinträge müssen mit &lt;a href=&quot;../../../sdk/script/fn/AddMenuItem.html&quot;&gt;AddMenuItem&lt;/a&gt; hinzugefügt werden.</string> 
  </void> 
  <void property="name"> 
   <string>CreateMenu</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objektdefinition, deren Bild als Symbol verwendet wird</string> 
      </void> 
      <void property="name"> 
       <string>idSymbol</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, in welchem das Menü geöffnet wird; kann bei lokalen Aufrufen Null sein</string> 
      </void> 
      <void property="name"> 
       <string>pMenuObject</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Erhält das Menükommando (siehe &lt;a href=&quot;../../../sdk/script/fn/AddMenuItem.html&quot;&gt;AddMenuItem&lt;/a&gt;); kann bei lokalen Aufrufen Null sein</string> 
      </void> 
      <void property="name"> 
       <string>pCommandObject</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zusätzliche Information im Menü über das jeweils markierte Objekt. Die angegebenen C4MN_*-Konstanten sind seit 4.9.5.0 CE ebenfalls definiert und sollten statt der numerischen Werte verwendet werden:
				      &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Konstante&lt;/th&gt;
&lt;th&gt;Wert&lt;/th&gt;
&lt;th&gt;Effekt&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C4MN_Extra_None&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Nichts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;C4MN_Extra_Components&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Komponenten&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C4MN_Extra_Value&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Wert&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;C4MN_Extra_MagicValue&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Wert als Magiewert. Dabei wird außerdem iExtraData als Vergleichswert angezeigt, z.B. &quot;50/100&quot;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C4MN_Extra_Info&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Beschreibungstext sofort anzeigen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;C4MN_Extra_ComponentsMagic&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Komponenten und Magiewert&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>iExtra</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Bestimmt den angezeigten Menütext, wenn das Menü keine Einträge enthält</string> 
      </void> 
      <void property="name"> 
       <string>szCaption</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Vergleichswert für iExtra 3</string> 
      </void> 
      <void property="name"> 
       <string>iExtraData</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Aussehen des Menüs. Folgende Konstanten sind ab CR definiert:
				      &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Konstante&lt;/th&gt;
&lt;th&gt;Wert&lt;/th&gt;
&lt;th&gt;Aussehen&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C4MN_Style_Normal&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Normal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;C4MN_Style_Context&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Kontextmenü&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C4MN_Style_Info&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Infomenü&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;C4MN_Style_Dialog&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Dialog&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C4MN_Style_EqualItemHeight&lt;/td&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;Kann mit C4MN_Style_Dialog kombiniert werden: Alle Einträge mit Icon im Dialogmenü bekommen die gleiche Höhe.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>iStyle</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Das Menü bleibt geöffnet, wenn eine Auswahl getroffen wird.</string> 
      </void> 
      <void property="name"> 
       <string>fPermanent</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, wird diese ID als Menü-ID gesetzt. Die aktuelle Menü-ID wird zum Beispiel von &lt;a href=&quot;../../../sdk/script/fn/GetMenu.html&quot;&gt;GetMenu&lt;/a&gt; zurückgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>idMenuID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die ID des Menüs, falls das Objekt ein Menü geöffnet hat. Normalerweise ist das die ID des Menüsymbols (idSymbol), wenn nicht bei &lt;a href=&quot;../../../sdk/script/fn/CreateMenu.html&quot;&gt;CreateMenu&lt;/a&gt; explizit eine andere Menü-ID als idMenuID angegeben wurde. 0 bei keinem Menü oder bei keinem Symbol.</string> 
  </void> 
  <void property="name"> 
   <string>GetMenu</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Menüobjekt</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type5"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ermittelt den gerade ausgewählten Menüeintrag des geöffneten Menüs eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>GetMenuSelection</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Menü abgefragt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Auswahl in einem Menu.</string> 
  </void> 
  <void property="name"> 
   <string>SelectMenuItem</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des MenuItems, das selektiert werden soll. Der erste Eintrag hat die Nummer 0.</string> 
      </void> 
      <void property="name"> 
       <string>iItem</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Menüobjekt für das die Selektion geändert werden soll. 0 wenn sich das Menu im aufrufenden Objekt befindet.</string> 
      </void> 
      <void property="name"> 
       <string>pMenuObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert die Größe eines Objektmenüs, so dass die vorgegebene Anzahl an Menüeinträgen in Breite und Höhe hineinpassen.</string> 
  </void> 
  <void property="name"> 
   <string>SetMenuSize</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-50: Anzahl der Menüeinträge, die das Menü in der Breite anzeigen können soll</string> 
      </void> 
      <void property="name"> 
       <string>iCols</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-50: Anzahl der Menüeinträge, die das Menü in der Höhe anzeigen können soll</string> 
      </void> 
      <void property="name"> 
       <string>iRows</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Menüobjekt für das die Menügröße geändert werden soll. 0 wenn sich das Menu im aufrufenden Objekt befindet.</string> 
      </void> 
      <void property="name"> 
       <string>pMenuObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zeigt die Beschreibung eines Objekts in einem kleinen Informationsfenster (intern ein Menü) beim aufrufenden Objekt an.</string> 
  </void> 
  <void property="name"> 
   <string>ShowInfo</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, zu dem Informationen angezeigt werden sollen. Bei 0 wird das aufrufende Objekt verwendet.</string> 
      </void> 
      <void property="name"> 
       <string>pObject</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das Object-Character-Flag eines Objekts. Dieser Wert beschreibt den aktuellen Zustand des Objekts. Der Rückgabewert ist eine Bitmaske und kann mit BitAnd() mit einem OCF_x()-Wert verglichen werden.</string> 
  </void> 
  <void property="name"> 
   <string>GetOCF</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen OCF abgefragt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Lebendes Lebewesen.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Alive</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Blitzanziehendes Objekt. Dieses Flag wird durch die &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore&lt;/a&gt;-Eigenschaft &quot;AttractLightning&quot; kontrolliert.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_AttractLightning</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Das Objekt kann von einem Clonk theoretisch geholt werden. Das heißt, es liegt entweder frei, oder steckt in einem Behälter, auf den der Clonk zugreifen kann (Gebäude mit Eingang, anfassbare Vehikel, etc.).</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Available</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Fällbares Objekt. Normalerweise sind das Bäume.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Chop</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Einsammelbares Objekt.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Collectible</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Das Objekt bestizt einen Collection-Bereich, ist nicht voll (CollectionLimit), verdreht oder unfertig.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Collection</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Baustelle</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Construct</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Das Objekt ist ein Behälter, auf den ein Clonk theoretisch zugreifen kann (Gebäude mit Eingang, anfassbare Vehikel, etc.).</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Container</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Das Objekt kann theoretisch zu einer Crew hinzugefügt werden oder gehört schon zu einer Crew. Das heißt, es hat den ensprechenden DefCore-Eintrag gesetzt, und lebt.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_CrewMember</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Essbares Objekt. Dieses Flag wird durch den &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore&lt;/a&gt;-Eintrag &quot;Edible&quot; gesetzt.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Edible</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Das Objekt bestizt einen aktiven Eingangsbereich. Dies ist der Fall, wenn ein Eingangsbereich definiert ist (siehe &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore.txt&lt;/a&gt;), das Objekt fertig gebaut und nicht verdreht ist.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Entrance</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Das Objekt blockiert (versteckt) dahinter befindliche Objekte und verhindert, dass weitere Objekte vor diesem gebaut werden. Dieses Flag wird durch den &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore&lt;/a&gt;-Eintrag &quot;Exclusive&quot; gesetzt.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Exclusive</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Das Objekt ist ein Lebewesen, hat eine Aktivität und kein ObjectDisabled in dieser Aktivität.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_FightReady</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Zu mindestens 100% fertig gebautes Objekt. Das Objekt ist also zum Beispiel keine Baustelle, bzw. als Lebwesen ist es mindestens voll ausgewachsen.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Fullcon</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Anfassbares Objekt</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Grab</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Objekt, das sich mit mindestens 1.5 Pixel pro Frame bewegt.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_HitSpeed1</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Objekt, das sich mit mindestens 2 Pixel pro Frame bewegt.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_HitSpeed2</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Objekt, das sich mit mindestens 6 Pixel pro Frame bewegt.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_HitSpeed3</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Objekt, das sich mit mindestens 8 Pixel pro Frame bewegt.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_HitSpeed4</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Die Objektmitte liegt frei.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_InFree</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Das Objekt befindet sich in einer Flüssigkeit.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_InLiquid</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Die Objektmitte steckt im Boden.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_InSolid</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Brennbares Objekt</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Inflammable</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Am Objekt kann zur Zeit eine Leitung angeschlossen werden.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_LineConstruct</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Lebewesen. Achtung: Tote Lebewesen sind immer noch OCF_Living. Für lebende Lebewesen gibt es &lt;a href=&quot;../../../sdk/script/fn/OCF_Alive.html&quot;&gt;OCF_Alive&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Living</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Objekt befindet sich im Freien.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_NotContained</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Brennendes Objekt</string> 
  </void> 
  <void property="name"> 
   <string>OCF_OnFire</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Energieverbraucher. Diese Eigenschaft wird durch den &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore&lt;/a&gt;-Eintrag &quot;LineConnect&quot; geregelt. Das Gebäude muss außerdem fertig gebaut sein.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_PowerConsumer</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Energiequelle. Diese Eigenschaft wird durch den &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore&lt;/a&gt;-Eintrag &quot;LineConnect&quot; geregelt. Dabei zählen immer reine Energieerzeuger, sowie auch normale Energieverbraucher, wenn sie einen momentanen Energiewert &amp;gt;0 bestizen und eine Energieleitung angeschlossen werden kann. Das Gebäude muss außerdem fertig gebaut sein.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_PowerSupply</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Beutetier, wie zum Beispiel Wipfe, Clonks, etc.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Prey</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Object character flag: Objekt ist drehbar.</string> 
  </void> 
  <void property="name"> 
   <string>OCF_Rotate</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das relative X in Bezug auf Objektmitte wenn von einem Objekt aufgerufen. Sonst liefert diese Funktion das übergebene X zurück</string> 
  </void> 
  <void property="name"> 
   <string>AbsX</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das relative Y in Bezug auf Objektmitte wenn von einem Objekt aufgerufen. Sonst liefert diese Funktion das übergebene Y zurück</string> 
  </void> 
  <void property="name"> 
   <string>AbsY</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Versetzt ein Objekt in ein anderes hinein. Bei diesem Vorgang wird weder RejectCollect, noch Collection oder ActivateEntrance im Zielobjekt aufgerufen. Dafür aber RejectEntrance und Entrance im Objekt, das hineinversetzt werden soll.</string> 
  </void> 
  <void property="name"> 
   <string>Enter</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, in das hineinversetzt wird</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das in pTarget hineinversetzt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Versetzt ein Objekt aus seinem Behälter heraus, und setzt optional seine Geschwindigkeit.</string> 
  </void> 
  <void property="name"> 
   <string>Exit</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nach draußen zu bewegendes Objekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  X-Austrittsposition. Offset zum aufrufenden Objekt bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Y-Austrittsposition. Offset zum aufrufenden Objekt bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Rotation des Austrittsobjekts in Grad.</string> 
      </void> 
      <void property="name"> 
       <string>iR</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  X-Geschwindigkeit des Austrittsobjekts. Es gilt der übergebene Wert ohne Genauigkeitsteilung (Precision 1).</string> 
      </void> 
      <void property="name"> 
       <string>iXDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Y-Geschwindigkeit des Austrittsobjekts. Es gilt der übergebene Wert ohne Genauigkeitsteilung (Precision 1).</string> 
      </void> 
      <void property="name"> 
       <string>iYDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Rotationsgeschwindigkeit des Austrittsobjekts.</string> 
      </void> 
      <void property="name"> 
       <string>iRDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die X-Position von *pObj.</string> 
  </void> 
  <void property="name"> 
   <string>GetX</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt dessen X-Wert zurück gegeben werden soll. Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Y-Position von *pObj.</string> 
  </void> 
  <void property="name"> 
   <string>GetY</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt dessen Y-Wert zurück gegeben werden soll. Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sortiert ein Objekt neu in die Objektliste ein.</string> 
  </void> 
  <void property="name"> 
   <string>Resort</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das neu einsortiert werden soll. 0 bei lokalem Aufruf. Bei 0 im globalen Aufruf wird die gesamte Objektliste neu sortiert (Zur Behebung von Sortierungsfehlern).</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sortiert ein Objekt neu in die Objektliste ein. Die Platzierung ergibt sich nach einer Platzierungsfunktion, die die Objektposition relativ zu jedem anderen Objekt in der Objektliste definieren sollte. Wenn das erste Objekt vor dem zweiten stehen sollte, muss die Funktion einen Wert kleiner Null zurückgeben. Ansonsten einen Wert größer oder gleich Null.</string> 
  </void> 
  <void property="name"> 
   <string>ResortObject</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name der Funktion, die für die Einsortierung aufgerufen wird.</string> 
      </void> 
      <void property="name"> 
       <string>szResortFunc</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Neu einzusortierendes Objekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pResortObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sortiert die Objektliste teilweise oder komplett neu. Dafür wird ein einfacher Sortierungsalgorithmus angewandt, der immer wieder die angegebene Funktion aufruft, welche dann die Relation zweier Objekte zueinander zurückgeben muss. Die beiden Objekte werden als &lt;a href=&quot;../../../sdk/script/fn/Par.html&quot;&gt;Par&lt;/a&gt;(0) und &lt;a href=&quot;../../../sdk/script/fn/Par.html&quot;&gt;Par&lt;/a&gt;(1) übergeben. Wenn das erste Objekt vor dem zweiten stehen sollte, muss die Funktion einen Wert kleiner Null zurückgeben. Ansonsten einen Wert größer oder gleich Null.</string> 
  </void> 
  <void property="name"> 
   <string>ResortObjects</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name der Funktion, die für die Umsortierung aufgerufen wird.</string> 
      </void> 
      <void property="name"> 
       <string>szResortFunc</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Umzusortierende Objektkategorie (z.B. &lt;a href=&quot;../../../sdk/script/fn/C4D_StaticBack.html&quot;&gt;C4D_StaticBack&lt;/a&gt;). 0 sortiert alle Objekte neu.</string> 
      </void> 
      <void property="name"> 
       <string>iCategory</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sorgt dafür, dass ein Objekt mit Sicherheit vor oder hinter einem anderen Objekt angeordnet ist. Dadurch lässt sich beispielsweise sicherstellen, dass sich ein Fahrstuhlkorb immer vor dem zugehörigen Fahrstuhl befindet.</string> 
  </void> 
  <void property="name"> 
   <string>SetObjectOrder</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, vor oder nach dem pSortObj einsortiert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>pObjBeforeOrAfter</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das vor oder nach pObjBefore eingeordnet wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pSortObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn ungleich 0, wird sichergestellt, dass das pSortObj hinter statt vor pObjBeforeOrAfter einsortiert wird.</string> 
      </void> 
      <void property="name"> 
       <string>fAfter</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verschiebt ein Objekt an die angegebene Position. Dabei wird das Objekt an die exakte Pixelposition gesetzt, und eventuelle, interne Verschiebungen um Pixelbruchteile werden verworfen.</string> 
  </void> 
  <void property="name"> 
   <string>SetPosition</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue X-Position für das Objekt</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Y-Position für das Objekt</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt dessen Position geändert werden soll. Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nur wirksam für Objekte mit angegebenem BorderBound. Stellt sicher, dass die Position immer innerhalb der dem Objekt auferlegten Grenzen ist. (Ab CR)</string> 
      </void> 
      <void property="name"> 
       <string>fCheckBounds</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt die Sichtbarkeit eines Objekts ab. Siehe dazu auch &lt;a href=&quot;../../../sdk/script/fn/SetVisibility.html&quot;&gt;SetVisibility&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>GetVisibility</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, von dem die Sichtbarkeit abgefragt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert die Sichtbarkeit eines Objekts. Objekte können für beliebige Gruppen sichtbar gemacht werden, indem für dwVisibility eine Bitmaske angegeben wird.
		</string> 
  </void> 
  <void property="name"> 
   <string>SetVisibility</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Bitmaske, die die neue Sichtbarkeit angibt.&lt;br&gt;
						Entweder &lt;a href=&quot;../../../sdk/script/fn/VIS_All.html&quot;&gt;VIS_All&lt;/a&gt; oder &lt;a href=&quot;../../../sdk/script/fn/VIS_None.html&quot;&gt;VIS_None&lt;/a&gt;, oder eine Bitmaske aus &lt;a href=&quot;../../../sdk/script/fn/VIS_Owner.html&quot;&gt;VIS_Owner&lt;/a&gt;, &lt;a href=&quot;../../../sdk/script/fn/VIS_Allies.html&quot;&gt;VIS_Allies&lt;/a&gt;, &lt;a href=&quot;../../../sdk/script/fn/VIS_Enemies.html&quot;&gt;VIS_Enemies&lt;/a&gt;, &lt;a href=&quot;../../../sdk/script/fn/VIS_God.html&quot;&gt;VIS_God&lt;/a&gt; und &lt;a href=&quot;../../../sdk/script/fn/VIS_Local.html&quot;&gt;VIS_Local&lt;/a&gt;.
					</string> 
      </void> 
      <void property="name"> 
       <string>dwVisibility</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Sichtbarkeit geändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für &lt;a href=&quot;../../../sdk/script/fn/GetVisibility.html&quot;&gt;GetVisibility&lt;/a&gt;/&lt;a href=&quot;../../../sdk/script/fn/SetVisibility.html&quot;&gt;SetVisibility&lt;/a&gt;. Das Objekt ist für alle sichtbar. Dieser Wert entspricht 0, und kann logischerweise nicht mit anderen VIS_x-Werten kombiniert werden.</string> 
  </void> 
  <void property="name"> 
   <string>VIS_All</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für &lt;a href=&quot;../../../sdk/script/fn/GetVisibility.html&quot;&gt;GetVisibility&lt;/a&gt;/&lt;a href=&quot;../../../sdk/script/fn/SetVisibility.html&quot;&gt;SetVisibility&lt;/a&gt;. Das Objekt ist für alle Verbündeten des Besitzers sichtbar.</string> 
  </void> 
  <void property="name"> 
   <string>VIS_Allies</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für &lt;a href=&quot;../../../sdk/script/fn/GetVisibility.html&quot;&gt;GetVisibility&lt;/a&gt;/&lt;a href=&quot;../../../sdk/script/fn/SetVisibility.html&quot;&gt;SetVisibility&lt;/a&gt;. Das Objekt ist für alle Feinde des Besitzers sichtbar.</string> 
  </void> 
  <void property="name"> 
   <string>VIS_Enemies</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für &lt;a href=&quot;../../../sdk/script/fn/GetVisibility.html&quot;&gt;GetVisibility&lt;/a&gt;/&lt;a href=&quot;../../../sdk/script/fn/SetVisibility.html&quot;&gt;SetVisibility&lt;/a&gt;. Das Objekt ist nur im allgemeinen Viewport (Sichtfenster im Entwicklermodus oder Spielfläche im Netzwerk ohne Spieler) sichtbar.</string> 
  </void> 
  <void property="name"> 
   <string>VIS_God</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für &lt;a href=&quot;../../../sdk/script/fn/GetVisibility.html&quot;&gt;GetVisibility&lt;/a&gt;/&lt;a href=&quot;../../../sdk/script/fn/SetVisibility.html&quot;&gt;SetVisibility&lt;/a&gt;. Die Sichtbarkeit eines Objekts richtet sich jeweils nach den unbenannten, lokalen Variablen in diesem Objekt. Dabei können in jeder lokalen Variable 32 Spieler in einer Bitmaske festgelegt werden.</string> 
  </void> 
  <void property="name"> 
   <string>VIS_Local</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für &lt;a href=&quot;../../../sdk/script/fn/GetVisibility.html&quot;&gt;GetVisibility&lt;/a&gt;/&lt;a href=&quot;../../../sdk/script/fn/SetVisibility.html&quot;&gt;SetVisibility&lt;/a&gt;. Das Objekt ist für niemanden sichtbar.</string> 
  </void> 
  <void property="name"> 
   <string>VIS_None</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für &lt;a href=&quot;../../../sdk/script/fn/GetVisibility.html&quot;&gt;GetVisibility&lt;/a&gt;/&lt;a href=&quot;../../../sdk/script/fn/SetVisibility.html&quot;&gt;SetVisibility&lt;/a&gt;. Das Objekt ist für den Besitzer sichtbar.</string> 
  </void> 
  <void property="name"> 
   <string>VIS_Owner</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Weist einem Objekt eine neue Definition zu.</string> 
  </void> 
  <void property="name"> 
   <string>ChangeDef</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID der neuen Definition für das Objekt</string> 
      </void> 
      <void property="name"> 
       <string>idNewDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Typ geändert wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Überprüft, ob ein an das angegebene Objekt angeschlossener Verbraucher Energie benötigt. Dabei werden auch indirekt (also über mehrere Leitungen über einen weiteren Verbraucher) angeschlossene Verbraucher überprüft.</string> 
  </void> 
  <void property="name"> 
   <string>CheckEnergyNeedChain</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, von dem aus gesucht werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert die Fertigstellung eines Objekts. Die meisten Lebewesen und Bäume können dadurch vergrößert oder verkleinert werden. Gebäude können zu Baustellen zurückgesetzt und Baustellen vorwärts oder rückwärts gebaut werden.&lt;br&gt;
      Sinkt die Fertigstellung eines Objekts auf oder unter 0, wird dieses gelöscht.
    </string> 
  </void> 
  <void property="name"> 
   <string>DoCon</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Veränderung der Fertigstellung in Prozentpunkten; positiv oder negativ.</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Fertigstellung geändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert den Schadenswert eines Objekts. Bei iChange ungleich Null wird im Zielobjekt außerdem die Funktion Damage aufgerufen. Bei lokalem Aufruf gilt der Besitzer des aufrufenden Objekts als Verursacher des Schadens.</string> 
  </void> 
  <void property="name"> 
   <string>DoDamage</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Veränderung des Schadenswertes; positiv oder negativ</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das beschädigt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert die Energie eines Objekts. Die Energie entspricht bei Gebäuden der elektrischen Energie, und bei Lebewesen der Lebensenergie.</string> 
  </void> 
  <void property="name"> 
   <string>DoEnergy</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Veränderung des Energiewertes; positiv oder negativ in Prozent zum Maximalwert. 100% entsprechen hierbei dem maximalen Physical-Wert von 100000.</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Energiewert verändert wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn WAHR, wird iChange auf den exakten Energiewert angewendet (0 bis Wert von Physical &quot;Energy&quot;).</string> 
      </void> 
      <void property="name"> 
       <string>fExakt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Schadensursache, die an Fx*Damage-Callbacks von Effekten übergeben wird (siehe &lt;a href=&quot;../../../sdk/script/Effects.html&quot;&gt;Effekte-Dokumentation&lt;/a&gt;). Standard ist FX_Call_EngScript.</string> 
      </void> 
      <void property="name"> 
       <string>iEngType</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Spielernummer des Spielers, der den Schaden verursacht hat, plus eins.</string> 
      </void> 
      <void property="name"> 
       <string>iCausedBy</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert den Magiewert eines Objekts. Jedoch wird die gewünschte Veränderung vorgabemäßig nur als ganze ausgeführt und daher auch nur, wenn dadurch nicht die Ober- bzw. Untergrenze (physische Fähigkeit des Clonks bzw. 0) überschritten wird. Wenn die Veränderung iChange nicht als ganze ausgeführt werden kann, gibt die Funktion FALSE zurück. Hierdurch kann mit einem einzelnen Funktionsaufruf gleichzeitig überprüft werden, ob eine Transaktion überhaupt möglich ist.</string> 
  </void> 
  <void property="name"> 
   <string>DoMagicEnergy</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Veränderung des Magiewertes; positiv oder negativ</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Magiewert verändert wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn wahr, überträgt der Befehl auch teilweise Zauberenergie bis auf 0 oder das Maximum. Der Befehl schlägt nur fehl, wenn die Zauberenergie gar nicht verändert wurde. Ab CR.</string> 
      </void> 
      <void property="name"> 
       <string>fAllowPartial</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt zurück, ob der Energiewert eines Objekts größer oder gleich iEnergy ist. Wenn die Spielregel &quot;Energiebedarf&quot; nicht aktiviert ist, gibt diese Funktion immer TRUE zurück. Außerdem werden Leitungen dazu motiviert, Energie hierhin zu transferieren.</string> 
  </void> 
  <void property="name"> 
   <string>EnergyCheck</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Abgefragter Energiewert</string> 
      </void> 
      <void property="name"> 
       <string>iEnergy</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Energiezustand abgefragt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Löscht das Feuer eines brennenden Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>Extinguish</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Feuer gelöscht werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Beginnt einen Zweikampf. Mit diesem Befehl können auch Clonks nicht verfeindeter Spieler einen Kampf beginnen. Beide Teilnehmer müssen &lt;a href=&quot;../../../sdk/script/fn/OCF_FightReady.html&quot;&gt;OCF_FightReady&lt;/a&gt; sein.</string> 
  </void> 
  <void property="name"> 
   <string>FightWith</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, das bekämpft werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, das kämpfen soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pFighter</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Fertigstellung eines Objekts in Prozent. Bei Baustellen ist dies die Fertigstellung, während es bei Tieren und Pflanzen die Größe angibt (Siehe StretchGrowth/OverSize in der &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore&lt;/a&gt;)</string> 
  </void> 
  <void property="name"> 
   <string>GetCon</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt dessen Fertigstellung abgefragt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ermittelt, in welche Richtungen einzelne oder alle Vertices eines Objekts feste Landschaft berühren. Die Richtungen werden als Bitmaske von &lt;a href=&quot;../../../sdk/definition/cnat.html&quot;&gt;CNAT-Werten&lt;/a&gt; übergeben bzw. von der Funktion zurückgegeben.</string> 
  </void> 
  <void property="name"> 
   <string>GetContact</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Kontaktstatus ermittelt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObject</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index des abzufragenden Vertex. -1 prüft alle Vertices, und gibt das Ergebnis als eine mit binärem Oder kombinierte Bitmaske zurück.</string> 
      </void> 
      <void property="name"> 
       <string>iVertex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Bitmaske von CNAT-Werten, die angeben, welche Richtungen geprüft werden sollen. Bei 0 werden alle Richtungen geprüft.</string> 
      </void> 
      <void property="name"> 
       <string>dwCNAT</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt den Schadenswert eines Objekts ab.</string> 
  </void> 
  <void property="name"> 
   <string>GetDamage</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Schadenswert abgefragt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt die Unterkante eines Objekts ab. Diese entspricht Y-Position + DefCore-OffsetY + DefCore-Height. Eine eventuelle Drehung wird hier nicht mit eingerechnet.</string> 
  </void> 
  <void property="name"> 
   <string>GetDefBottom</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Unterkante ermittelt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die Beschreibung eines Objekts oder einer Objektdefinition zurück. Die Beschreibung wird in Objektdefinitionen in der Desc**.txt angegeben.</string> 
  </void> 
  <void property="name"> 
   <string>GetDesc</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Beschreibung gesucht wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Falls angegeben, wird stattdessen die Beschreibung dieser Definition zurückgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Spieler, der zuletzt Energieabzug an einem Objekt verursacht hat.</string> 
  </void> 
  <void property="name"> 
   <string>GetKiller</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Abzufragendes Objekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Masse eines Objekts inklusive aller Inhaltsobjekte. Bei angegebenem idDef wird pObj ignoriert und stattdessen die Standardmasse der Objektdefinition zurückgegeben. Sind idDef und pObj 0, gilt das aufrufende Objekt als pObj.</string> 
  </void> 
  <void property="name"> 
   <string>GetMass</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Gewogenes Objekt. 0 bei lokalem Aufruf oder angegebenem idDef.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objektdefinition, von der das Standardgewicht ermittelt werden soll. 0 bei angegebenem pObj</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die noch benötigten Baumaterialien des Objekts</string> 
  </void> 
  <void property="name"> 
   <string>GetNeededMatStr</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Baumaterialsbedarf abgefragt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ermittelt den Besitzer eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>GetOwner</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, von dem der Besitzer ermittelt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die physischen Eigenschaften eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>GetPhysical</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name der abzufragenden physischen Eigenschaft.</string> 
      </void> 
      <void property="name"> 
       <string>szPhysical</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>iMode 0 liefert die gerade aktuellen Eigenschaften (permanent oder temporär) und kann auch bei Objekten ohne Objektinfo (z.B. Fahrzeugen oder Gebäuden) angewendet werden. iMode 1 liefert die permanenten Eigenschaften aus der Objektinfo. iMode 2 liefert die temporären Eigenschaften, allerdings nur wenn sich die Eigenschaften auch gerade im temporären Modus befinden.</string> 
      </void> 
      <void property="name"> 
       <string>iMode</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Das Objekt, dessen Physical festgestellt wird. Null bei lokalen Aufrufen.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn angegeben, wird stattdessen der Definitionswert der angegebenen Definition aus der DefCore.txt, Sektion [Physical] zurückgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt einen Objekt- oder Definitionswert zurück. Bei angegebenem idDef wird der Definitionswert zurückgegeben, ansonsten der Objektwert von pObj oder dem aufrufenden Objekt bei pObj=0.&lt;br&gt;Ein Objektwert berechnet sich folgendermaßen: Bei angegebenem pObj wird zunächst geprüft, ob eine CalcValue-Funktion im Script des Objekttyps von pObj vorhanden ist, und gegebenenfalls ausgewertet. Ansonsten wird der Definitionswert (siehe nächster Absatz) verwendet. Unabhängig davon wird der Wert des Objekts immer der Fertigstellung (GetCon()/100) multipliziert. Tote Lebewesen (GetCategory()&amp;amp;OCF_Living() &amp;amp;&amp;amp; !GetAlive()) haben immer den Wert 0.&lt;br&gt;Der Definitionswert wird folgendermaßen ermittelt: Ist eine CalcDefValue-Funktion im Script vorhanden, wird diese ausgewertet. Ansonsten wird eine Wertüberladung aus der Scenario.txt verwendet. Ist diese ebenfalls nicht vorhanden, wird der in der DefCore angegebene Wert benutzt.&lt;br&gt;
</string> 
  </void> 
  <void property="name"> 
   <string>GetValue</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, von dem der aktuelle Wert abgefragt werden soll. 0 bei lokalem Aufruf oder angegebenem idDef.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben: Definition, von der der Standardwert abgefragt werden soll. Ansonsten wird pObj ausgewertet.</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Basis, in der gekauft wird. Falls pObj einen CalcValue-Aufruf zur Verfügung stellt, wird dieser Parameter an den Aufruf weitergegeben.</string> 
      </void> 
      <void property="name"> 
       <string>pBase</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Spieler, für den der Wert gilt. Falls pObj einen CalcValue-Aufruf zur Verfügung stellt, wird auch dieser Parameter an den Aufruf weitergegeben.</string> 
      </void> 
      <void property="name"> 
       <string>iForPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt zurück, ob ein Objekt brennt.</string> 
  </void> 
  <void property="name"> 
   <string>OnFire</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zu prüfendes Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt alle Physicals auf den Normalwert zurück. Für weitere Informationen siehe &lt;a href=&quot;../../../sdk/script/fn/SetPhysical.html&quot;&gt;SetPhysical&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>ResetPhysical</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Physicals zurückgesetzt werden sollen. Bei lokalem Aufruf 0.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Sollte, wenn angegeben, der Name einer Physical sein, die zuvor mit &lt;a href=&quot;../../../sdk/script/fn/SetPhysical.html&quot;&gt;SetPhysical&lt;/a&gt; im Modus PHYS_StackTemporary gesetzt wurde. Es wird dann diese Physical auf den alten Wert, den sie vor dem temporären Setzen hatte, zurückgesetzt und die temporäre Änderung vom Stapel entfernt. Ist der Stapel leer - das heißt, wenn für alle &lt;a href=&quot;../../../sdk/script/fn/SetPhysical.html&quot;&gt;SetPhysical&lt;/a&gt;-Aufrufe mit PHYS_StackTemporary-Parameter entsprechende ResetPhysical-Aufrufe mit sPhys-Parameter getätigt wurden, werden die temporären Physicals wieder gelöscht. Ist der Parameter 0 oder nicht angegeben, werden die temporären Physicals immer zurückgesetzt und alle temporären Zwischenwerte vom Stapel gelöscht. Für ein Beispiel zu diesem Parameter siehe &lt;a href=&quot;../../../sdk/script/fn/SetPhysical.html&quot;&gt;SetPhysical&lt;/a&gt;.</string> 
      </void> 
      <void property="name"> 
       <string>sPhys</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Fertigstellung eines Objekts auf den angegebenen Wert.</string> 
  </void> 
  <void property="name"> 
   <string>SetCon</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Fertigstellung/Wachstum in Prozent</string> 
      </void> 
      <void property="name"> 
       <string>iCon</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt (bei lokalen Aufrufen Null)</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Legt fest, welche Dichte ein Material haben muss, damit das Objekt mit diesem kollidiert. Standardmäßig liegt dieser Wert bei 50 (dichtes Material).</string> 
  </void> 
  <void property="name"> 
   <string>SetContactDensity</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Dichte des Materials, mit dem das Objekt kollidieren soll.</string> 
      </void> 
      <void property="name"> 
       <string>iDensity</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert den steuernden Spieler eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetController</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des neuen, steuernden Spielers. NO_OWNER für keinen Spieler.</string> 
      </void> 
      <void property="name"> 
       <string>iNewController</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen steuernder Spieler geändert wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert die Eigenmasse eines Objekts. Die Eigenmasse entspricht dem in der &lt;a href=&quot;../../../sdk/definition/DefCore.html&quot;&gt;DefCore.txt&lt;/a&gt; angegebenen Wert unter [DefCore], Mass. Die tatsächliche Objektmasse ergibt sich durch Hinzurechnen der Masse aller enthaltenen Objekte.</string> 
  </void> 
  <void property="name"> 
   <string>SetMass</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Eigenmasse</string> 
      </void> 
      <void property="name"> 
       <string>iNewMass</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Eigenmasse geändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert für eine Runde den Namen eines Objekts oder einer Definition.</string> 
  </void> 
  <void property="name"> 
   <string>SetName</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neuer Name. Wenn 0 (nicht &quot;&quot;!), wird der Name des Objekts auf den Namen seiner Definition beziehungsweise den Namen in der Spielerdatei zurückgesetzt.</string> 
      </void> 
      <void property="name"> 
       <string>szNewName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Name geändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, wird pObj ignoriert, und stattdessen der Name der Definition geändert.</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nur für Crewobjekte: Wenn wahr, wird der Name permanent in der Infosektion des Spielers geändert. Namen dürfen jeweils nur einmal pro Spielerdatei vorkommen. Ab CR.</string> 
      </void> 
      <void property="name"> 
       <string>fSetInInfo</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Steuert das Verhalten, falls ein Clonk mit dem angegebenen Namen schon in der Stammcrew des Spielers existiert: Wenn unwahr, schlägt die Funktion in diesem Fall fehl. Wenn wahr, wird ein neuer Name durch Anhängen einer Zahl erzeugt. Ab CR.</string> 
      </void> 
      <void property="name"> 
       <string>fMakeValidIfExists</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert den Besitzer eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetOwner</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des neuen Besitzers. -1 für keinen Besitzer.</string> 
      </void> 
      <void property="name"> 
       <string>iNewOwner</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Besitzer geändert wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert die physischen Eigenschaften eines Objekts. Hiermit können die in der Physical-Sektion der &lt;a href=&quot;../../../sdk/definition/DefCore.html&quot;&gt;DefCore.txt&lt;/a&gt; angegebenen Werte temporär oder permanent angepasst werden.</string> 
  </void> 
  <void property="name"> 
   <string>SetPhysical</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name Eigenschaft, die geändert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>szPhysical</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-100000: Neuer Wert für diese Eigenschaft</string> 
      </void> 
      <void property="name"> 
       <string>iValue</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Änderungsmodus (symbolische Konstanten ab CR):&lt;br&gt;
					&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Konstante&lt;/th&gt;
&lt;th&gt;Wert&lt;/th&gt;
&lt;th&gt;Bedeutung&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PHYS_Current&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Die Eigenschaften werden im gerade aktiven Modus (temporär oder permanent) des Objektes geändert.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;PHYS_Permanent&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Die Eigenschaften werden permanent geändert. Das heißt, dass auch die Infosektion des Objektes modifiziert wird, und die Änderungen somit auch in die Spielerdatei geschrieben werden. Nur Spielercrewobjekte besitzen eine Infosektion.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PHYS_Temporary&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Für das Objekt wird eine temporäre Infosektion erzeugt, sofern noch nicht vorhanden, und temporären Modus gesetzt. Änderungen im temporären Modus landen nicht in der Spielerdatei. Um temporäre Physicals wieder zu den Originalen zurückzusetzen, sollte &lt;a href=&quot;../../../sdk/script/fn/ResetPhysical.html&quot;&gt;ResetPhysical&lt;/a&gt; verwendet werden.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;PHYS_StackTemporary&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Wie PHYS_Temporary, jedoch wird zusätzlich der vorherige Physical-Wert gesichert und kann einzeln mit einem &lt;a href=&quot;../../../sdk/script/fn/ResetPhysical.html&quot;&gt;ResetPhysical&lt;/a&gt;-Aufruf wiederhergestellt werden. Ab CR.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;br&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>iMode</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Physical gesetzt werden soll. 0 bei lokalen Aufrufen.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt einen neuen, festen Bereich eines Objekts. Das Quellrechteck der Grafik gibt dabei an, welche Pixel im Rechteck fest werden sollen: Alle Pixel, die zu weniger als 50% transparent sind, werden fest. Siehe auch Eintrag SolidMask in der &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore.txt&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>SetSolidMask</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position der oberen linken Ecke der neuen SolidMask in der Definitionsgrafik</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position der oberen linken Ecke der neuen SolidMask in der Definitionsgrafik</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite der neuen SolidMask in der Definitionsgrafik</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe der neuen SolidMask in der Definitionsgrafik</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Zielposition der neuen SolidMask relativ zur oberen linken Objektecke</string> 
      </void> 
      <void property="name"> 
       <string>iTx</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Zielposition der neuen SolidMask relativ zur oberen linken Objektecke</string> 
      </void> 
      <void property="name"> 
       <string>iTx</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen fester Bereich geändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt einen neuen Transferbereich für ein Objekt. Führt die Suche der Wegfindung durch einen Transferbereich (dieser gilt für die Wegfindung immer als komplett durchlaufbar), werden für den Clonk ControlTransfer-Aufrufe an das Script des Objekts aufgerufen. In diesen sollte mit Hilfe von Befehlen dafür gesorgt werden, dass der Clonk an seine Zielposition kommt.</string> 
  </void> 
  <void property="name"> 
   <string>SetTransferZone</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position der oberen linken Ecke der neuen Transferzone; relativ zum Objektmittelpunkt</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position der oberen linken Ecke der neuen Transferzone; relativ zum Objektmittelpunkt</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite der neuen Transferzone</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe der neuen Transferzone</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Transferzone geändert werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erhöht den Wert der physischen Eigenschaft eines Objekts um den in iTrainBy angegebenen Wert. Mit diesem Aufruf werden sowohl die permanenten, als auch temporäre und temporär gestapelte Physicals trainiert. Dieser Befehl kann beispielsweise genutzt werden, um nach einem Zauber die Magiephysical zu trainieren.</string> 
  </void> 
  <void property="name"> 
   <string>TrainPhysical</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name Eigenschaft, die geändert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>szPhysical</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-100000: Wert, um den trainiert wird</string> 
      </void> 
      <void property="name"> 
       <string>iTrainBy</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wert, der durch das Training nie überschritten wird. Es wird allerdings in keinem Fall die Physical reduziert, auch wenn der Zielwert unter dem hier angegebenen Wert läge.&lt;br&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>iMaxTrain</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Physical trainiert werden soll. 0 bei lokalen Aufrufen.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt einen Definitionswert zurück.</string> 
  </void> 
  <void property="name"> 
   <string>Value</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID der Definition, dessen Wert ermittelt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Wird an &lt;a href=&quot;../../../sdk/script/fn/FindObject.html&quot;&gt;FindObject&lt;/a&gt;/&lt;a href=&quot;../../../sdk/script/fn/FindObjectOwner.html&quot;&gt;FindObjectOwner&lt;/a&gt; übergeben, damit nur Objekte gefunden werden, die in einem anderen Objekt enthalten sind</string> 
  </void> 
  <void property="name"> 
   <string>AnyContainer</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sucht eine Heimatbasis eines Spielers. Die Heimatbasis ist zumeist das Gebäude, auf dem eine Flagge weht.</string> 
  </void> 
  <void property="name"> 
   <string>FindBase</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spielers, dessen Basis gesucht wird</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Suchindex, mit dem mehrere Basen eines Spielers gefunden werden können. iIndex=0 sucht die erste Basis.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das erste in einem Behälter enthaltene Objekt vom Typ idType.</string> 
  </void> 
  <void property="name"> 
   <string>FindContents</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekttyp, von dem das Inhaltsobjekt sein soll</string> 
      </void> 
      <void property="name"> 
       <string>idType</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Durchsuchter Behälter. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das erste gefundene Objekt, das den angegebenen Suchkriterien entspricht. Sind iWdt und iHgt beide -1, so wird das nächstliegende Objekt gefunden. Sind sie beide 0, wird nur am Punkt iX/iY gesucht. Sind iX, iY, iWdt und iHgt alle 0, gilt als Suchrechteck die gesamte Karte (auch bei lokalen Aufrufen). Es müssen stets die Bedingungen aller Parameter erfüllt sein, die angegeben und nicht 0 sind.</string> 
  </void> 
  <void property="name"> 
   <string>FindObject</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekttyp</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Suchposition bzw. linker Rand des Suchrechtecks. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Suchposition bzw. oberer Rand des Suchrechtecks. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Breite des Suchrechtecks. Siehe auch Hinweis unten.</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Höhe des Suchrechtecks. Siehe auch Hinweis unten.</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Bitmaske von Objektattributen. Es werden alle Objekte gefunden, die mindestens eines der übergebenen Objektattribute besitzen. 0 findet alle Objekte.</string> 
      </void> 
      <void property="name"> 
       <string>dwOCF</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Aktivität des zu findenden Objekts.</string> 
      </void> 
      <void property="name"> 
       <string>szAction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Aktivitätsziel des zu findenden Objekts. Siehe dazu auch &lt;a href=&quot;../../../sdk/script/fn/SetAction.html&quot;&gt;SetAction&lt;/a&gt;, &lt;a href=&quot;../../../sdk/script/fn/GetActionTarget.html&quot;&gt;GetActionTarget&lt;/a&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>pActionTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Behälter des zu findenden Objekts. Wenn angegeben, wird nur dieser Behälter durchsucht. Möglich sind auch &lt;a href=&quot;../../../sdk/script/fn/NoContainer.html&quot;&gt;NoContainer&lt;/a&gt; für Objekte, die sich im Freien befinden und &lt;a href=&quot;../../../sdk/script/fn/AnyContainer.html&quot;&gt;AnyContainer&lt;/a&gt; für alle Objekte.</string> 
      </void> 
      <void property="name"> 
       <string>pContainer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, nach dem die Suche begonnen wird. Über diesen Parameter können in einer Schleife nacheinander alle Objekte gefunden werden, die den Suchkriterien entsprechen.</string> 
      </void> 
      <void property="name"> 
       <string>pFindNext</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt ein Objekt zurück, das die angegebenen Suchkriterien erfüllt. Die Suchkriterien werden mittels speziellen Kriteriums-Funktionen der Form &quot;Find_*&quot; angegeben.</string> 
  </void> 
  <void property="name"> 
   <string>FindObject2</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Suchkriterium in Form einer Find_*-Funktion</string> 
      </void> 
      <void property="name"> 
       <string>Criteria</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object id="C4Type7" class="net.arctics.clonk.parser.C4Type" method="valueOf"> 
        <string>ARRAY</string> 
       </object> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sucht Objekte nach ihrem Besitzer und anderen Kriterien, analog zu &lt;a href=&quot;../../../sdk/script/fn/FindObject.html&quot;&gt;FindObject&lt;/a&gt;.</string> 
  </void> 
  <void property="name"> 
   <string>FindObjectOwner</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekttyp</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Besitzer, den das gefundene Objekt haben soll</string> 
      </void> 
      <void property="name"> 
       <string>iOwner</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Linke Kante der Position. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Obere Kante der Position. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Suchrechteck Breite</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Suchrechteck Höhe</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objektattribute. Es werden nur Objekte gefunden, die alle angegebenen Objektattribute besitzen. 0 findet alle Objekte.</string> 
      </void> 
      <void property="name"> 
       <string>dwOCF</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Aktivität des zu findenden Objekts</string> 
      </void> 
      <void property="name"> 
       <string>szAction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Aktivitätsziel, das das Objekt besitzen muss. Siehe dazu auch &lt;a href=&quot;../../../sdk/script/fn/SetAction.html&quot;&gt;SetAction&lt;/a&gt;, &lt;a href=&quot;../../../sdk/script/fn/GetActionTarget.html&quot;&gt;GetActionTarget&lt;/a&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>pActionTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, hinter dem die Suche begonnen wird. Über diesen Parameter können in einer Schleife alle Objekte gefunden werden, die den Suchkriterien entsprechen.</string> 
      </void> 
      <void property="name"> 
       <string>pFindNext</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erstellt eine Liste von Objekten, auf die alle angegeben Suchkriterien zutreffen. Die Suchkriterien werden mittels speziellen Kriteriums-Funktionen der Form &quot;Find_*&quot; angegeben.</string> 
  </void> 
  <void property="name"> 
   <string>FindObjects</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Suchkriterium in Form einer Find_*-Funktion</string> 
      </void> 
      <void property="name"> 
       <string>Criteria</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type7"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das erste Inhaltsobjekt eines Behälters, das nicht vom angegebenen Typ ist.</string> 
  </void> 
  <void property="name"> 
   <string>FindOtherContents</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des zu ignorierenden Objekttyps</string> 
      </void> 
      <void property="name"> 
       <string>idType</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Behälter, der durchsucht wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte mit der entsprechenden Aktion.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Action</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Aktion nach der gesucht werden soll</string> 
      </void> 
      <void property="name"> 
       <string>szAction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte mit dem entsprechenden ersten Aktionsziel.</string> 
  </void> 
  <void property="name"> 
   <string>Find_ActionTarget</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Aktionsziel von Objekten, nach denen gesucht werden soll</string> 
      </void> 
      <void property="name"> 
       <string>pActionTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte die Spielern gehören, die mit dem angegebenen Spieler verbündet sind.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Allied</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer, dessen Verbündete Besitzer der zu suchenden Objekte sein müssen</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht Objekte, auf die alle angegebenen Suchkriterien zutreffen.</string> 
  </void> 
  <void property="name"> 
   <string>Find_And</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Suchkriterium in Form einer Find_*-Funktion</string> 
      </void> 
      <void property="name"> 
       <string>Criteria</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type7"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte die irgendwo enthalten sind.</string> 
  </void> 
  <void property="name"> 
   <string>Find_AnyContainer</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte, deren Grafikbereich (Shape) den angegebenen Punkt überlappt.</string> 
  </void> 
  <void property="name"> 
   <string>Find_AtPoint</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des Suchpunktes. Relativ zu Objektmitte bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des Suchpunktes. Relativ zu Objektmitte bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte mit der entsprechenden Kategorie.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Category</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objektkategorie der zu suchenden Objekte</string> 
      </void> 
      <void property="name"> 
       <string>iCategory</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte im angegebenen Behälter.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Container</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Behälter der zu findenden Objekte</string> 
      </void> 
      <void property="name"> 
       <string>pContainer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: Sucht alle Objekte, die höchstens den angegebenen Radius vom Bezugspunkt entfernt sind. Wird kein Bezugspunkt angegeben, gilt der Mittelpunkt des aufrufenden Objektes.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Distance</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Maximaler Abstand des Objektes.</string> 
      </void> 
      <void property="name"> 
       <string>iRadius</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Bezugspunkt für den Abstand. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Bezugspunkt für den Abstand. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: das angegebene Objekt wird von der Suche ausgeschlossen.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Exclude</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Auszuschließendes Objekt. Aufrufendes Objekt wenn nicht angegeben oder 0.</string> 
      </void> 
      <void property="name"> 
       <string>pExclude</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte bei denen der Aufruf der angegebenen Funktion &lt;code&gt;true&lt;/code&gt; liefert. Wenn es eine lokale Funktion gibt, wird diese aufgerufen, sonst wenn vorhanden eine globale.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Func</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Aufzurufende Funktion</string> 
      </void> 
      <void property="name"> 
       <string>strFunction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte die Spielern gehören, die mit dem angegebenen Spieler verfeindet sind.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Hostile</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer, dessen Feinde Besitzer der zu suchenden Objekte sein müssen</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte mit der angegeben ID.</string> 
  </void> 
  <void property="name"> 
   <string>Find_ID</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID der zu findenden Objekte</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte im angegebenen Suchrechteck.</string> 
  </void> 
  <void property="name"> 
   <string>Find_InRect</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position der linken oberen Ecke des Suchbereiches. Bei lokalem Aufruf relativ zur Objektmitte.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position der linken oberen Ecke des Suchbereiches. Bei lokalem Aufruf relativ zur Objektmitte.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite des Suchbereiches</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe des Suchbereiches</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte die im Freien sind.</string> 
  </void> 
  <void property="name"> 
   <string>Find_NoContainer</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: findet genau alle Objekte, die nicht das angegebene Kriterium erfüllen.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Not</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Suchkriterium in Form einer Find_*-Funktion</string> 
      </void> 
      <void property="name"> 
       <string>Criteria</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type7"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: Sucht alle Objekte, bei denen eine der angegebenen Object-Character-Flags gesetzt ist.</string> 
  </void> 
  <void property="name"> 
   <string>Find_OCF</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Object-Character-Flag der zu suchenden Objekte</string> 
      </void> 
      <void property="name"> 
       <string>iOCF</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte, auf die mindestens eines der angegebenen Suchkriterien zutrifft.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Or</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Suchkriterium in Form einer Find_*-Funktion</string> 
      </void> 
      <void property="name"> 
       <string>Criteria</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type7"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Suchkriterium: sucht alle Objekte die dem angegebenen Spieler gehören.</string> 
  </void> 
  <void property="name"> 
   <string>Find_Owner</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer, der Besitzer der zu suchenden Objekte sein soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Konstante für FindObject: Suche außerhalb aller Objekte.</string> 
  </void> 
  <void property="name"> 
   <string>NoContainer</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Sucht Objekte, und gibt deren Anzahl zurück. Sind iWdt und iHgt beide -1, so wird das nächstliegende Objekt gefunden. Sind sie beide 0, wird nur am Punkt iX/iY gesucht. Sind iX, iY, iWdt und iHgt alle 0, gilt als Suchrechteck die gesamte Karte (auch bei lokalen Aufrufen). Es müssen stets die Bedingungen aller Parameter erfüllt sein, die angegeben und nicht 0 sind.</string> 
  </void> 
  <void property="name"> 
   <string>ObjectCount</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekttyp</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Linke Kante der Position. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Obere Kante der Position. Bei lokalem Aufruf Offset zum aufrufenden Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Suchrechteck Breite</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Suchrechteck Höhe</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objektattribute. Es werden nur Objekte gefunden, die alle angegebenen Objektattribute besitzen. 0 findet alle Objekte.</string> 
      </void> 
      <void property="name"> 
       <string>dwOCF</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Aktivität des zu findenden Objekts</string> 
      </void> 
      <void property="name"> 
       <string>szAction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Aktivitätsziel, das das Objekt besitzen muss. Siehe dazu auch &lt;a href=&quot;../../../sdk/script/fn/SetAction.html&quot;&gt;SetAction&lt;/a&gt;, &lt;a href=&quot;../../../sdk/script/fn/GetActionTarget.html&quot;&gt;GetActionTarget&lt;/a&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>pActionTarget</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Containerobjekt. Wenn angegeben, wird nur dieser Behälter durchsucht. Möglich sind auch &lt;a href=&quot;../../../sdk/script/fn/NoContainer.html&quot;&gt;NoContainer&lt;/a&gt; (Objekt befindet sich im Freien), und &lt;a href=&quot;../../../sdk/script/fn/AnyContainer.html&quot;&gt;AnyContainer&lt;/a&gt; (Objekt ist in einem beliebigen Behälter enthalten).</string> 
      </void> 
      <void property="name"> 
       <string>pContainer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Besitzer, den die gefundenen Objekte haben sollen.</string> 
      </void> 
      <void property="name"> 
       <string>iOwner</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die Anzahl der Objekte zurück, die das angegebenen Suchkriterien erfüllen. Die Suchkriterien werden mittels speziellen Kriteriums-Funktionen der Form &quot;Find_*&quot; angegeben.</string> 
  </void> 
  <void property="name"> 
   <string>ObjectCount2</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Suchkriterium in Form einer Find_*-Funktion</string> 
      </void> 
      <void property="name"> 
       <string>Criteria</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type7"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt dem Objekt pObj einen neuen Vertex hinzu.</string> 
  </void> 
  <void property="name"> 
   <string>AddVertex</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate, von der Objektmitte aus gesehen.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate, von der Objektmitte aus gesehen.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dem der Vertex hinzugefügt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert eine Koordinate des indizierten Vertex (siehe &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore.txt&lt;/a&gt;) eines Objekts. Koordinaten in Relation zur Objektmitte.</string> 
  </void> 
  <void property="name"> 
   <string>GetVertex</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index des Vertex.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Bei fY 0 wird die X-Koordinate, bei fY 1 die Y-Koordinate zurückgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>fY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Vertices ausgelesen werden. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Anzahl der Vertices eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>GetVertexNum</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Vertices ausgelesen werden. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Entfernt einen Vertex von einem Objekt.</string> 
  </void> 
  <void property="name"> 
   <string>RemoveVertex</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index des Vertex, das entfernt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, von dem ein Vertex entfernt werden soll. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt eine Koordinate des indizierten Vertex (siehe &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore.txt&lt;/a&gt;) eines Objekts. Koordinaten in Relation zur Objektmitte.</string> 
  </void> 
  <void property="name"> 
   <string>SetVertex</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index des Vertex.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Gibt an, welche Vertexdaten gesetzt werden sollen. 0=VtxX, 1=VtxY, 2=VtxCNAT, 3=VtxFriction. Erweitert ab CE.</string> 
      </void> 
      <void property="name"> 
       <string>iValueToSet</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wert, auf den die Koordinate gesetzt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iValue</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Objekt, dessen Vertices gesetzt werden. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn 1 oder 2, wird der Wert in den hinteren 25 Vertices gesetzt und aus diesen beim nächsten Shape-Update kopiert. Mit diesem Parameter kann dafür gesorgt werden, dass benutzerdefinierte Vertices auch bei rotierten Objekten erhalten bleiben. Bei Wert 2 werden die gegenwärtigen Objektvertices auch gleich aktualisiert. Ab CE.</string> 
      </void> 
      <void property="name"> 
       <string>iSetCustomPermanent</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt X und Y eines Vertices zugleich</string> 
  </void> 
  <void property="name"> 
   <string>SetVertexXY</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Vertexnummer</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Gewünschte X-Position des Vertices</string> 
      </void> 
      <void property="name"> 
       <string>iXPos</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Gewünschte Y-Position des Vertices</string> 
      </void> 
      <void property="name"> 
       <string>iYPos</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Anzahl feststeckender Vertices von *pObj</string> 
  </void> 
  <void property="name"> 
   <string>VerticesStuck</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt allen Objekten an angegebener Position Explosionsschaden zu. iX und iY sind immer globale Koordinaten. Wenn ein pContainer angegeben ist, wird der Schaden nur den Objekten zugefügt, die in pContainer enthalten sind. Explosionsschaden kann zur Entzündung führen oder auch Lebewesen wegschleudern. Bei lokalen Aufrufen gilt der Schaden als vom Controller des aufrufenden Objekts verursacht.</string> 
  </void> 
  <void property="name"> 
   <string>BlastObjects</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Stärke</string> 
      </void> 
      <void property="name"> 
       <string>iLevel</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, in dem die zu sprengenden Objekte enthalten sind.</string> 
      </void> 
      <void property="name"> 
       <string>pContainer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spielers, der der Verursacher des Schaden ist, plus eins.</string> 
      </void> 
      <void property="name"> 
       <string>iCausedBy</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das ID der indizierten von der Engine in dieser Runde geladenen Objektdefinition der angegebenen Kategorie (dwCategory 0 für alle Objektkategorien).</string> 
  </void> 
  <void property="name"> 
   <string>GetDefinition</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index der gesuchten Definition.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Die Kategory, in der die gesuchte Definition ist.</string> 
      </void> 
      <void property="name"> 
       <string>dwCategory</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type5"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den aktuellen Energiewert eines Objekts in Prozent. 100% stellen hierbei den maximalen Physical-Wert von 100000 dar. Siehe auch DefCore.txt Sektion [Physical]. pObj Null bei lokalem Aufruf.</string> 
  </void> 
  <void property="name"> 
   <string>GetEnergy</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Das Objekt, dessen Energiewert gesucht wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den aktuellen Eintrittsstatus eines Objekts. TRUE bei erlaubtem Eintritt, FALSE bei verbotenem Eintritt.</string> 
  </void> 
  <void property="name"> 
   <string>GetEntrance</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Entrance-Wert abgefragt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die ID eines Objekts zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetID</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Das Objekt, dessen ID gesucht wird.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type5"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den aktuellen Zauberenergiewert eines Objekts. pObj Null bei lokalem Aufruf.</string> 
  </void> 
  <void property="name"> 
   <string>GetMagicEnergy</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Das Objekt, dessen Zauberenergiewert gesucht wird.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt den Namen eines Objekts oder einer Objektdefinition zurück. Hat das Objekt keinen eigenen Namen, wird der Name der Definition zurückgegeben.</string> 
  </void> 
  <void property="name"> 
   <string>GetName</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Das Objekt, dessen Name gesucht wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Falls angegeben, wird stattdessen der Name dieser Definition zurückgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Rang-Nummer von pObj. 0 ist ein unbeförderter Clonk. *pObj ist Null bei lokalem Aufruf.</string> 
  </void> 
  <void property="name"> 
   <string>GetRank</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt dessen Rang zurück gegeben werden soll. Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zündet das übergebene Objekt an. In dem jeweiligen Objekt wird ggf. Incineration() aufgerufen</string> 
  </void> 
  <void property="name"> 
   <string>Incinerate</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, welches entzündet werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Wandelt eine Objektnummer in einen Objektpointer um.</string> 
  </void> 
  <void property="name"> 
   <string>Object</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Eindeutige Objektnummer.</string> 
      </void> 
      <void property="name"> 
       <string>iObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Distanz zwischen zwei Objekten. Ist pObj 0, Wird die Distanz zwischen dem aufrufenden Objekt und pObj2 gemessen.</string> 
  </void> 
  <void property="name"> 
   <string>ObjectDistance</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zweites Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>pObj2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Erstes Objekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bestimmt die Nummer eines Objekts. Diese Nummer ist eindeutig und kann mittels der Funktion &lt;a href=&quot;../../../sdk/script/fn/Object.html&quot;&gt;Object&lt;/a&gt; in einen Objektpointer zurückverwandelt werden.</string> 
  </void> 
  <void property="name"> 
   <string>ObjectNumber</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objektpointer, von dem die Nummer abgefragt wird.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ermöglicht bzw. verhindert das Betreten eines Gebäudes. Nur lokale Aufrufe.</string> 
  </void> 
  <void property="name"> 
   <string>SetEntrance</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0 = Geschlossen; 1 = Offen</string> 
      </void> 
      <void property="name"> 
       <string>iStatus</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert das interne Objektrechteck eines Objekts. Das Objektrechteck wird beispielsweise für Kollisionsabfragen verwendet. Dies hat keine Auswirkung auf die Darstellung des Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetShape</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Offset des neuen Shapes</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Offset des neuen Shapes</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite des neuen Shapes</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe des neuen Shapes</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Schüttelt innerhalb eines kreisförmigen Bereiches alle Lebewesen durch. Dieses Verhalten ist vergleichbar mit &lt;a href=&quot;../../../sdk/script/fn/Fling.html&quot;&gt;Fling&lt;/a&gt;()-Aufrufen mit kleinen Zufallswerten auf alle Objekte im Zielbereich.</string> 
  </void> 
  <void property="name"> 
   <string>ShakeObjects</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Mittelposition des durchgeschüttelten Kreises. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Mittelposition des durchgeschüttelten Kreises. Immer global.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Radius des durchgeschüttelten Kreises</string> 
      </void> 
      <void property="name"> 
       <string>iRadius</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert einen Zeiger auf das Objekt, in dem der Script ausgeführt gerade wird.</string> 
  </void> 
  <void property="name"> 
   <string>this</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verschleudert iAmount Partikel vom angegebenen Typ. Die Zusatzparameter werden zufällig zwischen a0/b0 und a1/b1 gesetzt.</string> 
  </void> 
  <void property="name"> 
   <string>CastParticles</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des Partikeltyps</string> 
      </void> 
      <void property="name"> 
       <string>szName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Anzahl der Partikel</string> 
      </void> 
      <void property="name"> 
       <string>iAmount</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Geschwindigkeit, mit der verschleudert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iLevel</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des Partikels. Relative Koordinaten bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des Partikels. Relative Koordinaten bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Untere Schranke für den ersten Zusatzparameter. Dies ist normalerweise die Größe des Partikels in 1/5-Pixeln.</string> 
      </void> 
      <void property="name"> 
       <string>a0</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Obere Schranke für den ersten Zusatzparameter</string> 
      </void> 
      <void property="name"> 
       <string>a1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Untere Schranke für den zweiten Zusatzparameter. Dies ist normalerweise die Farbmodulation des Partikels.</string> 
      </void> 
      <void property="name"> 
       <string>b0</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Obere Schranke für den zweiten Zusatzparameter</string> 
      </void> 
      <void property="name"> 
       <string>b1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt für objektlokale Partikel. Objektlokale Partikel werden direkt über den jeweiligen Objekten gezeichnet, und beim Entfernen des Objekts gelöscht.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Entfernt alle Partikel eines angegebenen Typs.</string> 
  </void> 
  <void property="name"> 
   <string>ClearParticles</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name der Partikeldefinition, dessen Instanzen gelöscht werden sollen. Bei 0 werden alle Partikel entfernt.</string> 
      </void> 
      <void property="name"> 
       <string>szName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt ein Partikel. Das Partikel muss unter dem angegebenen Namen geladen sein. Für weitere Informationen siehe Partikeldokumentation.</string> 
  </void> 
  <void property="name"> 
   <string>CreateParticle</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des Partikels</string> 
      </void> 
      <void property="name"> 
       <string>szName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des Partikels. Relative Koordinaten bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des Partikels. Relative Koordinaten bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Horizontale Anfangsgeschwindigkeit des Partikels</string> 
      </void> 
      <void property="name"> 
       <string>iXDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Vertikale Anfangsgeschwindigkeit des Partikels</string> 
      </void> 
      <void property="name"> 
       <string>iYDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zusatzparameter. Dies ist normalerweise die Größe des Partikels in 1/5-Pixeln.</string> 
      </void> 
      <void property="name"> 
       <string>a</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zweiter Zusatzparameter. Dies ist normalerweise die Farbmodulation des Partikels.</string> 
      </void> 
      <void property="name"> 
       <string>b</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Zielobjekt für objektlokale Partikel. Objektlokale Partikel werden direkt über den jeweiligen Objekten gezeichnet, und beim Entfernen des Objekts gelöscht.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn ungleich null wird der Partikel hinter dem Zielobjekt gezeichnet.</string> 
      </void> 
      <void property="name"> 
       <string>fBehind</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt ein Linie zwischen zwei Punkten aus Partikeln. Rückgabewert ist die Anzahl der erzeugten Partikel.</string> 
  </void> 
  <void property="name"> 
   <string>DrawParticleLine</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name des Partikeltyps, von dem die Partikel zu erzeugen sind</string> 
      </void> 
      <void property="name"> 
       <string>szKind</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des Startpunktes. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>x0</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des Startpunktes. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>y0</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position des Endpunktes. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>x1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position des Endpunktes. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>y1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Abstand zwischen zwei Partikeln. Dieser Abstand kann möglicherweise nicht genau eingehalten werden, da die Partikel immer gleichmäßig auf die Strecke verteilt werden.</string> 
      </void> 
      <void property="name"> 
       <string>prtdist</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zusatzparameter. Dies ist normalerweise die Größe des Partikels in 1/5-Pixeln.</string> 
      </void> 
      <void property="name"> 
       <string>a</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zweiter Zusatzparameter am Startpunkt. Dies ist normalerweise die Farbmodulation des Partikels.</string> 
      </void> 
      <void property="name"> 
       <string>b0</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zweiter Zusatzparameter am Endpunkt. Dieser Parameter wird vom Start- zum Endpunkt linear interpoliert.</string> 
      </void> 
      <void property="name"> 
       <string>b1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Vertikale Anfangsgeschwindigkeit der Partikel</string> 
      </void> 
      <void property="name"> 
       <string>iYDir</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Beschleunigt alle Partikel eines angegebenen Typs in die angegebene Richtung.</string> 
  </void> 
  <void property="name"> 
   <string>PushParticles</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name der Partikeldefinition, dessen Instanzen beschleunigt werden sollen. Bei 0 werden alle Partikeltypen beschleunigt.</string> 
      </void> 
      <void property="name"> 
       <string>szName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Horizontalbeschleunigung</string> 
      </void> 
      <void property="name"> 
       <string>iAX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Vertikalbeschleunigung</string> 
      </void> 
      <void property="name"> 
       <string>iAY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ruft die lokale Funktion szFunction auf. Stattdessen sollte dieselbe Syntax wie bei engineinternen Funktionen genutzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>Call</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Funktion, die aufgerufen werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>szFunction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ruft eine Funktion in einem Script ohne zugehöriges Objekt auf. Der &lt;a href=&quot;../../../sdk/script/fn/this.html&quot;&gt;this&lt;/a&gt;()-Zeiger gibt in einem solchen Aufruf 0 zurück (Vergleichbar mit dem Szenarioscript).</string> 
  </void> 
  <void property="name"> 
   <string>DefinitionCall</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID der Definition, in dessen Script die Funktion aufgerufen wird</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Aufzurufende Funktion</string> 
      </void> 
      <void property="name"> 
       <string>szFunction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ruft szFunction im Szenario-Script auf. Falls die Funktion nicht im Szenario-Script vorhanden ist, gibt die Funktion Null zurück und verursacht keine Fehlermeldung.</string> 
  </void> 
  <void property="name"> 
   <string>GameCall</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name der Funktion im Szenario-Script</string> 
      </void> 
      <void property="name"> 
       <string>szFunction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ruft die öffentliche Funktion szFunction in pObj auf. Stattdessen sollte die neue Syntax [pObj]-&amp;gt;[szFunction]() oder [pObj]-&amp;gt;[idObj]::[szFunction]() genutzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>ObjectCall</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, in dem die Funktion aufgerufen werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Funktion, die aufgerufen werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>szFunction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ruft die private, geschützte oder öffentliche Funktion szFunction in pObj auf. Es sollte überlegt werden, ob der Aufruf wirklich nötig ist.</string> 
  </void> 
  <void property="name"> 
   <string>PrivateCall</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, in dem die Funktion aufgerufen werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Funktion, die aufgerufen werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>szFunction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ruft die geschützte oder öffentliche Funktion szFunction in pObj auf. Es sollte überlegt werden, ob der Aufruf wirklich nötig ist.</string> 
  </void> 
  <void property="name"> 
   <string>ProtectedCall</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, in dem die Funktion aufgerufen werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Funktion, die aufgerufen werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>szFunction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Wandelt einen String in eine ID um.</string> 
  </void> 
  <void property="name"> 
   <string>C4Id</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Der String, der in eine id umgewandelt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>szID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type5"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt ein neues, mit Nullen gefülltes Feld.</string> 
  </void> 
  <void property="name"> 
   <string>CreateArray</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Länge des neuen Felds</string> 
      </void> 
      <void property="name"> 
       <string>Length</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type7"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt eine Zeichenkette aus verschiedenen Werten zusammen. Dabei wird szStr von vorne bis zum Ende nach mit &apos;%&apos; beginnenden Platzhaltern durchsucht, um diese dann durch die Parameter zu ersetzen.&lt;br&gt;
      Das allgemeine Syntax für diese Platzhalter lautet:&lt;br&gt;
      &lt;code&gt;%[Länge][.Präzision]Typ&lt;/code&gt;
      Bis auf den Typ sind also alle Parameter optional. Der Typ gibt den Datentyp an, den der Parameter hat. Möglich sind folgende Werte:
      &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Typ&lt;/th&gt;
&lt;th&gt;Bedeutung&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;Ganzzahl (int)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;Ganzzahl (int), hexadezimale Ausgabe (0123456789abcdef)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;Ganzzahl (int), hexadezimale Ausgabe (0123456789ABCDEF)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;id (Bei IDs funktionieren die restlichen Parameter wie Länge und Präzision nicht!)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;Zeichenkette&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;v&lt;/td&gt;
&lt;td&gt;Beliebig. Vor allem nützlich zur Fehlersuche.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
      Länge gibt eine Minimallänge an. Wenn der Wert kürzer ist, wird er rechtsbündig ausgerichtet und mit Leerzeichen aufgefüllt. Wird vor die Länge eine &apos;0&apos; gestellt, wird mit Nullen statt Leerzeichen aufgefüllt.&lt;br&gt;
      &lt;br&gt;
      Das Präzisionsfeld verhält sich je nach dem Parametertyp: Bei Ganzzahlen (d) gibt es die Minimalzahl der auszugebenden Zahlen an (der Rest wird mit Nullen aufgefüllt), während es bei Zeichenketten (s) die Maximalzahl der auszugebenden Zeichen angibt.&lt;br&gt;
    </string> 
  </void> 
  <void property="name"> 
   <string>Format</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zeichenkette, in die die Werte eingesetzt werden</string> 
      </void> 
      <void property="name"> 
       <string>szStr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ermittelt den Ascii-Zeichencode eines indizierten Zeichens einer Zeichenkette.</string> 
  </void> 
  <void property="name"> 
   <string>GetChar</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zeichenkette, von der ein Zeichen abgefragt wird</string> 
      </void> 
      <void property="name"> 
       <string>szText</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Position des abgefragten Zeichens. 0 entspricht dabei dem ersten Zeichen. Ist dieser Wert größer oder gleich der Länge der Zeichenkette, wird 0 zurückgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ermittelt die Länge einer Zeichenkette oder eines Felds.</string> 
  </void> 
  <void property="name"> 
   <string>GetLength</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zeichenkette oder Feld, von der die Länge abgefragt wird</string> 
      </void> 
      <void property="name"> 
       <string>szText</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Vergleicht zwei Zeichenketten, und gibt zurück, ob sie gleich sind. Dieser Vergleich beachtet Groß-/Kleinschreibung, und entfernt keine vorangehenden oder nachfolgenden Leerzeichen.</string> 
  </void> 
  <void property="name"> 
   <string>SEqual</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Erste Zeichenkette zum Vergleichen</string> 
      </void> 
      <void property="name"> 
       <string>szStr1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zweite Zeichenkette zum Vergleichen</string> 
      </void> 
      <void property="name"> 
       <string>szStr2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert die Länge eines Felds auf den angegebenen Wert. Überzählige Elemente werden dabei gelöscht.</string> 
  </void> 
  <void property="name"> 
   <string>SetLength</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Feld, dessen Länge verändert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>aResize</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type7"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Länge des Feldes</string> 
      </void> 
      <void property="name"> 
       <string>iSize</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Prüft, ob zwei Strings gleich sind. Die Prüfung ist case-sensitiv, außerdem können Wildcards benutzt werden.
    </string> 
  </void> 
  <void property="name"> 
   <string>WildcardMatch</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>String, der überprüft werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>szStr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>String zum Vergleichen.</string> 
      </void> 
      <void property="name"> 
       <string>szWildcard</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bricht durch &lt;a href=&quot;../../../sdk/script/fn/ScheduleCall.html&quot;&gt;ScheduleCall&lt;/a&gt; erzeugte verzögerte Funktionsaufrufe ab. Alle momentan wartenden Funktionsaufrufe an
		     die angegebene Funktion und das angegebene Objekt werden abgebrochen.</string> 
  </void> 
  <void property="name"> 
   <string>ClearScheduleCall</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, für das verzögerte Funktionsaufrufe abgebrochen werden sollen. 0 für aufrufendes Objekt.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name der Funktion, die durch die abzubrechenden Aufrufe aufgerufen würde.</string> 
      </void> 
      <void property="name"> 
       <string>szFunction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt einen der an die Funktion übergebenen Parameter zurück.</string> 
  </void> 
  <void property="name"> 
   <string>Par</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>0-9: Index des abzufragenden Parameters</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Führt einen bestimmes Script mit Verzögerung aus.</string> 
  </void> 
  <void property="name"> 
   <string>Schedule</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Auszuführendes Script</string> 
      </void> 
      <void property="name"> 
       <string>szScript</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zeit, bis das Script zum ersten Mal ausgeführt werden soll. Wenn iRepeat &amp;gt; 1, ist es außerdem der Zeitabstand zwischen erneuten Ausführungen.</string> 
      </void> 
      <void property="name"> 
       <string>iInterval</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Anzahl der Ausführungen. Wenn 0 oder nicht angegeben wird das Script genau ein mal ausgeführt.</string> 
      </void> 
      <void property="name"> 
       <string>iRepeat</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, in dem das Script ausgeführt werden soll. 0 für lokalen Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ruft eine Funktion nach einer angegebenen Verzögerung auf.</string> 
  </void> 
  <void property="name"> 
   <string>ScheduleCall</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, in dem die Funktion aufgerufen werden soll. 0 für lokalen Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name der Funktion, die aufgerufen werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>szFunction</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zeit, bis die Funktion zum ersten Mal aufgerufen werden soll. Wenn iRepeat &amp;gt; 1, ist es außerdem der Zeitabstand zwischen erneuten Aufrufen.</string> 
      </void> 
      <void property="name"> 
       <string>iInterval</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Anzahl der Aufrufe. Wenn 0 oder nicht angegeben wird die Funktion genau ein mal aufgerufen.</string> 
      </void> 
      <void property="name"> 
       <string>iRepeat</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt den derzeitigen Stand des Scriptzählers fürs Szenarioscript an.</string> 
  </void> 
  <void property="name"> 
   <string>ScriptCounter</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Startet den Scriptzähler, bzw. hält ihn wieder an.</string> 
  </void> 
  <void property="name"> 
   <string>ScriptGo</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Angabe, ob der Zähler gestartet oder gestoppt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>fStart</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ruft die überladene Funktion auf. Funktionen überladen sich, wenn sie beide den gleichen Namen haben. Die Funktion ist im Gegensatz zu &lt;a href=&quot;../../../sdk/script/fn/inherited.html&quot;&gt;inherited&lt;/a&gt; außerdem failsafe. Das heißt, dass es zu keinem Fehler führt, wenn die Ursprungsfunktion gar nicht existiert.</string> 
  </void> 
  <void property="name"> 
   <string>_inherited</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Führt einen als String übergebenen Script aus.</string> 
  </void> 
  <void property="name"> 
   <string>eval</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Auszuführender Script</string> 
      </void> 
      <void property="name"> 
       <string>strScript</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt den Skriptzähler in Szenarioskripten auf den gewünschten Wert. Der Scriptzähler sorgt dafür, dass die ScriptXXX-Funktionen im Szenrienscript aufgerufen werden. Dies funktioniert nicht in Objektscripten, stattdessen sollten TimerCalls oder ActMaps mit StartCall/PhaseCall/EndCall verwendet werden.</string> 
  </void> 
  <void property="name"> 
   <string>goto</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue Position des Skriptzählers. Der nächste ScriptXXX-Aufruf wird bei diesem Zählerwert getätigt.</string> 
      </void> 
      <void property="name"> 
       <string>iCounter</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ruft die überladene Funktion auf. Funktionen überladen sich, wenn sie beide den gleichen Namen haben.</string> 
  </void> 
  <void property="name"> 
   <string>inherited</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt das Objekt zurück, dem die Sicht eines Spielers folgt. Gibt 0 zurück, wenn kein
		      Spieler mit der angegebenen Nummer existiert oder die Spielersicht keinem per Script
		      gesetztem Objekt folgt (siehe &lt;a href=&quot;../../../sdk/script/fn/GetPlrViewMode.html&quot;&gt;GetPlrViewMode&lt;/a&gt;).
    </string> 
  </void> 
  <void property="name"> 
   <string>GetPlrView</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, dessen Sicht abgefragt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt den aktuellen Sichtmodus eines Spielers ab. Die Funktion gibt einen der folgenden Werte zurück:
          &lt;ul&gt;
            &lt;li&gt;0: Cursor - Die Sicht des Spielers folgt dem aktuell selektierten Clonk (siehe &lt;a href=&quot;../../../sdk/script/fn/GetCursor.html&quot;&gt;GetCursor&lt;/a&gt;)&lt;/li&gt;
            &lt;li&gt;1: Target - Die Sicht folgt einem anderen Objekt, welches durch den Befehl &lt;a href=&quot;../../../sdk/script/fn/SetPlrView.html&quot;&gt;SetPlrView&lt;/a&gt; im Script gesetzt wurde. Siehe auch &lt;a href=&quot;../../../sdk/script/fn/GetPlrView.html&quot;&gt;GetPlrView&lt;/a&gt;.&lt;/li&gt;
            &lt;li&gt;2: Scroll - Der Spieler bewegt seine Sicht unabhängig von der Position eines Objekts. Dies geschieht, wenn der Spieler die Maus an den Rand seines Sichtbereichs zieht.&lt;/li&gt;
          &lt;/ul&gt;
    </string> 
  </void> 
  <void property="name"> 
   <string>GetPlrViewMode</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, dessen Sichtmodus abgefragt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Sicht in Filmwiedergaben auf den angegebenen Spieler.</string> 
  </void> 
  <void property="name"> 
   <string>SetFilmView</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, dessen Sicht gezeigt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iToPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Schaltet den Nebel des Krieges für einen Spieler ein oder aus.</string> 
  </void> 
  <void property="name"> 
   <string>SetFoW</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn TRUE, wird der Kriegsnebel aktiviert, bei FALSE deaktiviert.</string> 
      </void> 
      <void property="name"> 
       <string>fEnabled</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Zentriert das Sichtfenster eines Spielers auf ein Objekt. Die Sicht folgt dem Objekt bis zum nächsten Spielerkommando.</string> 
  </void> 
  <void property="name"> 
   <string>SetPlrView</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler, dessen Sicht gesetzt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, auf das die Sicht gesetzt werden soll. </string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Sichtweite eines Objekts.</string> 
  </void> 
  <void property="name"> 
   <string>SetPlrViewRange</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Sichtweite in Pixel.</string> 
      </void> 
      <void property="name"> 
       <string>iRange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Objekt, dessen Sichtweite gesetzt wird. 0 bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verschiebt die Sicht eines Spielers permanent um einen bestimmten Betrag. Ein erneuter Aufruf überschreibt die Verschiebung wieder, ein Aufruf mit 0-Koordinaten setzt die Sicht wieder in den Normalzustand zurück.</string> 
  </void> 
  <void property="name"> 
   <string>SetViewOffset</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler, für den der Sicht-Offset gesetzt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Komponente des Offsets (in Pixel).</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Komponente des Offsets (in Pixel).</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Initiiert den Beitritt eines Scriptspielers. Scriptspieler berhalten sich von der Scriptseite wie reguläre Spieler. Sie haben eine Stammcrew, ein Konto, Baupläne, Heimatbasismaterial, Verfeindungen, Teams, etc. Für diese Spieler wird jedoch regulär kein Sichtfenster geöffnet und sie lassen sich nicht von menschlichen Spielern steuern.&lt;br&gt;Scriptspieler können zum Beispiel verwendet werden, um KI-Gegner wie z.B. Bots in Hazard zu realisieren.</string> 
  </void> 
  <void property="name"> 
   <string>CreateScriptPlayer</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name für den Scriptspieler. Muss angegeben werden.</string> 
      </void> 
      <void property="name"> 
       <string>szName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielerfarbe</string> 
      </void> 
      <void property="name"> 
       <string>dwClr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Team-ID. Wird 0 angegeben, so wird ein Team nach denselben Regeln ausgewählt wie bei einem normal beitretenden Spieler.</string> 
      </void> 
      <void property="name"> 
       <string>idTeam</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Bitmaske aus folgenden Werten:
				&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Bit&lt;/th&gt;
&lt;th&gt;Konstante&lt;/th&gt;
&lt;th&gt;Beschreibung&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;CSPF_FixedAttributes&lt;/td&gt;
&lt;td&gt;Wenn gesetzt, tritt der Spieler garantiert mit den in den Parameter angegebenen Namen und Farbe bei. Ansonsten werden die Attribute bei Kollisionen geändert.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;CSPF_NoScenarioInit&lt;/td&gt;
&lt;td&gt;Wenn wahr, wird die Szenarieninitialisierung, also das Erzeugen von Heimatbasismaterial und Clonks, das Setzen der Baupläne nach Szenarienvorgaben, etc., nicht durchgeführt. Außerdem werden die globalen PreInitializePlayer- und InitializePlayer-Callbacks ans Szenarienscript und die Spielziel-, Regel- und Umweltobjekte nicht ausgeführt. Stattdessen wird ein InitializeScriptPlayer(Spielernummer, Team)-Callback als DefinitionCall (d.h. ohne &lt;a href=&quot;../../../sdk/script/fn/this.html&quot;&gt;this&lt;/a&gt;()-Objekt) auf der in idExtraData angegebenen Definition ausgeführt. Mit diesem Parameter lassen sich also spezialisierte Scriptspieler realisieren, die nicht gleichberechtigt mit menschlichen Spielern agieren.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;CSPF_NoEliminationCheck&lt;/td&gt;
&lt;td&gt;Wenn gesetzt, wird der Spieler nicht automatisch eliminiert, wenn er keine Crew mehr hat.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;CSPF_Invisible&lt;/td&gt;
&lt;td&gt;Wenn gesetzt, ist der Spieler nicht in Spielerlisten wie zum Beispiel in der Lobby und im Verfeindungsmenü sichtbar.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</string> 
      </void> 
      <void property="name"> 
       <string>dwFlags</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  ID, die durchgereicht und an den InitializePlayer-Aufruf weitergegeben wird. Durch Angabe einer ID lassen sich Scriptspieler-Typen unterscheiden. Beispielsweise könnte ein Szenario dynamisch Alien- oder Clonkgegner anbieten.</string> 
      </void> 
      <void property="name"> 
       <string>idExtraData</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert die Kaufbarkeit von Objekten in der Heimatbasis.</string> 
  </void> 
  <void property="name"> 
   <string>DoHomebaseMaterial</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spielers, dessen Heimatbasismaterial verändert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des Objekttyps, der mehr oder weniger oft kaufbar sein soll</string> 
      </void> 
      <void property="name"> 
       <string>idID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Positive oder negative Veränderung der kaufbaren Objektmenge</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert die Nachlieferung von kaufbaren Objekten in der Heimatbasis.</string> 
  </void> 
  <void property="name"> 
   <string>DoHomebaseProduction</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spielers, dessen Heimatbasismaterial-Nachlieferung verändert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des Objekttyps, der schneller oder langsamer nachgeliefert werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>idID</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Positive oder negative Veränderung der nachgelieferten Objektmenge</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verändert den Punktewert eines Spielers. Dieser Wert ergibt zusammen mit dem Spielerwert (Wert aller Objekte im Besitz) die Gesamtpunktezahl des Spielers.</string> 
  </void> 
  <void property="name"> 
   <string>DoScore</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spielers, dessen Punktewert verändert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Positiv oder negativ: Die Veränderung des Punktewertes</string> 
      </void> 
      <void property="name"> 
       <string>iChange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Eliminiert einen Spieler. Die Runde gilt für diesen Spieler als verloren.</string> 
  </void> 
  <void property="name"> 
   <string>EliminatePlayer</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des zu eliminierenden Spielers</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Nummer des Spielers, dessen Heimatbasis pObj ist. Rückgabewert -1 wenn pObj keine Heimatbasis ist.</string> 
  </void> 
  <void property="name"> 
   <string>GetBase</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zu prüfende Heimatbasis. Null bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Dieser Befehl fragt im Clonk in der Spielerdatei gespeicherten Extra-Daten ab, die per &lt;a href=&quot;../../../sdk/script/fn/SetCrewExtraData.html&quot;&gt;SetCrewExtraData&lt;/a&gt; gesetzt wurden.</string> 
  </void> 
  <void property="name"> 
   <string>GetCrewExtraData</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Crewobjekt, aus dessen Infosektion zusätzliche Daten abgefragt werden. 0 für lokalen Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pCrew</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name, dessen zugeordnete Daten abgefragt werden.</string> 
      </void> 
      <void property="name"> 
       <string>strDataName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bei angegebenen id gibt die Funktion die Menge der Objekte zurück, die der Spieler in seiner Heimatbasis kaufen kann. iIndex und dwCategory werden hierbei ignoriert. Wird als id Null übergeben, liefert die Funktion den indizierten Objekttyp der entsprechenden Kategorie der kaufbaren Objekte des Spielers. Der Objekttyp (id) taucht in der Liste auf und wird zurückgeliefert, selbst wenn zur Zeit keine Objekte dieses Typs verfügbar sind.</string> 
  </void> 
  <void property="name"> 
   <string>GetHomebaseMaterial</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Die Nummer des Spieler, dessen Kaufmöglichkeiten abgefragt werden sollen. Der erste Spieler hat die Nummer 0.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, gibt die Funktion die Menge der Objekte zurück, die der Spieler in seiner Heimatbasis kaufen kann. iIndex und dwCategory werden hierbei ignoriert.</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Der Index der gesuchten Kaufmöglichkeit.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Die Kategorie der gesuchten Kaufmöglichkeit.</string> 
      </void> 
      <void property="name"> 
       <string>dwCategory</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bei angegebenen id gibt die Funktion zurück, wie schnell die Menge der Objekte in der Heimatbasis des Spielers nachgeliefert wird. iIndex und dwCategory werden hierbei ignoriert. Wird als id Null übergeben, liefert die Funktion den indizierten Objekttyp der entsprechenden Kategorie der nachgelieferten Objekte des Spielers. Der Objekttyp (id) taucht in der Liste auf und wird zurückgeliefert, selbst wenn zur Zeit keine Objekte dieses Typs nachgeliefert werden.</string> 
  </void> 
  <void property="name"> 
   <string>GetHomebaseProduction</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Die Nummer des Spielers, dessen Kaufmöglichkeiten abgefragt werden sollen. Der erste Spieler hat die Nummer 0.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, gibt die Funktion die Menge der Objekte zurück, die in der Heimatbasis des Spielers nachgeliefert wird. iIndex und dwCategory werden hierbei ignoriert.</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Der Index der gesuchten Kaufmöglichkeit.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Die Kategorie der gesuchten Kaufmöglichkeit.</string> 
      </void> 
      <void property="name"> 
       <string>dwCategory</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die indizierte Spielernummer zurück. Die Funktion garantiert für Werte zwischen 0 und GetPlayerCount()-1, dass eine gültige Spielernummer zurückgegeben wird (denn durch eliminierte Spieler und Neubeitritte kann es vorkommen, dass &quot;Löcher&quot; unbelegter Spielernummern in der Liste entstehen!). Damit ist es einfacher, eine Schleife zu schreiben, die alle Spielernummern durchgeht. Ab 4.9.6.0 CR.</string> 
  </void> 
  <void property="name"> 
   <string>GetPlayerByIndex</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index in der Spielerliste</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, wird der indizierte Spieler des angegebenen Typs zurückgegeben. So lassen sich zum Beispiel nur alle menschlichen oder nur alle Scriptspieler durchgehen. Für eine Liste gültiger Werte, siehe &lt;a href=&quot;../../../sdk/script/fn/GetPlayerType.html&quot;&gt;GetPlayerType&lt;/a&gt;.</string> 
      </void> 
      <void property="name"> 
       <string>ePlayerType</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Anzahl der Spieler, die momentan im Spiel sind.</string> 
  </void> 
  <void property="name"> 
   <string>GetPlayerCount</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegeben, wird nur die Anzahl des Spielers vom angegebenen Typ zurückgegeben. Für eine Liste gültiger Spielertypen siehe &lt;a href=&quot;../../../sdk/script/fn/GetPlayerType.html&quot;&gt;GetPlayerType&lt;/a&gt;.</string> 
      </void> 
      <void property="name"> 
       <string>ePlayerType</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type1"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die Spieler-ID eines beigetretenen Spielers zurück. Spieler-IDs werden von 1 hochgezählt, und - anders als Spielernummern - nicht wieder benutzt, nachdem ein Spieler eliminiert wurde. Jeder neu beigetetene Spieler hat also eine eigene ID.
    </string> 
  </void> 
  <void property="name"> 
   <string>GetPlayerID</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer, dessen ID abgefragt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayerNumber</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Namen eines Spielers. Wenn die Spielernummer zu keinem gültigen Spieler gehört, wird 0 zurückgegeben. Dadurch kann diese Funktion auch benutzt werden, um zu ermitteln, ob eine Spielernummer gültig ist.</string> 
  </void> 
  <void property="name"> 
   <string>GetPlayerName</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spieler, dessen Name abgefragt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das Team eines Spielers. Hat der Spieler kein Team, wird 0 zurückgegeben.
    </string> 
  </void> 
  <void property="name"> 
   <string>GetPlayerTeam</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spieler, dessen Team abgefragt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Typ eines Spielers. Mögliche Typen sind:
                      &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Konstante&lt;/th&gt;
&lt;th&gt;Wert&lt;/th&gt;
&lt;th&gt;Beschreibung&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C4PT_User&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Vom Benutzer gesteuerter Spieler&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;C4PT_Script&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Scriptgeesteuerter Spieler; zum Beispiel KI-Spieler.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
                </string> 
  </void> 
  <void property="name"> 
   <string>GetPlayerType</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spieler, dessen Typ abgefragt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fragt die Spielerfarbe ab. Die Spielerfarbe wird verwendet, um einige Besitzobjekte wie Clonks oder Flaggen, sowie Textnachrichten dieses Spielers einzufärben.</string> 
  </void> 
  <void property="name"> 
   <string>GetPlrColorDw</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Abgefragter Spieler</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt zurück, ob der angegebene Spieler als letzte Aktion Doppel-Stopp
          gedrückt hatte. Mit dieser Funktion kann z.B. in ControlThrow überprüft werden,
          ob der Spieler das selektierte Objekt ablegen wollte, anstatt es zu werfen
          (Doppel-Stopp + Werfen).</string> 
  </void> 
  <void property="name"> 
   <string>GetPlrDownDouble</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, von dem die zuletzt gedrückten Tasten überprüft werden sollen.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Dieser Befehl fragt im Spieler gespeicherten Extra-Daten ab, die per &lt;a href=&quot;../../../sdk/script/fn/SetPlrExtraData.html&quot;&gt;SetPlrExtraData&lt;/a&gt; gesetzt wurden.</string> 
  </void> 
  <void property="name"> 
   <string>GetPlrExtraData</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, für den zusätzliche Daten gespeichert werden sollen</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name, der den Daten zugeordnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>strDataName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Bei angegebenen id gibt die Funktion TRUE zurück, wenn der Spieler den Bauplan des betreffenden herstellbaren Objekts besitzt. iIndex und dwCategory werden hierbei ignoriert. Wird als id Null übergeben, liefert die Funktion den indizierten Bauplan der entsprechenden Kategorie des Spielers.</string> 
  </void> 
  <void property="name"> 
   <string>GetPlrKnowledge</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler, über dessen Baupläne Informationen abgerufen werden sollen.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn angegebenen, dann gibt die Funktion TRUE zurück, wenn der Spieler den Bauplan des betreffenden herstellbaren Objekts besitzt, ansonsten FALSE.</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nur angeben, wenn keine id=0.</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Nur angeben, wenn keine id=0.</string> 
      </void> 
      <void property="name"> 
       <string>dwCategory</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Stellt das Magiewissen eines bestimmten Spielers fest.</string> 
  </void> 
  <void property="name"> 
   <string>GetPlrMagic</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Spielerwert (Wert aller Objekte im Besitz) eines Spielers.</string> 
  </void> 
  <void property="name"> 
   <string>GetPlrValue</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler, dessen Spielerwert gesucht wird.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Änderung des Spielerwerts seit Beginn der Runde.</string> 
  </void> 
  <void property="name"> 
   <string>GetPlrValueGain</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler, dessen Spielerwertgewinn gesucht wird.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Punkte die iPlayer hat.</string> 
  </void> 
  <void property="name"> 
   <string>GetScore</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler-Nummer dessen Punkte zurück gegeben werden sollen.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Anzahl der ausgewählten Clonks von Spieler iPlayer.</string> 
  </void> 
  <void property="name"> 
   <string>GetSelectCount</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler-Nummer.</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Namen eines Spielers mit Markup in dessen Spielerfarbe. Wenn die Spielernummer zu keinem gültigen Spieler gehört, wird 0 zurückgegeben. Dadurch kann diese Funktion auch benutzt werden, um zu ermitteln, ob eine Spielernummer gültig ist.</string> 
  </void> 
  <void property="name"> 
   <string>GetTaggedPlayerName</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spieler, dessen Name abgefragt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlayer</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert das Vermögen von iOwner.</string> 
  </void> 
  <void property="name"> 
   <string>GetWealth</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer</string> 
      </void> 
      <void property="name"> 
       <string>iOwner</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Prüft, ob zwei Spieler verfeindet sind. Dazu reicht es, wenn nur einer von beiden mit dem anderen Spieler verfeindet ist.</string> 
  </void> 
  <void property="name"> 
   <string>Hostile</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Erster Spieler</string> 
      </void> 
      <void property="name"> 
       <string>iPlr1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zweiter Spieler</string> 
      </void> 
      <void property="name"> 
       <string>iPlr2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn WAHR, wird nur geprüft, ob iPlr1 mit iPlr2 verfeindet ist und nicht umgekehrt.</string> 
      </void> 
      <void property="name"> 
       <string>fCheckOneWayOnly</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Spielernummer: Kein Spieler. Diese Konstante kann als Besitzerangabe für diverse Funktionen wie &lt;a href=&quot;../../../sdk/script/fn/CreateObject.html&quot;&gt;CreateObject&lt;/a&gt; oder &lt;a href=&quot;../../../sdk/script/fn/FindObjectOwner.html&quot;&gt;FindObjectOwner&lt;/a&gt; verwendet werden, um einen neutralen Spieler anzugeben.</string> 
  </void> 
  <void property="name"> 
   <string>NO_OWNER</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Aktiviert bzw. deaktiviert ein Mannschaftsmitglied für die Steuerung.</string> 
  </void> 
  <void property="name"> 
   <string>SelectCrew</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>An- bzw. abzuwählendes Objekt</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Auswahl, ob an- oder abgewählt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>fSelect</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Mithilfe dieses Befehls können beliebige, scriptdefinierte Werte unter einem gegebenen Namen im Clonk in der Spielerdatei gespeichert werden.
        Auf diese Weise kann man Daten über einen Clonk in einer Spielerdatei über Szenariogrenzen hinweg erhalten (z.B. für RPGs)
        Zurückgegeben wird (wenn erfolgreich) der gesetzte Wert.</string> 
  </void> 
  <void property="name"> 
   <string>SetCrewExtraData</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Crewobjekt, für dessen Infosektion zusätzliche Daten gespeichert werden sollen. 0 für lokalen Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>pCrew</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name, der den Daten zugeordnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>strDataName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Daten, die gesetzt werden sollen.</string> 
      </void> 
      <void property="name"> 
       <string>Data</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Auswahlmarkierung eines Spielers auf ein Zielobjekt und aktiviert dieses für die Steuerung.</string> 
  </void> 
  <void property="name"> 
   <string>SetCursor</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Anzuwählendes Objekt</string> 
      </void> 
      <void property="name"> 
       <string>pObj</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type4"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn ungleich 0, wird bei der Anwahl kein Auswahlrahmen angezeigt. Ab CE.</string> 
      </void> 
      <void property="name"> 
       <string>fNoSelectMark</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn ungleich 0, wird bei der Anwahl kein Auswahlpfeil angezeigt. Ab CE.</string> 
      </void> 
      <void property="name"> 
       <string>fNoSelectArrow</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt das Bündnisverhältnis zwischen zwei Spielern einseitig.</string> 
  </void> 
  <void property="name"> 
   <string>SetHostility</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Der Spieler, dessen Bündnisverhältnis gesetzt wird</string> 
      </void> 
      <void property="name"> 
       <string>iPlr1</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Der Spieler, zu dem das Bündnisverhältnis gesetzt wird</string> 
      </void> 
      <void property="name"> 
       <string>iPlr2</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn ungleich 0, wird verfeindet. Sonst verbündet.</string> 
      </void> 
      <void property="name"> 
       <string>fHostile</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn ungleich 0, erscheint keine Verfeindungsnachricht im Messageboard. Im ersten Frame des Spieles wird auch ohne diesen Parameter nie eine Nachricht ausgegeben.</string> 
      </void> 
      <void property="name"> 
       <string>fSilent</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn ungleich 0, werden die Callbacks RejectHostilityChange und OnHostilityChange nicht ausgeführt. Ab CR.</string> 
      </void> 
      <void property="name"> 
       <string>fNoCalls</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Ändert die Maximalzahl der Spieler, die an der Runde teilnehmen können. Dieser Wert wirkt sich nur auf Neubeitritte aus; es werden keine vorhandenen Spieler eliminiert, um das Limit zu erfüllen.</string> 
  </void> 
  <void property="name"> 
   <string>SetMaxPlayer</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Neue, maximale Spielerzahl</string> 
      </void> 
      <void property="name"> 
       <string>iNewCount</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Teilt einen Spieler einem neuen Team zu. Es wird geprüft, ob in dem neuen Team noch Platz ist (anhand des MaxPlayer-Werts).
    </string> 
  </void> 
  <void property="name"> 
   <string>SetPlayerTeam</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spieler, dessen Team geändert werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Teamnummer des neuen Teams.</string> 
      </void> 
      <void property="name"> 
       <string>idNewTeam</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn WAHR, werden die Aufrufe &quot;RejectTeamSwitch&quot; und &quot;OnTeamSwitch&quot; nicht getätigt. Der Spieler wird auch nicht neu verfeindet (dies muss ggf. selbst nachgeholt werden).</string> 
      </void> 
      <void property="name"> 
       <string>fDoNoCalls</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Mithilfe dieses Befehls können beliebige, scriptdefinierte Werte unter einem gegebenen Namen in der Spielerdatei gespeichert werden.
        Auf diese Weise kann man Daten über einen Spieler über Szenariogrenzen hinweg erhalten (z.B. für RPGs)
        Zurückgegeben wird (wenn erfolgreich) der gesetzte Wert.</string> 
  </void> 
  <void property="name"> 
   <string>SetPlrExtraData</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, für den zusätzliche Daten gespeichert werden sollen</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Name, der den Daten zugeordnet werden soll</string> 
      </void> 
      <void property="name"> 
       <string>strDataName</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Daten, die gesetzt werden sollen.</string> 
      </void> 
      <void property="name"> 
       <string>Data</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type6"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt einen Bauplan zum Wissen des Spielers hinzu (oder entfernt ihn bei angegebenem fRemove).</string> 
  </void> 
  <void property="name"> 
   <string>SetPlrKnowledge</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler, dem ein Bauplan gegeben werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID der Objektdefinition, für die der Bauplan gegeben werden soll</string> 
      </void> 
      <void property="name"> 
       <string>idDef</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Wenn ungleich 0, wird der Bauplan vom Wissen des Spielers entfernt</string> 
      </void> 
      <void property="name"> 
       <string>fRemove</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt einen Zauber der Liste der verfügbaren Zauber eines Spielers hinzu oder entfernt einen Zauber aus der Liste.</string> 
  </void> 
  <void property="name"> 
   <string>SetPlrMagic</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Nummer des Spielers, dessen Liste der verfügbaren Zauber geändert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des Zaubers</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Ob der Zauber entfernt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>Remove</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Markiert für einen Spieler ein bestimmtes Kommando. Ist die Darstellung deaktiviert, so wird sie aktiviert.
		      Das markierte Kommando wird dann (so verfügbar) blinkend dargestellt.&lt;br&gt;&lt;br&gt;
          Spielerkommandonummern:
          &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Nummer&lt;/th&gt;
&lt;th&gt;Bedeutung&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Links&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Rechts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Springen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Stopp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Werfen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Graben&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Special&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Special 2&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
          Für Doppelkommandos (z.B. Doppel-Graben) muss jeweils 128 auf den Kommandowert aufaddiert werden.
	    </string> 
  </void> 
  <void property="name"> 
   <string>SetPlrShowCommand</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zu markierendes Spielerkommando.</string> 
      </void> 
      <void property="name"> 
       <string>iCom</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Steuert die grafische Darstellung der Clonk-Steuerungstasten eines Spielers in seinem Sichtfenster.&lt;br&gt;&lt;br&gt;
          Es können die folgenden Tasten angezeigt werden:
          &lt;table&gt;
&lt;tr&gt;
&lt;th&gt;Nummer&lt;/th&gt;
&lt;th&gt;Bedeutung&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Cursor Rechts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Cursor Umschalt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Cursor Links&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Werfen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Springen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Graben&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Links&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Stopp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Rechts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;dark&quot;&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Optionen&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
          Für jede Taste kann einzeln angegeben werden, ob und wie sie angezeigt werden soll. Dabei gibt es für jede Taste drei Optionen, die angegeben werden können:
          &lt;ul&gt;
          	&lt;li&gt;Ob sie angezeigt werden soll&lt;/li&gt;
          	&lt;li&gt;Ob die Taste beschriftet sein soll&lt;/li&gt;
          	&lt;li&gt;Ob die Beschriftung blinken soll&lt;/li&gt;
          &lt;/ul&gt;
          Entsprechend gibt es 3 Blocks von Optionen. Jeder dieser Blocks besteht dabei aus 10 Buchstaben, wobei &quot;_&quot; und &quot; &quot; für &quot;Nein&quot; und jeder andere Buchstabe für &quot;Ja&quot; steht (siehe Beispiel).
	    </string> 
  </void> 
  <void property="name"> 
   <string>SetPlrShowControl</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler, dessen Tasten darzustellen sind.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spezifikation der darzustellenden Tasten.</string> 
      </void> 
      <void property="name"> 
       <string>szDefString</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Position der grafischen Darstellung des Steuerungsblocks eines Spielers (siehe &lt;a href=&quot;../../../sdk/script/fn/SetPlrShowControl.html&quot;&gt;SetPlrShowControl&lt;/a&gt;).</string> 
  </void> 
  <void property="name"> 
   <string>SetPlrShowControlPos</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spieler, für den die Darstellungsposition der Tasten geändert werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Positionsnummer. 0 für Oben Mitte (Standard), 1 für Unten Rechts.</string> 
      </void> 
      <void property="name"> 
       <string>iPos</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt das Vermögen eines Spielers.</string> 
  </void> 
  <void property="name"> 
   <string>SetWealth</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Spielernummer des Spielers, dessen Vermögen verändert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iPlr</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Das neue Vermögen.</string> 
      </void> 
      <void property="name"> 
       <string>iValue</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Fügt ein Passwort in die Liste der Missionszugänge ein. Alle Spieler auf dem selben Computer können dann ein Szenario starten, welches in der Scenario.txt dieses Passwort als Voraussetzung enthält. Sinnvollerweise sollte jedes Szenario in einer Reihe von Missionen bei erfolgreichem Beenden der Runde das für die jeweils nächste Mission benötigte Passwort freigeben.</string> 
  </void> 
  <void property="name"> 
   <string>GainMissionAccess</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Passwort, das der Liste hinzugefügt wird.</string> 
      </void> 
      <void property="name"> 
       <string>szPassword</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Stellt fest und gibt zurück, ob der Spieler bereits das angegebene Missionszugangspasswort besitzt</string> 
  </void> 
  <void property="name"> 
   <string>GetMissionAccess</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Missionszugang, der überprüft wird</string> 
      </void> 
      <void property="name"> 
       <string>strMissionAccess</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type3"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die momentane Uhrzeit zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetSystemTime</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Was genau zurückgegeben werden soll (siehe Anmerkung)</string> 
      </void> 
      <void property="name"> 
       <string>iWhat</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die Zeit seit Windowsstart in Millisekunden zurück. Kann zur genauen Zeitmessung
					verwendet werden.</string> 
  </void> 
  <void property="name"> 
   <string>GetTime</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt die indizierte Teamnummer zurück. Die Funktion garantiert für Werte zwischen 0 und GetTeamCount()-1, dass eine gültige Teamnummer zurückgegeben wird (denn durch eliminierte Spieler und Neubeitritte kann es vorkommen, dass &quot;Löcher&quot; unbelegter Teamnummern in der Liste entstehen!). Damit ist es einfacher, eine Schleife zu schreiben, die alle Teamnummern durchgeht.
    </string> 
  </void> 
  <void property="name"> 
   <string>GetTeamByIndex</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index in der Teamliste</string> 
      </void> 
      <void property="name"> 
       <string>iIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Farbe eines Teams.
    </string> 
  </void> 
  <void property="name"> 
   <string>GetTeamColor</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Teamnummer des Teams, dessen Farbe abgefragt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iTeam</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Anzahl der Teams, die momentan im Spiel sind.
    </string> 
  </void> 
  <void property="name"> 
   <string>GetTeamCount</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Namen eines Teams.
    </string> 
  </void> 
  <void property="name"> 
   <string>GetTeamName</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Teamnummer des Teams, dessen Name abgefragt werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iTeam</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type3"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt eine Luftblase.</string> 
  </void> 
  <void property="name"> 
   <string>Bubble</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  X-Position der Luftblase. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Y-Position der Luftblase. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt eine Rauchwolke an der angegebenen Position.</string> 
  </void> 
  <void property="name"> 
   <string>Smoke</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position der Rauchwolke. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position der Rauchwolke. Offset bei lokalem Aufruf.</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Größe des Rauchs</string> 
      </void> 
      <void property="name"> 
       <string>iLevel</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den aktuellen Klimawert. Dieser wird als Konstante zum durch TemperatureRange und Season entstehenden Wert hinzugezählt.</string> 
  </void> 
  <void property="name"> 
   <string>GetClimate</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die aktuelle Jahreszeit. 0 ist Winter, 50 Sommer.</string> 
  </void> 
  <void property="name"> 
   <string>GetSeason</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die globale Temperatur. Werte abhängig von Klima und Jahreszeit zwischen +80 und -80.</string> 
  </void> 
  <void property="name"> 
   <string>GetTemperature</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert die Windstärke und Richtung an der Position X, Y. Wird die Funktion aus einem Objekt heraus aufgerufen, so ist die Position relativ zur Objektposition. Wenn fGlobal=true, wird der globale Wind zurückgegeben.</string> 
  </void> 
  <void property="name"> 
   <string>GetWind</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Position</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Position</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>[opt]
  Ob der globale Wind abgefragt werden soll. Ab CE.</string> 
      </void> 
      <void property="name"> 
       <string>fGlobal</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt einen Blitz. Dieser bewegt sich von der Position (iX, iY) mit der angegebenen Geschwindigkeit fort. Dabei geben iXRange/iYRange an, wie sehr der Blitz von diesem vorgegegebenen Weg abweichen kann (mit iXRange = iYRange = 0 würde der Blitz schnurgerade verlaufen). iXRange/iYRange sind sozusagen ein Maß für die &quot;Zackigkeit&quot; eines Blitzes.&lt;br&gt;
          Die Position muss auch bei lokalem Aufruf in globalen Koordinaten angegeben werden.</string> 
  </void> 
  <void property="name"> 
   <string>LaunchLightning</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Zielposition</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Zielposition</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>horizontale mittlere Geschwindigkeit des Blitzes</string> 
      </void> 
      <void property="name"> 
       <string>iXAdvance</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>maximale Abweichung von iXAdvance</string> 
      </void> 
      <void property="name"> 
       <string>iXRange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>vertikale mittlere Geschwindigkeit des Blitzes</string> 
      </void> 
      <void property="name"> 
       <string>iYAdvance</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>maximale Abweichung von iYAdvance</string> 
      </void> 
      <void property="name"> 
       <string>iYRange</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wenn gesetzt, bewirkt dieser Blitz ein Aufflackern des Bildschirms bei allen Spielern.</string> 
      </void> 
      <void property="name"> 
       <string>fDoGamma</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type2"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die Jahreszeit.</string> 
  </void> 
  <void property="name"> 
   <string>SetSeason</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Jahreszeit von 0 (Frühling) bis 100 (Winter).</string> 
      </void> 
      <void property="name"> 
       <string>iSeason</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die globale Temperatur.</string> 
  </void> 
  <void property="name"> 
   <string>SetTemperature</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Temperatur von -100 bis 100.</string> 
      </void> 
      <void property="name"> 
       <string>iTemperature</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt die globale Windrichtung und -stärke.</string> 
  </void> 
  <void property="name"> 
   <string>SetWind</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Windstärke von -100 bis 100.</string> 
      </void> 
      <void property="name"> 
       <string>iWind</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt einen Erdbeben an angegebener Stelle. Koordinaten auch bei lokalem Aufruf global</string> 
  </void> 
  <void property="name"> 
   <string>LaunchEarthquake</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Zielposition</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Y-Zielposition</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt einen Vulkan an angegebener Position. Da Vulkane immer von der Unterseite der Landschaft ausgehen, wird hier kein Y-Parameter benötigt.</string> 
  </void> 
  <void property="name"> 
   <string>LaunchVolcano</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>X-Zielposition</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erzeugt ein Lebewesen vom angegebenen Typ in der Landschaft. Die Startposition bestimmt sich dabei aus dem Wert Placement im &lt;a href=&quot;../../../sdk/definition/defcore.html&quot;&gt;DefCore&lt;/a&gt; des Lebewesens. Rückgabewert ist ein Zeiger auf das neu erzeugte Objekt.</string> 
  </void> 
  <void property="name"> 
   <string>PlaceAnimal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des zu erstellenden Tieres.</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Platziert Vegetation im angegebenen Zielrechteck. Bei lokalen Aufrufen gelten die Koordinaten als Offset zur Mitte des aufrufenden Objekts. Rückgabewert ist ein Zeiger auf das neu erzeugte Objekt.</string> 
  </void> 
  <void property="name"> 
   <string>PlaceVegetation</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>ID des zu erstellenden Objekts.</string> 
      </void> 
      <void property="name"> 
       <string>id</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type5"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Obere linke Ecke des Zielrechtecks, X-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iX</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Obere linke Ecke des Zielrechtecks, Y-Koordinate</string> 
      </void> 
      <void property="name"> 
       <string>iY</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Breite des Zielrechtecks</string> 
      </void> 
      <void property="name"> 
       <string>iWdt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Höhe des Zielrechtecks</string> 
      </void> 
      <void property="name"> 
       <string>iHgt</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wachstumsphase des Zielobjekts. -1 platziert Vegetation in zufälligem Wachstumsstadium, ansonsten gilt der Wertebereich 1-100000 (1-100%)</string> 
      </void> 
      <void property="name"> 
       <string>iGrowth</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type4"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Weist den Wert iValue einer beliebigen Thread-lokalen Variablen (ab 0) zu. Der Datentyp ist variabel. Thread-lokale Variablen gelten nur für die Dauer des aktuellen Funktionsaufrufes. AssignVar wurde durch &lt;a href=&quot;../../../sdk/script/fn/SetVar.html&quot;&gt;SetVar&lt;/a&gt; abgelöst.</string> 
  </void> 
  <void property="name"> 
   <string>AssignVar</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Die threadlokale Variable, die gesetzt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>iVarIndex</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Zu setzender Wert.</string> 
      </void> 
      <void property="name"> 
       <string>iValue</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Datentyp: Unbekannter Datentyp.</string> 
  </void> 
  <void property="name"> 
   <string>C4V_Any</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Datentyp: Boolscher Wert (1 oder 0).</string> 
  </void> 
  <void property="name"> 
   <string>C4V_Bool</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Datentyp: id.</string> 
  </void> 
  <void property="name"> 
   <string>C4V_C4ID</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Datentyp: Objektzeiger.</string> 
  </void> 
  <void property="name"> 
   <string>C4V_C4Object</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Datentyp: Ganzzahl.</string> 
  </void> 
  <void property="name"> 
   <string>C4V_Int</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Datentyp: Zeichenkette.</string> 
  </void> 
  <void property="name"> 
   <string>C4V_String</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erniedrigt die Variable Var um 1. Bitte den &quot;--&quot;-Operator verwenden.</string> 
  </void> 
  <void property="name"> 
   <string>Dec</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Verringert die angegebene, threadlokale Variable. Neuere Scripte sollten den &quot;--&quot;-Operator und benannte Variablen benutzen.</string> 
  </void> 
  <void property="name"> 
   <string>DecVar</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index der lokalen Variable, die verringert werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iVarNum</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt den Typ des übergebenen Werts zurück.</string> 
  </void> 
  <void property="name"> 
   <string>GetType</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wert dessen Typ abgefragt werden soll.</string> 
      </void> 
      <void property="name"> 
       <string>Value</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Inhalt der globalen Variable iVarIndex.</string> 
  </void> 
  <void property="name"> 
   <string>Global</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Liefert den Inhalt der globalen Variable mit dem Namen szText. Per GlobalN(&quot;Name&quot;)=Wert; kann der Wert einer benannten globalen Variable gesetzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>GlobalN</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erhöht die Variable Var um 1. Bitte den &quot;++&quot;-Operator verwenden.</string> 
  </void> 
  <void property="name"> 
   <string>Inc</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Erhöht die angegebene, threadlokale Variable. Neuere Scripte sollten den &quot;++&quot;-Operator und benannte Variablen benutzen.</string> 
  </void> 
  <void property="name"> 
   <string>IncVar</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Index der lokalen Variable, die erhöht werden soll</string> 
      </void> 
      <void property="name"> 
       <string>iVarNum</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type0"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type0"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Prüft, ob Value eine Referenz ist.</string> 
  </void> 
  <void property="name"> 
   <string>IsRef</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"> 
    <void method="add"> 
     <object class="net.arctics.clonk.parser.C4Variable"> 
      <void property="description"> 
       <string>Wert, dessen Typ geprüft werden soll</string> 
      </void> 
      <void property="name"> 
       <string>Value</string> 
      </void> 
      <void property="scope"> 
       <object idref="C4Variable$C4VariableScope0"/> 
      </void> 
      <void property="type"> 
       <object idref="C4Type6"/> 
      </void> 
     </object> 
    </void> 
   </object> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type2"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt den Wert einer lokalen Variable (als Referenz) zurück. Jedes Objekt kann eine beliebige Anzahl lokaler Variablen besitzen. Diese werden für jedes Objekt dauerhaft gespeichert und gehen erst verloren, wenn das Objekt gelöscht wird. Eine lokale Variable hat bei Erstellung des Objekts immer den Wert 0.</string> 
  </void> 
  <void property="name"> 
   <string>Local</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt eine Referenz auf eine Objektlokale Variable zurück. Diese Referenz kann zum Lesen und Schreiben benutzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>LocalN</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt eine &lt;a href=&quot;../../../sdk/script/fn/Global.html&quot;&gt;Global&lt;/a&gt;-Variable.</string> 
  </void> 
  <void property="name"> 
   <string>SetGlobal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Setzt eine &lt;a href=&quot;../../../sdk/script/fn/Local.html&quot;&gt;Local&lt;/a&gt;-Variable in einem Objekt (wenn nicht angegeben, wird die Variable in dem aufrufenden Objekt gesetzt).</string> 
  </void> 
  <void property="name"> 
   <string>SetLocal</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Weist den Wert iValue einer beliebigen Thread-lokalen Variablen (ab 0) zu. Der Datentyp ist variabel. Thread-lokale Variablen gelten nur für die Dauer des aktuellen Funktionsaufrufes. Numerierte Variablen wurden durch Variablen mit Namen abgelöst, sind aber für Arrays nützlich.</string> 
  </void> 
  <void property="name"> 
   <string>SetVar</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt eine Referenz auf eine funktionslokale Variable zurück. Diese Referenz kann zum Lesen und Schreiben benutzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>Var</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
 <object class="net.arctics.clonk.parser.C4Function"> 
  <void property="description"> 
   <string>Gibt eine Referenz auf eine funktionslokale Variable zurück. Diese Referenz kann zum Lesen und Schreiben benutzt werden.</string> 
  </void> 
  <void property="name"> 
   <string>VarN</string> 
  </void> 
  <void property="parameter"> 
   <object class="java.util.ArrayList"/> 
  </void> 
  <void property="returnType"> 
   <object idref="C4Type1"/> 
  </void> 
  <void property="visibility"> 
   <object idref="C4Function$C4FunctionScope0"/> 
  </void> 
 </object> 
</java> 
