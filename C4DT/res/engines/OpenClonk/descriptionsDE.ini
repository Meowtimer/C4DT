[Functions]
	[_inherited]
	Description=Ruft die überladene Funktion auf. Funktionen überladen sich, wenn sie beide den gleichen Namen haben. Die Funktion ist im Gegensatz zu <funclink>inherited<funclink/> außerdem failsafe. Das heißt, dass es zu keinem Fehler führt, wenn die Ursprungsfunktion gar nicht existiert.

	[Abs]
	Description=Bildet den Absolutwert (Betrag), entfernt also das Vorzeichen des ersten Parameters.
		[value]
		Description=Wert, von dem der absolutwert gebildet werden soll


	[AbsX]
	Description=Liefert das relative X in Bezug auf Objektmitte wenn von einem Objekt aufgerufen. Sonst liefert diese Funktion das übergebene X zurück
		[x]
		Description=X


	[AbsY]
	Description=Liefert das relative Y in Bezug auf Objektmitte wenn von einem Objekt aufgerufen. Sonst liefert diese Funktion das übergebene Y zurück
		[y]
		Description=Y


	[ActIdle]
	Description=Prüft, ob das aufrufende Objekt eine Aktivität ausführt.

	[AddCommand]
	Description=Fügt ein Kommado in die Kommandoliste des aufrufenden Objekts hinzu (an den Anfang, siehe auch <funclink>AppendCommand<funclink/>). D.h. es wird ein Kommando hinzugefügt, welches das Objekt vor anderen vorher gegebenen Kommandos auszuführen hat (war vorher kein Kommando gesetzt, so entspricht AddCommand <funclink>SetCommand<funclink/>) <br><br/> Für Kommando-Beschreibungen siehe <funclink>SetCommand<funclink/>
		[command]
		Description=Kommandoname (als String). Siehe untere Tabelle

		[target]
		Description=Zielobjekt für Aktion

		[x]
		Description=X-Zielkoordinate

		[y]
		Description=Y-Zielkoordinate

		[target2]
		Description=zweites Zielobjekt

		[delay]
		Description=Zeit (in Ticks/Frames), bis das Kommando abgebrochen wird (es wird dann mit dem nachsten in der Kommandoliste fortgesetzt)

		[Data]
		Description=zusätzliche Daten zur Aktion

		[retries]
		Description=Anzahl der Wiederholungen (wenn das Kommando fehlschlägt), bis das Kommando abgebrochen wird.

		[base_mode]
		Description=Determines the behaviour if the command fails.<br><br/><br><br/>
            <table>
              <rowh>
                <col>base_mode<col/>
                <col>Name<col/>
                <col>Beschreibung<col/>
                <col>Fehlschlagsmeldung und CallFailed-Aufrufe<col/>
                <col>Nächster Befehl<col/>
              <rowh/>
              <row>
                <col>0<col/>
                <col>C4CMD_SilentSub<col/>
                <col>Stiller Unterbefehl<col/>
                <col>Nur wenn dies der letzte Befehl ist<col/>
                <col>Schlägt fehl<col/>
              <row/>
              <row>
                <col>3<col/>
                <col>C4CMD_Sub<col/>
                <col>Unterbefehl<col/>
                <col>Wenn der nächste Befehl keine Wiederholungen mehr hat oder dies der letzte Befehl ist<col/>
                <col>Schlägt fehl<col/>
              <row/>
              <row>
                <col>2<col/>
                <col>C4CMD_SilentBase<col/>
                <col>Stiller Basisbefehl<col/>
                <col>Nie<col/>
                <col>Schlägt nicht fehl<col/>
              <row/>
              <row>
                <col>1<col/>
                <col>C4CMD_Base<col/>
                <col>Basisbefehl<col/>
                <col>Immer<col/>
                <col>Schlägt nicht fehl<col/>
              <row/>
            <table/>


	[AddEffect]
	Description=Erzeugt einen Effekt. Rückgabewert ist der Effekt bei Erfolg, oder <code>nil<code/> bei Fehlschlag (weil der Effekt beispielsweise abgelehnt wurde). Wenn der Effekt von einem anderen Effekt aufgenommen wurde, der sich in demselben Aufruf entfernt, wird wahrscheinlich <code>nil<code/> zurückgegeben.
		[name]
		Description=Name des Effektes ohne vorangestelltes Fx.

		[target]
		Description=Zielobjekt für den Effekt. Bei <code>nil<code/> wird der Effekt global erzeugt.

		[priority]
		Description=Priorität für den Effekt. Achtung: Die Priorität darf nicht 0 sein; ansonsten wird der Effekt nicht erzeugt!

		[timer]
		Description=Intervall, in dem Timer-Aufrufe getätigt werden. Bei <code>nil<code/> werden keine Timer-Aufrufe durchgeführt, und der Effekt bleibt permanent bis er durch anderwertige Aufrufe entfernt wird.

		[command_target]
		Description=Befehlsziel. Wenn angegeben, werden alle Callbacks in diesem Objekt ausgeführt. Ansonsten finden diese Callbacks grundsätzlich ohne Objektkontext statt. Wenn das Befehlszielobjekt gelöscht wird, werden alle verbundenen Effekte ohne weitere Callbacks ebenfalls gelöscht. Falls das Befehlsziel seine Definition ändert, sollten verbundene Effekte mit <code>effect.Name = effect.Name<code/> ihre Funktionen neu zuweisen lassen.

		[command_target_id]
		Description=Definition, in der bei nicht angegebenem Befehlsziel-Objekt Callbacks ausgeführt werden. Sind sowohl command_target als auch command_target_id <code>nil<code/>, werden die Aufrufe global durchgeführt. Das heißt, die Fx*-Funktionen müssen als global deklariert sein, oder Enginefunktionen sein.

		[var1]
		Description=Erster Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird

		[var2]
		Description=Zweiter Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird

		[var3]
		Description=Dritter Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird

		[var4]
		Description=Vierter Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird


	[AddMenuItem]
	Description=Fügt einen Menüeintrag hinzu.
		[caption]
		Description=Text des neuen Menüeintrags

		[command]
		Description=Kommando, das bei Auswahl des Menüeintrags ausgeführt werden soll. Kann entweder ein Funktionsname oder ein Statement sein. Wenn ein Funktionsname angegeben wird, dann wird die Funktion in dem Objekt aufgerufen, welches bei <funclink>CreateMenu<funclink/> als command_object übergeben wurde.

		[symbol]
		Description=Die ID wird als Bild für den Menüeintrag verwendet. Der Name der Definition kann mit %s in caption verwendet werden. Außerdem wird die ID als erster Parameter an den Aufruf von command übergeben, sofern dieser nur ein Funktionsname ist.

		[count]
		Description=Gewünschte Zahl, die neben dem Menüeintrag angezeigt werden soll (ähnlich der Mengenanzeige im Aktivieren-Menü)

		[parameter]
		Description=Wird als 2. Parameter an die in command angegebene Funktion übergeben (siehe Anmerkung)

		[info_caption]
		Description=Beschreibungstext des neuen Menüeintrags

		[extra]
		Description=Zusatzparameter für das Verhalten des Menüeintrags.<br><br/> Untere 7 Bits (0-127): Menüsymbol.<br><br/> 0: Normal<br><br/> 1: Rangsymbol. Bei angegebenem symbol wird ggf. die Rank.png der Definition genutzt. count gibt die Ranghöhe an<br><br/> 2: Picturefacet, das um XPar1-fache Picturebreite nach rechts verschoben ist. Damit lassen sich mehrere Menüsymbole innerhalb einer Definition unterbringen.<br><br/> 3: XPar1 gibt ein Objekt an, dessen Picture-Grafik mit Rang gezeichnet wird. Hat das Objekt keine Infosektion (und dmait keinen Rang), so wird in Kontextmenüs dennoch ein entsprechender Leerraum gelassen.<br><br/> 4: XPar1 gibt ein Objekt an, dessen Picture-Grafik gezeichnet wird.<br><br/> Bit 8 (128): XPar2 wird als Wertangabe benutzt, und überschreibt die Standardangabe (Wert der Definition symbol). Siehe auch extra von <funclink>CreateMenu<funclink/>

		[XPar1]
		Description=Erster Zusatzparameter für extra.

		[XPar2]
		Description=Zweiter Zusatzparameter für extra.


	[AddMsgBoardCmd]
	Description=Erzeugt ein neues selbstdefiniertes Messageboard-Kommando. Dieses Kommando kann von jedem Spieler im Spiel durch Eingabe von "/[Kommandoname]" aufgerufen werden. In dem Fall wird der angegebene Script ausgeführt. Im Script kann "%s" dafür verwendet werden, eventuell angegebene Parameter einzubinden.
		[command]
		Description=Name des MessageBoard-Kommandos

		[script]
		Description=Auszuführender Script


	[AddVertex]
	Description=Fügt dem aufrufenden Objekt einen neuen Vertex hinzu.
		[x]
		Description=X-Koordinate, von der Objektmitte aus gesehen.

		[y]
		Description=Y-Koordinate, von der Objektmitte aus gesehen.


	[Angle]
	Description=Liefert den Winkel, in dem sich der zweite Punkt vom ersten Punkt aus gesehen befindet. Der Winkel wird in Grad zurückgeliefert, 0° ist senkrecht oben. Alle Koordinaten sind global.
		[x1]
		Description=X-Koordinate des ersten Punktes

		[y1]
		Description=Y-Koordinate des ersten Punktes

		[x2]
		Description=X-Koordinate des zweiten Punktes

		[y2]
		Description=Y-Koordinate des zweiten Punktes

		[precision]
		Description=Gibt, wenn angegeben, den Winkel multipliziert mit precision zurück, um so genauere Winkel zu erhalten. Eine Präzision von 10 gibt also Werte zwischen 0 und 3600 zurück.


	[Anim_AbsX]
	Description=Der Wert hängt von der Bewegung des Objekts in X-Richtung ab. Jeder Pixel den sich das Objekt in X-Richtung bewegt erhöht den Wert etwas. Wenn end erreicht wurde wird der Wert wieder auf begin zurückgesetzt. Im Gegensatz zu <funclink>Anim_X<funclink/> bewegt sich der Wert immer auf end zu, egal in welche Richtung sich das Objekt bewegt.
		[position]
		Description=Startwert. Sollte innerhalb des von begin und end aufgespannten Intervalls liegen.

		[begin]
		Description=Beginn des Intervalls.

		[end]
		Description=Schluss des Intervalls. Wenn end größer als begin ist, so nimmt der Wert mit der Bewegung des Objekts zu, andernfalls nimmt er ab.

		[length]
		Description=Anzahl Pixel die in X-Richtung zurückgelegt werden müssen um die Animation von begin bis nach end durchzuspielen.


	[Anim_AbsY]
	Description=Der Wert hängt von der Bewegung des Objekts in Y-Richtung ab. Jeder Pixel den sich das Objekt in Y-Richtung bewegt erhöht den Wert etwas. Wenn end erreicht wurde wird der Wert wieder auf begin zurückgesetzt. Im Gegensatz zu <funclink>Anim_Y<funclink/> bewegt sich der Wert immer auf end zu, egal in welche Richtung sich das Objekt bewegt.
		[position]
		Description=Startwert. Sollte innerhalb des von begin und end aufgespannten Intervalls liegen.

		[begin]
		Description=Beginn des Intervalls.

		[end]
		Description=Schluss des Intervalls. Wenn end größer als begin ist, so nimmt der Wert mit der Bewegung des Objekts zu, andernfalls nimmt er ab.

		[length]
		Description=Anzahl Pixel die in Y-Richtung zurückgelegt werden müssen um die Animation von begin bis nach end durchzuspielen.


	[Anim_Action]
	Description=Der Wert hängt von der Phase der aktuellen Action ab. Die Phase wird linear auf die von der Action zur Zeit abgespielte Animation abgebildet (siehe <emlink>ActMap<emlink/>). Dies kann verwendet werden um Animationen synchron zur ActMap-Animation zu spielen.

	[Anim_Const]
	Description=Wertangabe für <funclink>PlayAnimation<funclink/>, <funclink>SetAnimationPosition<funclink/> oder <funclink>SetAnimationWeight<funclink/>: Über die komplette Zeitdauer der Animation wird der gegebene konstante Wert verwendet.
		[value]
		Description=Zu verwendender Wert.


	[Anim_Linear]
	Description=Der Wert nimmt linear mit der Zeit (in Frames) zu oder ab (je nachdem ob end größer oder kleiner als begin ist). Anfangs beträgt der Wert position und läuft dann Richtung end. Ein Durchgang von begin bis nach end dauert length Frames. Wenn position von begin abweicht dann wird end bereits früher erreicht sein. on_ending bestimmt, was passiert, wenn das Ende erreicht ist.
		[position]
		Description=Startwert. Sollte innerhalb des von begin und end aufgespannten Intervalls liegen.

		[begin]
		Description=Beginn des Intervalls.

		[end]
		Description=Schluss des Intervalls. Wenn end größer als begin ist, so steigt der Wert mit der Zeit an, andernfalls nimmt er ab.

		[length]
		Description=Anzahl Frames die ein Durchspielen von begin bis end dauert.

		[on_ending]
		Description=Specifies what happens once end is reached. There are the following possibilities:
            <table>
              <rowh><col>Konstante<col/><col>Wert<col/><col>Beschreibung<col/><rowh/>
              <row><col>ANIM_Loop<col/><col>0<col/><col>Der Wert wird nach dem Erreichen von end wieder auf begin gesetzt und der Durchgang beginnt von neuem.<col/><row/>
              <row><col>ANIM_Hold<col/><col>1<col/><col>Nach Erreichen von end bleibt der Wert konstant auf end.<col/><row/>
              <row><col>ANIM_Remove<col/><col>2<col/><col>Nach Erreichen von end wird die zugehörige Animation entfernt wie wenn zum entsprechenden Zeitpunkt <funclink>AnimationStop<funclink/> aufgerufen würde. Bei Kombinationsknoten wird der Kindknoten mit der kleineren Gewichtung entfernt.<col/><row/>
            <table/>


	[Anim_R]
	Description=
		[begin]
		Description=Beginn des Intervalls.

		[end]
		Description=Schluss des Intervalls. Wenn end größer als begin ist, so nimmt der Wert mit der Bewegung des Objekts in positiver X-Richtung zu, andernfalls nimmt er ab.


	[Anim_X]
	Description=Der Wert hängt von der Bewegung des Objekts in X-Richtung ab. Jeder Pixel den sich das Objekt in positiver X-Richtung bewegt erhöht den Wert etwas, und jeder Pixel in negative X-Richtung verringert ihn etwas. Wenn end erreicht wurde wird der Wert wieder auf begin zurückgesetzt, und wenn begin erreicht wurde wird er auf end gesetzt.
		[position]
		Description=Startwert. Sollte innerhalb des von begin und end aufgespannten Intervalls liegen.

		[begin]
		Description=Beginn des Intervalls.

		[end]
		Description=Schluss des Intervalls. Wenn end größer als begin ist, so nimmt der Wert mit der Bewegung des Objekts in positiver X-Richtung zu, andernfalls nimmt er ab.

		[length]
		Description=Anzahl Pixel die in X-Richtung zurückgelegt werden müssen um die Animation von begin bis nach end durchzuspielen.


	[Anim_XDir]
	Description=Der Wert ist proportional zur X-Geschwindigkeit des Objekts. Die Geschwindigkeiten 0 bis max_dir werden linear auf den Wertebereich von begin bis end abgebildet.
		[begin]
		Description=Beginn des Intervalls.

		[end]
		Description=Schluss des Intervalls. Wenn end größer als begin ist, so nimmt der Wert mit größerer XDir zu, sonst nimmt er ab.

		[max_dir]
		Description=Größter Wert der XDir der abgebildet soll. Noch größere Geschwindigkeiten führen zum gleichen Animationswert (end).


	[Anim_Y]
	Description=Der Wert hängt von der Bewegung des Objekts in Y-Richtung ab. Jeder Pixel den sich das Objekt in positiver Y-Richtung bewegt erhöht den Wert etwas, und jeder Pixel in negative Y-Richtung verringert ihn etwas. Wenn end erreicht wurde wird der Wert wieder auf begin zurückgesetzt, und wenn begin erreicht wurde wird er auf end gesetzt.
		[position]
		Description=Startwert. Sollte innerhalb des von begin und end aufgespannten Intervalls liegen.

		[begin]
		Description=Beginn des Intervalls.

		[end]
		Description=Schluss des Intervalls. Wenn end größer als begin ist, so nimmt der Wert mit Bewegung des Objekts in positiver Y-Richtung zu, andernfalls nimmt er ab.

		[length]
		Description=Anzahl Pixel die in Y-Richtung zurückgelegt werden müssen um die Animation von begin bis nach end durchzuspielen.


	[Anim_YDir]
	Description=Der Wert ist proportional zur Y-Geschwindigkeit des Objekts. Die Geschwindigkeiten 0 bis max_dir werden linear auf den Wertebereich von begin bis end abgebildet.
		[begin]
		Description=Beginn des Intervalls.

		[end]
		Description=Schluss des Intervalls. Wenn end größer als begin ist, so nimmt der Wert mit größerer XDir zu, sonst nimmt er ab.

		[max_dir]
		Description=Größter Wert der YDir der abgebildet soll. Noch größere Geschwindigkeiten führen zum gleichen Animationswert (end).


	[AppendCommand]
	Description=Fügt ein Kommando der Kommandoliste des aufrufenden Objekts am Ende hinzu. Das Objekt wird also das zuerst gegebene Kommando ausführen und sich danach automatisch dem mit AppendCommand hinzugefügten widmen.<br><br/> Für Kommando-Beschreibungen siehe <funclink>SetCommand<funclink/><br><br/> Bemerkung: Mit AppendCommand hinzugefügte Befehle werden nicht an gesteuerte Fahrzeuge weitergeleitet (siehe VehicleControl)
		[command]
		Description=Kommandoname (als String). Siehe untere Tabelle

		[target]
		Description=Zielobjekt für Aktion

		[x]
		Description=X-Zielkoordinate

		[y]
		Description=Y-Zielkoordinate

		[target2]
		Description=zweites Zielobjekt

		[delay]
		Description=Zeit (in Ticks/Frames), bis das Kommando abgebrochen wird

		[Data]
		Description=zusätzliche Daten zur Aktion

		[retries]
		Description=Anzahl der Wiederholungen (wenn das Kommando fehlschlägt), bis das Kommando abgebrochen wird.

		[base_mode]
		Description=Befehlsstapelmodus. Werte siehe <funclink>AddCommand<funclink/>.


	[ArcCos]
	Description=Berechnet den Arcuscosinus von value/radius, also Result=arccos(value/radius). Dies entspricht cos(Result)=value/radius. Die Funktion wird benötigt, um Seitenverhältnisse zu einem Winkel umzurechnen. Für die meisten Fälle ist <funclink>Angle<funclink/>() aber ausreichend und praktischer.
		[value]
		Description=Länge der Ankathete

		[radius]
		Description=Länge der Hypotenuse


	[ArcSin]
	Description=Berechnet den Arcussinus von value/radius, also Result=arcsin(value/radius). Dies entspricht Sin(Result)=value/radius. Die Funktion wird benötigt, um Seitenverhältnisse zu einem Winkel umzurechnen. Für die meisten Fälle ist <funclink>Angle<funclink/>() aber ausreichend und praktischer.
		[value]
		Description=Länge der Gegenkathete

		[radius]
		Description=Länge der Hypotenuse


	[AttachMesh]
	Description=Befestigt ein Mesh an einem anderen. Wenn für <code>mesh<code/> eine ID angegeben wird, so wird das Mesh der entsprechenden Definition verwendet. Wenn für <code>mesh<code/> ein Objekt angegeben wird, so wird dessen aktuelles Mesh verwendet, inklusive aller Animationen oder weiterer angehängter Meshes. Dabei wird jedoch nur die Grafik angehangen, das Objekt selbst bleibt weiter an seiner gegenwärtigen Position. Der Rückgabewert ist eine Nummer mit Hilfe derer das Mesh mit <funclink>DetachMesh<funclink/> wieder gelöst werden kann.
		[mesh]
		Description=ID oder Objekt des Meshes das angehängt werden soll.

		[parent_bone]
		Description=Bone am Mesh des aufrufenden Objekts an dem das anzuhängende Mesh befestigt werden soll.

		[child_bone]
		Description=Bone am Mesh des anzuhängenden Objekts mit dem es befestigt werden soll.

		[transformation]
		Description=Transformation im Koordinatensystem des anzuhängenden Meshes, die auf selbiges angewandt wird. Das Array sollte 12 Integer-Einträge haben die eine 3x4-Matrix beschreiben wobei jeder Wert in Promille (1000 = 100%) angegeben ist. Die Matrizen können auch mit <funclink>Trans_Identity<funclink/>, <funclink>Trans_Translate<funclink/>, <funclink>Trans_Rotate<funclink/> und <funclink>Trans_Scale<funclink/> erzeugt und mit <funclink>Trans_Mul<funclink/> kombiniert werden.

		[flags]
		Description=Additional flags to specify the behavior of the attached mesh. Multiple values can be separated with <code>|<code/>. The following values are allowed:
            <table>
              <rowh>
                <col>Wert<col/>
                <col>Beschreibung<col/>
              <rowh/>
              <row>
                <literal_col>AM_DrawBefore<literal_col/>
                <col>Normalerweise wird das Mesh des Objekts selbst vor dem des angehängten Meshes gezeichnet. Wenn dieses Flag angegeben wird so wird jedoch das angehängte Mesh zuerst gezeichnet. Im Normalfall macht das keinen Unterschied da durch einen Z-Puffer sichergestellt wird, dass die Darstellung richtig ist. Wenn allerdings eines oder beide der Meshes Alpha Blending benutzen dann wird die Zeichenreihenfolge relevant da es sonst vorkommen kann dass ein Mesh hinter einem (teilweise) durchsichtigen Teil des anderen Meshes unsichtbar wird.<col/>
              <row/>
            <table/>


	[BlastObjects]
	Description=Fügt allen Objekten an angegebener Position Explosionsschaden zu. x und y sind immer globale Koordinaten. Wenn ein container angegeben ist, wird der Schaden nur den Objekten zugefügt, die in container enthalten sind. Explosionsschaden kann zur Entzündung führen oder auch Lebewesen wegschleudern.
		[x]
		Description=X-Koordinate

		[y]
		Description=Y-Koordinate

		[level]
		Description=Stärke

		[container]
		Description=Objekt, in dem die zu sprengenden Objekte enthalten sind.

		[caused_by]
		Description=Spielernummer des Spielers, der der Verursacher des Schaden ist. Wenn nicht angegeben, gilt bei lokalen Aufrufen der Schaden als vom Controller des aufrufenden Objekts verursacht.


	[BoundBy]
	Description=Gibt value zurück, wenn der Wert innerhalb der Grenzen liegt (value >= lower_bound und value <= upper_bound). Andernfalls wird die jeweils nächstliegende Grenze zurückgegeben.
		[value]
		Description=Zu vergleichende Zahl

		[lower_bound]
		Description=Untere Grenze

		[upper_bound]
		Description=Obere Grenze


	[Bubble]
	Description=Erzeugt eine Luftblase.
		[x]
		Description=X-Position der Luftblase. Offset bei lokalem Aufruf.

		[y]
		Description=Y-Position der Luftblase. Offset bei lokalem Aufruf.


	[Buy]
	Description=Kauft ein Objekt für for_player, und zieht pay_player Geld ab. Wenn dieser nicht genug Geld oder das Objekt nicht im Heimatbasismaterial hat, wird der Vorgang nicht ausgeführt.
		[buy_object]
		Description=ID des Objekttyps, der gekauft wird

		[for_player]
		Description=Nummer des Spielers, dem das Objekt hinterher gehört

		[pay_player]
		Description=Nummer des Spielers, der den Kauf bezahlt

		[to_base]
		Description=Zielobjekt, in das das neu gekaufte Objekt hineinversetzt wird. Dieser Parameter kann ausgelassen werden wenn das aufrufende Objekt eine Basis ist.

		[show_errors]
		Description=Wenn angegeben und ungleich <code>false<code/>, werden Fehlermeldugnen wie "Kaufen nicht möglich" aufgrund von Geldmangel angezeigt.


	[C4Id]
	Description=Wandelt einen String in eine ID um.
		[id_string]
		Description=Der String, der in eine id umgewandelt werden soll.


	[Call]
	Description=Calls the specified function. If given a string, the function is looked up in the context object (<code>this<code/>). For example, <code>obj->Call("Foo")<code/> is the same as <code>obj->Foo()<code/>. Using Call like this is primarily useful when the name of the function can vary. If "~" is prepended to the function name then the call does not fail if the function does not exist.
		[function]
		Description=Funktion, die aufgerufen werden soll.


	[CanConcatPictureWith]
	Description=Tested ob die Bilder zweier Objekte gleich sind und sie somit in Inhaltsanzeigen gestapelt werden können.
		[other]
		Description=Das Object mit dem verglichen werden soll.


	[CastObjects]
	Description=Verschleudert number Objekte an angegebener Position mit einer Geschwindigkeit von level. Bei einem lokalen Aufruf haben die erzeugten Objekte den selben Besitzer wie das aufrufende Objekt.
		[id]
		Description=ID des Objekttyps, der verschleudert wird

		[number]
		Description=Anzahl verschleuderter Objekte.

		[level]
		Description=Geschwindigkeit der verschleuderten Objekte

		[x]
		Description=X-Ausgangsposition. Offset zum aufrufenden Objekt bei lokalem Aufruf.

		[y]
		Description=Y-Ausgangsposition. Offset zum aufrufenden Objekt bei lokalem Aufruf.

		[angle]
		Description=Winkel in den die Objekte verschleudert werden.

		[angle_variance]
		Description=Maximale Abweichung von diesem Winkel. Wenn nicht angegeben werden Objekte in alle Richtungen verschleudert.


	[CastParticles]
	Description=Verschleudert amount Partikel vom angegebenen Typ. Die Zusatzparameter werden zufällig zwischen a0/b0 und a1/b1 gesetzt.
		[name]
		Description=Name des Partikeltyps

		[amount]
		Description=Anzahl der Partikel

		[level]
		Description=Geschwindigkeit, mit der verschleudert werden soll

		[x]
		Description=X-Position des Partikels. Relative Koordinaten bei lokalem Aufruf.

		[y]
		Description=Y-Position des Partikels. Relative Koordinaten bei lokalem Aufruf.

		[a0]
		Description=Untere Schranke für den ersten Zusatzparameter. Dies ist normalerweise die Größe des Partikels in 1/5-Pixeln.

		[a1]
		Description=Obere Schranke für den ersten Zusatzparameter

		[b0]
		Description=Untere Schranke für den zweiten Zusatzparameter. Dies ist normalerweise die Farbmodulation des Partikels.

		[b1]
		Description=Obere Schranke für den zweiten Zusatzparameter

		[obj]
		Description=Zielobjekt für objektlokale Partikel. Objektlokale Partikel werden direkt über den jeweiligen Objekten gezeichnet, und beim Entfernen des Objekts gelöscht.


	[CastPXS]
	Description=Verschleudert namentlich angegebene Materialpixel an angegebener Position. Bei einem lokalen Aufruf gelten die Koordinaten als Offset zum aufrufenden Objekt.
		[material_name]
		Description=Materialname

		[amount]
		Description=Menge

		[level]
		Description=Stärke

		[x]
		Description=X-Koordinate

		[y]
		Description=Y-Koordinate

		[angle]
		Description=Winkel in den die Materialpixel verschleudert werden.

		[angle_variance]
		Description=Maximale Abweichung von diesem Winkel. Wenn nicht angegeben werden Materialpixel in alle Richtungen verschleudert.


	[ChangeDef]
	Description=Weist einem Objekt eine neue Definition zu.
		[new_def]
		Description=ID der neuen Definition für das Objekt


	[CheckConstructionSite]
	Description=
		[object_id]
		Description=Typ des zu prüfenden Objekts

		[xoffset]
		Description=X-Koordinate

		[yoffset]
		Description=Y-Koordinate


	[CheckEffect]
	Description=Führt Fx*Effect (und ggf. auch Fx*Add)-Callbacks in der entsprechenden Effektliste aus, ohne einen Effekt selber zu erstellen. Rückgabewert ist -1, wenn ein anderer Effekt den Effekt abgelehnt hat, und die Effektnummer des aufnehmenden Effektes, wenn der Effekt aufgenommen wurde.
		[name]
		Description=Name des Effektes ohne vorangestelltes Fx.

		[target]
		Description=Zielobjekt, dessen Effekte benachrichtigt werden. Bei <code>nil<code/> wird die globale Effektliste benachrichtigt.

		[priority]
		Description=Priorität für den Effekt. Es werden Fx*Effect-Callbacks bei allen Effekten mit gleicher und höherer Priorität durchgeführt. Wenn nicht angegeben oder bei 0 werden daher alle Effekte benachrichtigt.

		[timer]
		Description=Intervall, in dem Timer-Aufrufe getätigt werden. Bei <code>nil<code/> werden keine Timer-Aufrufe durchgeführt, und der Effekt bleibt permanent bis er durch anderwertige Aufrufe entfernt wird.

		[var1]
		Description=Erster Zusatzparameter, der an Effect-Callbacks übergeben wird

		[var2]
		Description=Zweiter Zusatzparameter, der an Fx*Effect-Callbacks übergeben wird

		[var3]
		Description=Dritter Zusatzparameter, der an Fx*Effect-Callbacks übergeben wird

		[var4]
		Description=Vierter Zusatzparameter, der an Fx*Effect-Callbacks übergeben wird


	[CheckVisibility]
	Description=Prüft ob dieses Objekt für den angegebenen Spieler sichtbar ist.
		[player]
		Description=Spieler für den die Sichtbarkeit abgefragt wird.


	[ClearMenuItems]
	Description=Entfernt alle Einträge aus einem Menü.

	[ClearParticles]
	Description=Entfernt alle Partikel eines angegebenen Typs.
		[name]
		Description=Name der Partikeldefinition, dessen Instanzen gelöscht werden sollen. Wenn nicht angegeben werden alle Partikel entfernt.

		[obj]
		Description=Wenn angegeben, werden nur Partikel entfernt die lokal zum Objekt sind.


	[ClearScheduleCall]
	Description=Bricht durch <funclink>ScheduleCall<funclink/> erzeugte verzögerte Funktionsaufrufe ab. Alle momentan wartenden Funktionsaufrufe an die angegebene Funktion und das angegebene Objekt werden abgebrochen.
		[obj]
		Description=Objekt, für das verzögerte Funktionsaufrufe abgebrochen werden sollen. <code>nil<code/> für verzögerte Funktionsaufrufe ohne Objektkontext

		[function]
		Description=Name der Funktion, die durch die abzubrechenden Aufrufe aufgerufen würde.


	[CloseMenu]
	Description=Schließt das Menü des aufrufenden Objekts.

	[Collect]
	Description=Sammelt ein Objekt auf. Der Befehl führt dieselben Funktionen aus, als wäre das Objekt durch den normalen Collection-Bereich des Objekts eingesammelt worden (z.B. RejectCollect, Prüfung auf Flagge/Flagge abnehmbar, Hit-Aufruf bei OCF_HitSpeed2, usw.). Die einzigen Unterschiede sind, dass keine Prüfung der Position von item auf den Entrance-Bereich von target/this() gemacht wird, und dass item nicht auf OCF_Carryable geprüft wird.<br><br/>Mit diesem Befehl lässt sich beispielsweise das Aufnehmen von Objekten aus Containern heraus realisieren. Wenn die Aufnahme fehlschlug (Beispielsweise durch den RejectCollect-Aufruf oder weil der Container voll war), gibt die Funktion <code>false<code/> zurück. Ansonsten <code>true<code/>.
		[item]
		Description=Objekt, das aufgesammelt werden soll


	[ComponentAll]
	Description=Prüft, ob das aufrufende Objekt nur aus Objekten vom Typ id besteht.
		[components]
		Description=ID der erwarteten Components.


	[ComposeContents]
	Description=Erzeugt ein Objekt vom Typ id als Inhalt des aufrufenden Objekts. Das Objekt wird aus seinen Komponenten zusammen gesetzt, die im aufrufenden Objekt enthalten sein müssen. Andernfalls wird eine Meldung ausgegeben, welche Objekte noch benötigt werden. Auch ComposeContents produziert den Engine Objekt-Call BuildNeedsMaterial, durch den die Meldung über noch benötigtes Material ausgewertet und abgefangen werden kann.
		[object_id]
		Description=Typ des zu erstellenden Objekts


	[Construction]
	Description=Wird bei der Erzeugung eines Objekts aufgerufen.
		[creator]
		Description=Objekt welches das neu erstellte Objekt erzeugt hat. <code>nil<code/> wenn es global (Szenarioscript,...) erstellt wurde.


	[Contained]
	Description=Liefert das Objekt, in dem sich das aufrufende Objekt befindet, oder <code>nil<code/>, wenn es in keinem anderen Objekt enthalten ist.

	[Contents]
	Description=Liefert das indizierte Objekt, das im aufrufenden Objekt enthalten ist.
		[index]
		Description=Index des Objekts in obj, Zählung beginnt mit 0


	[ContentsCount]
	Description=Liefert die Anzahl der Objekte vom Typ id, die im aufrufenden Objekt enthalten sind.
		[object_id]
		Description=Objekttyp, der gezählt wird


	[Cos]
	Description=Liefert cos(angle) * radius.
		[angle]
		Description=Winkel in Grad

		[radius]
		Description=Radius

		[precision]
		Description=Der angegebene Winkel wird, wenn angegeben, vor der Berechnung durch diesen Wert dividiert. Bei einem Winkel von 455 und einer Präzision von 10 würde intern also mit einem Winkel von 45,5° gerechnet werden.


	[CreateArray]
	Description=Erzeugt ein neues, mit Nullen gefülltes Feld.
		[length]
		Description=Länge des neuen Felds


	[CreateConstruction]
	Description=Sollte statt <funclink>CreateObject<funclink/> benutzt werden, wenn ein Gebäude oder eine Baustelle erzeugt werden soll. Bei lokalen Aufrufen dieser Funktion wird die angegebene Position zu Offset-Koordinaten zum aufrufenden Objekt. Wenn check_site 1 ist, wird die Baustelle vorher auf ihre Eignung überprüft. Ist die Position ungeeignet (z.B. durch unebenen Untergrund oder andere Gebäude), wird beim aufrufenden Objekt eine entsprechende Meldung ausgegeben und die Funktion gibt <code>nil<code/> zurück.
		[object_id]
		Description=Typ des zu erstellenden Objekts

		[xoffset]
		Description=X-Koordinate

		[yoffset]
		Description=Y-Koordinate

		[owner]
		Description=Besitzer des neuen Objektes (valide Spielernummer oder <funclink>NO_OWNER<funclink/> für kein Besitzer)

		[completion]
		Description=Gibt die Fertigstellung des Objekts in Prozent an (muss mindestens 1 sein)

		[adjust_terrain]
		Description=Bestimmt, ob die Landschaft an die Baustelle angepasst werden soll (inkl. Fundament).

		[check_site]
		Description=Überprüft die Baustelle vorher auf ihre Eignung


	[CreateContents]
	Description=Erzeugt ein Objekt vom Typ id als Inhalt des aufrufenden Objekts.
		[id]
		Description=Typ des zu erstellenden Objekts

		[count]
		Description=Anzahl zu erstellender Objekte. Wenn nicht angegeben, wird 1 angenommen.


	[CreateMenu]
	Description=Erzeugt ein benutzerdefiniertes Menü im aufrufenden Objekt. Menüeinträge müssen mit <funclink>AddMenuItem<funclink/> hinzugefügt werden.
		[symbol]
		Description=Objektdefinition, deren Bild als Symbol verwendet wird

		[command_object]
		Description=Erhält das Menükommando (siehe <funclink>AddMenuItem<funclink/>); kann bei lokalen Aufrufen <code>nil<code/> sein.

		[extra]
		Description=Additional information to be displayed about the currently selected entry. C4MN_ values are now also defined as constants: 
            <table>
              <rowh>
                <col>Konstante<col/>
                <col>Wert<col/>
                <col>Effekt<col/>
              <rowh/>
              <row>
                <col>C4MN_Extra_None<col/>
                <col>0<col/>
                <col>Nichts<col/>
              <row/>
              <row>
                <col>C4MN_Extra_Components<col/>
                <col>1<col/>
                <col>Komponenten<col/>
              <row/>
              <row>
                <col>C4MN_Extra_Value<col/>
                <col>2<col/>
                <col>Wert<col/>
              <row/>
              <row>
                <col>C4MN_Extra_MagicValue<col/>
                <col>3<col/>
                <col>Wert als Magiewert. Dabei wird außerdem extra_data als Vergleichswert angezeigt, z.B. "50/100".<col/>
              <row/>
              <row>
                <col>C4MN_Extra_Info<col/>
                <col>4<col/>
                <col>Beschreibungstext sofort anzeigen<col/>
              <row/>
              <row>
                <col>C4MN_Extra_ComponentsMagic<col/>
                <col>5<col/>
                <col>Komponenten und Magiewert<col/>
                <col><col/>
              <row/>
            <table/>

		[caption]
		Description=Bestimmt den angezeigten Menütext, wenn das Menü keine Einträge enthält

		[extra_data]
		Description=Vergleichswert für extra 3

		[style]
		Description=Appearance of the menu. The following constants are defined: 
            <table>
              <rowh>
                <col>Konstante<col/>
                <col>Wert<col/>
                <col>Aussehen<col/>
              <rowh/>
              <row>
                <col>C4MN_Style_Normal<col/>
                <col>0<col/>
                <col>Normal<col/>
              <row/>
              <row>
                <col>C4MN_Style_Context<col/>
                <col>1<col/>
                <col>Kontextmenü<col/>
              <row/>
              <row>
                <col>C4MN_Style_Info<col/>
                <col>2<col/>
                <col>Infomenü<col/>
              <row/>
              <row>
                <col>C4MN_Style_Dialog<col/>
                <col>3<col/>
                <col>Dialog<col/>
              <row/>
              <row>
                <col>C4MN_Style_EqualItemHeight<col/>
                <col>128<col/>
                <col>Kann mit C4MN_Style_Dialog kombiniert werden: Alle Einträge mit Icon im Dialogmenü bekommen die gleiche Höhe.<col/>
              <row/>
            <table/>

		[permanent]
		Description=Das Menü bleibt geöffnet, wenn eine Auswahl getroffen wird.

		[menu_id]
		Description=Wenn angegeben, wird diese ID als Menü-ID gesetzt. Die aktuelle Menü-ID wird zum Beispiel von <funclink>GetMenu<funclink/> zurückgegeben.


	[CreateObject]
	Description=Erzeugt ein Objekt des angegebenen Typs an der angegebenen Position. xoffset und yoffset bestimmen die Position in absoluten Pixel-Koordinaten der Landschaft (Mitte Unterkante des Objekts). Bei lokalen Aufrufen dieser Funktion wird die angegebene Position zu Offset-Koordinaten zum aufrufenden Objekt.
		[id]
		Description=Typ des zu erstellenden Objekts

		[xoffset]
		Description=X-Koordinate

		[yoffset]
		Description=Y-Koordinate

		[owner]
		Description=Besitzer des zu erstellenden Objekts. Entweder der Index eines Spielers oder <code><funclink>NO_OWNER<funclink/><code/> für keinen Besitzer. Wenn nicht angegeben wird der Besitzer des neuen Objektes auf den Controller des aufrufenden Objektes gesetzt bzw. <code>NO_OWNER<code/> wenn CreateObject ohne Objektkontext aufgerufen wird.


	[CreateParticle]
	Description=Erzeugt ein Partikel. Das Partikel muss unter dem angegebenen Namen geladen sein. Für weitere Informationen siehe Partikeldokumentation.
		[szName]
		Description=Name des Partikels

		[x]
		Description=X-Position des Partikels. Relative Koordinaten bei lokalem Aufruf.

		[y]
		Description=Y-Position des Partikels. Relative Koordinaten bei lokalem Aufruf.

		[xdir]
		Description=Horizontale Anfangsgeschwindigkeit des Partikels

		[ydir]
		Description=Vertikale Anfangsgeschwindigkeit des Partikels

		[a]
		Description=Zusatzparameter. Dies ist normalerweise die Größe des Partikels in 1/5-Pixeln.

		[b]
		Description=Zweiter Zusatzparameter. Dies ist normalerweise die Farbmodulation des Partikels.

		[target]
		Description=Zielobjekt für objektlokale Partikel. Objektlokale Partikel werden direkt über den jeweiligen Objekten gezeichnet, und beim Entfernen des Objekts gelöscht.

		[behind_target]
		Description=Wenn angegeben und nicht <code>false<code/>, wird der Partikel hinter dem Zielobjekt gezeichnet.


	[CreateParticleAtBone]
	Description=Erzeugt ein Partikel. Das Partikel muss unter dem angegebenen Namen geladen sein. Für weitere Informationen siehe Partikeldokumentation.
		[szName]
		Description=Name des Partikels

		[szBoneName]
		Description=Geschwindigkeit, mit der verschleudert werden soll

		[pos]
		Description=

		[dir]
		Description=

		[a]
		Description=Zusatzparameter. Dies ist normalerweise die Größe des Partikels in 1/5-Pixeln.

		[b]
		Description=Zweiter Zusatzparameter. Dies ist normalerweise die Farbmodulation des Partikels.

		[target]
		Description=Zielobjekt für objektlokale Partikel. Objektlokale Partikel werden direkt über den jeweiligen Objekten gezeichnet, und beim Entfernen des Objekts gelöscht.

		[behind_target]
		Description=Wenn angegeben und nicht <code>false<code/>, wird der Partikel hinter dem Zielobjekt gezeichnet.


	[CreateScriptPlayer]
	Description=Initiiert den Beitritt eines Scriptspielers. Scriptspieler berhalten sich von der Scriptseite wie reguläre Spieler. Sie haben eine Stammcrew, ein Konto, Baupläne, Heimatbasismaterial, Verfeindungen, Teams, etc. Für diese Spieler wird jedoch regulär kein Sichtfenster geöffnet und sie lassen sich nicht von menschlichen Spielern steuern.<br><br/>Scriptspieler können zum Beispiel verwendet werden, um KI-Gegner wie z.B. Bots in Hazard zu realisieren.
		[name]
		Description=Name für den Scriptspieler. Muss angegeben werden.

		[color]
		Description=Spielerfarbe

		[team]
		Description=Team-ID. Wird 0 angegeben, so wird ein Team nach denselben Regeln ausgewählt wie bei einem normal beitretenden Spieler.

		[flags]
		Description=Bit mask composed of the following values: 
            <table>
              <rowh>
                <col>Bit<col/>
                <col>Konstante<col/>
                <col>Beschreibung<col/>
              <rowh/>
              <row>
                <col>0<col/>
                <col>CSPF_FixedAttributes<col/>
                <col>Wenn gesetzt, tritt der Spieler garantiert mit den in den Parameter angegebenen Namen und Farbe bei. Ansonsten werden die Attribute bei Kollisionen geändert.<col/>
              <row/>
              <row>
                <col>1<col/>
                <col>CSPF_NoScenarioInit<col/>
                <col>Wenn wahr, wird die Szenarieninitialisierung, also das Erzeugen von Heimatbasismaterial und Clonks, das Setzen der Baupläne nach Szenarienvorgaben, etc., nicht durchgeführt. Außerdem werden die globalen PreInitializePlayer- und InitializePlayer-Callbacks ans Szenarienscript und die Spielziel-, Regel- und Umweltobjekte nicht ausgeführt. Stattdessen wird ein InitializeScriptPlayer(Spielernummer, Team)-Callback als DefinitionCall (d.h. ohne <placeholder-1><placeholder-1/>-Objekt) auf der in extra_data angegebenen Definition ausgeführt. Mit diesem Parameter lassen sich also spezialisierte Scriptspieler realisieren, die nicht gleichberechtigt mit menschlichen Spielern agieren.<col/>
              <row/>
              <row>
                <col>2<col/>
                <col>CSPF_NoEliminationCheck<col/>
                <col>Wenn gesetzt, wird der Spieler nicht automatisch eliminiert, wenn er keine Crew mehr hat.<col/>
              <row/>
              <row>
                <col>3<col/>
                <col>CSPF_Invisible<col/>
                <col>Wenn gesetzt, ist der Spieler nicht in Spielerlisten wie zum Beispiel in der Lobby und im Verfeindungsmenü sichtbar.<col/>
              <row/>
            <table/>

		[extra_data]
		Description=ID, die durchgereicht und an den InitializePlayer-Aufruf weitergegeben wird. Durch Angabe einer ID lassen sich Scriptspieler-Typen unterscheiden. Beispielsweise könnte ein Szenario dynamisch Alien- oder Clonkgegner anbieten.


	[CustomMessage]
	Description=Gibt eine Nachricht aus.
		[message]
		Description=Nachricht, die ausgegeben wird

		[obj]
		Description=Wenn ungleich <code>nil<code/>, wird die Nachricht über dem angegebenen Objekt ausgegeben.

		[plr]
		Description=Nummer des Spielers, bei dem die Nachricht ausgegeben wird. Default ist <code>NO_OWNER<code/>, welches die Nachricht für alle Spieler anzeigt.

		[offset_x]
		Description=x-Offset der Nachrichtenposition. Bei globalen Nachrichten ist dies die Viewportmitte. Bei Objektnachrichten ist dies relativ zur Standard-Nachrichtenposition über dem Objekt. Bei Portrait-Nachrichten (portrait!=0) ist das Offset relativ zur oberen, linken Viewportecke.

		[offset_y]
		Description=y-Offset der Nachrichtenposition.

		[color]
		Description=Farbe der Nachricht. Default ist 0xffffff (weiß).

		[deco]
		Description=ID der Objektdefinition, die für Dekoration der Nachricht verwendet wird. Wenn angegeben, wird die Nachricht von einem Rahmen umgeben. Nur gültig bei angegebenem Portrait.

		[portrait]
		Description=Definition oder Objekt dessen Grafik als Portrait benutzt werden soll.

		[flags]
		Description=Bit mask specifying additional options. Possible values: 
            <table>
              <rowh>
                <col>Bit<col/>
                <col>Konstante<col/>
                <col>Beschreibung<col/>
              <rowh/>
              <row>
                <col>0<col/>
                <col>MSG_NoBreak<col/>
                <col>Wenn gesetzt, werden keine automatischen Zeilenumbruch bei langen Nachrichten eingefügt.<col/>
              <row/>
              <row>
                <col>1<col/>
                <col>MSG_Bottom<col/>
                <col>Nur globale Nachrichten. Für Portraitnachrichten mit Dekorationsrahmen: Das Nachrichtenoffset gibt die Verschiebung zur unteren Bildschirmkante anstatt zur oberen Bildschirmkante an. Für nicht-Portraitnachrichten setzt das Flag die Nachricht etwas tiefer.<col/>
              <row/>
              <row>
                <col>2<col/>
                <col>MSG_Multiple<col/>
                <col>Wenn gesetzt, werden vorherige Nachrichten des gleichen Typs nicht gelöscht.<col/>
              <row/>
            <table/>


	[DeathAnnounce]
	Description=Gibt eine Botschaft a la "[name] ist von uns gegangen" über dem aufrufenden Objekt aus.

	[Definition]
	Description=Wird nach dem Laden der Definitionen aufgerufen. Sollte nur die aktuelle Definiton Ã¤ndern.
		[def]
		Description=Definition, die initialisiert wird.


	[DetachMesh]
	Description=Wurde zuvor mit <funclink>AttachMesh<funclink/> ein Mesh an einem anderen befestigt, so kann es mit dieser Funktion wieder gelöst werden.
		[attach_number]
		Description=Nummer des zu entfernenden angehängten Meshes. Der Rückgabewert von <funclink>AttachMesh<funclink/> bildet solch eine Nummer.


	[DigFree]
	Description=
		[x]
		Description=X-Koordinate

		[y]
		Description=Y-Koordinate

		[radius]
		Description=Radius

		[no_dig2objects]
		Description=


	[DigFreeRect]
	Description=
		[x]
		Description=X-Koordinate

		[y]
		Description=Y-Koordinate

		[width]
		Description=Breite

		[height]
		Description=Höhe

		[no_dig2objects]
		Description=


	[Distance]
	Description=Berechnet den Abstand zwischen zwei Punkten. Die Funktion entspricht Sqrt((x2-x1)^2 + (y2-y1)^2;).
		[x1]
		Description=X-Position des ersten Punktes

		[y1]
		Description=Y-Position des ersten Punktes

		[x2]
		Description=X-Position des zweiten Punktes

		[y2]
		Description=Y-Position des zweiten Punktes


	[DoBreath]
	Description=Verändert den Atemwert eines Objekts.
		[change]
		Description=Verändert den Atemwert eines Objekts in Frames.


	[DoCon]
	Description=Verändert die Fertigstellung des aufrufenden Objekts. Die meisten Lebewesen und Bäume können dadurch vergrößert oder verkleinert werden. Gebäude können zu Baustellen zurückgesetzt und Baustellen vorwärts oder rückwärts gebaut werden.<br><br/> Sinkt die Fertigstellung eines Objekts auf oder unter 0, wird dieses gelöscht.
		[change]
		Description=Veränderung der Fertigstellung in Prozentpunkten; positiv oder negativ.


	[DoCrewExp]
	Description=Gibt dem aufrufenden Clonk Erfahrungspunkte.
		[change]
		Description=Veränderung des Erfahrungswertes


	[DoDamage]
	Description=Verändert den Schadenswert des aufrufenden Objekts. Bei change ungleich Null wird im Zielobjekt außerdem die Funktion Damage aufgerufen.
		[change]
		Description=Veränderung des Schadenswertes; positiv oder negativ

		[damage_type]
		Description=Schadensursache, die an Fx*Damage-Callbacks von Effekten übergeben wird (siehe <emlink>Effekte-Dokumentation<emlink/>). Standard ist FX_Call_DmgScript.

		[caused_by]
		Description=Spielernummer des Spielers, der den Schaden verursacht hat.


	[DoEnergy]
	Description=Verändert die Energie des aufrufenden Objekts. Die Energie entspricht bei Lebewesen der Lebensenergie.
		[change]
		Description=Veränderung des Energiewertes; positiv oder negativ in Prozent zum Maximalwert. 100% entsprechen hierbei dem maximalen Physical-Wert von 100000.

		[exact]
		Description=Wenn <code>true<code/>, wird change auf den exakten Energiewert angewendet (0 bis Wert von Physical "Energy").

		[damage_type]
		Description=Schadensursache, die an Fx*Damage-Callbacks von Effekten übergeben wird (siehe <emlink>Effekte-Dokumentation<emlink/>). Standard ist FX_Call_EngScript.

		[caused_by]
		Description=Spielernummer des Spielers, der den Schaden verursacht hat.


	[DoHomebaseMaterial]
	Description=Verändert die Kaufbarkeit von Objekten in der Heimatbasis.
		[player]
		Description=Spielernummer des Spielers, dessen Heimatbasismaterial verändert werden soll

		[definition]
		Description=ID des Objekttyps, der mehr oder weniger oft kaufbar sein soll

		[change]
		Description=Positive oder negative Veränderung der kaufbaren Objektmenge


	[DoHomebaseProduction]
	Description=Verändert die Nachlieferung von kaufbaren Objekten in der Heimatbasis.
		[player]
		Description=Spielernummer des Spielers, dessen Heimatbasismaterial-Nachlieferung verändert werden soll

		[type]
		Description=ID des Objekttyps, der schneller oder langsamer nachgeliefert werden soll.

		[change]
		Description=Positive oder negative Veränderung der nachgelieferten Objektmenge


	[DoPlayerScore]
	Description=Verändert den Punktewert eines Spielers.
		[player]
		Description=Spielernummer des Spielers, dessen Punktewert verändert werden soll

		[change]
		Description=Positiv oder negativ: Die Veränderung des Punktewertes


	[DoRGBaValue]
	Description=Adds a specified color value to a 32 bit color value. 
      <table>
        <rowh>
          <literal_col>select<literal_col/>
          <col>Auswahl<col/>
        <rowh/>
        <row>
          <literal_col>0<literal_col/>
          <col>Alpha-Wert<col/>
        <row/>
        <row>
          <literal_col>1<literal_col/>
          <col>Rotanteil<col/>
        <row/>
        <row>
          <literal_col>2<literal_col/>
          <col>Grünanteil<col/>
        <row/>
        <row>
          <literal_col>3<literal_col/>
          <col>Blauanteil<col/>
        <row/>
      <table/>
		[Val]
		Description=32Bit-Farbwert

		[change]
		Description=Farbwert, der dazuaddiert werden soll.

		[select]
		Description=0-3: Farbwert, der geändert werden soll


	[DoScoreboardShow]
	Description=Ändert den Sichtbarkeitszähler für das Scoreboard. Der intern verwaltete Zähler beginnt bei 0. Ist er größer als 0, wird das Scoreboard gezeigt. Ist er kleiner als 0, wird es verborgen. Ist er gleich 0, wird das Scoreboard nur dann gezeigt, wenn der Spieler die entsprechende Taste (normalweise Tab) drückt.
		[change]
		Description=Änderung der Sichtbarkeit des Scoreboards.

		[for_player]
		Description=Wenn größer 0, Spielernummer+1 des Spielers, für den die Scoreboard-Sichtbarkeit geändert werden soll.


	[DoWealth]
	Description=Verändert das Vermögen eines Spielers.
		[player]
		Description=Spielernummer des Spielers, dessen Vermögen verändert werden soll

		[value]
		Description=Die Änderung des Vermögens.


	[DrawDefMap]
	Description=Zeichnet eine dynamische Zufallskarte über einen Bereich der alten Landschaft. Dazu wird die angegebene Karte in der Landscape.txt gesucht.
		[x]
		Description=Linke Kante des Rechtecks, in dem die Karte gezeichnet werden soll

		[y]
		Description=Obere Kante des Rechtecks, in dem die Karte gezeichnet werden soll

		[width]
		Description=Breite des Rechtecks, in dem die Karte gezeichnet werden soll

		[height]
		Description=Höhe des Rechtecks, in dem die Karte gezeichnet werden soll

		[map_name]
		Description=Name der zu benutzenden Karte aus der Landscape.txt


	[DrawMap]
	Description=Zeichnet eine dynamische Zufallskarte über einen Bereich der alten Landschaft. Dazu wird derselbe Generator benutzt, der auch die Karten der Landscape.txt zeichnet.
		[x]
		Description=Linke Kante des Rechtecks, in dem die Karte gezeichnet werden soll

		[y]
		Description=Obere Kante des Rechtecks, in dem die Karte gezeichnet werden soll

		[width]
		Description=Breite des Rechtecks, in dem die Karte gezeichnet werden soll

		[height]
		Description=Höhe des Rechtecks, in dem die Karte gezeichnet werden soll

		[map]
		Description=Definition der dynamischen Karte. Das umschließende map { ...} - Tag muss vorhanden sein.


	[DrawMaterialQuad]
	Description=Zeichnet ein viereckiges Polygon im angegebenen Material mit der angegebenen Textur.
		[szMaterialTexture]
		Description=Material-Textur-Tupel für das Material, das gezeichnet werden soll

		[x1]
		Description=X-Position des ersten Eckpunktes. Immer global.

		[y1]
		Description=Y-Position des ersten Eckpunktes. Immer global.

		[x2]
		Description=X-Position des zweiten Eckpunktes. Immer global.

		[y2]
		Description=Y-Position des zweiten Eckpunktes. Immer global.

		[x3]
		Description=X-Position des dritten Eckpunktes. Immer global.

		[y3]
		Description=Y-Position des dritten Eckpunktes. Immer global.

		[x4]
		Description=X-Position des vierten Eckpunktes. Immer global.

		[y4]
		Description=Y-Position des vierten Eckpunktes. Immer global.

		[sub]
		Description=Wenn <code>true<code/>, wird das Material unterirdisch gezeichnet.


	[DrawParticleLine]
	Description=Erzeugt ein Linie zwischen zwei Punkten aus Partikeln. Rückgabewert ist die Anzahl der erzeugten Partikel.
		[particle]
		Description=Name des Partikeltyps, von dem die Partikel zu erzeugen sind

		[x0]
		Description=X-Position des Startpunktes. Offset bei lokalem Aufruf.

		[y0]
		Description=Y-Position des Startpunktes. Offset bei lokalem Aufruf.

		[x1]
		Description=X-Position des Endpunktes. Offset bei lokalem Aufruf.

		[y1]
		Description=Y-Position des Endpunktes. Offset bei lokalem Aufruf.

		[prtdist]
		Description=Abstand zwischen zwei Partikeln. Dieser Abstand kann möglicherweise nicht genau eingehalten werden, da die Partikel immer gleichmäßig auf die Strecke verteilt werden.

		[a]
		Description=Zusatzparameter. Dies ist normalerweise die Größe des Partikels in 1/5-Pixeln.

		[b0]
		Description=Zweiter Zusatzparameter am Startpunkt. Dies ist normalerweise die Farbmodulation des Partikels.

		[b1]
		Description=Zweiter Zusatzparameter am Endpunkt. Dieser Parameter wird vom Start- zum Endpunkt linear interpoliert.

		[ydir]
		Description=Vertikale Anfangsgeschwindigkeit der Partikel


	[EditCursor]
	Description=Liefert im Entwicklermodus der Engine das Objekt, welches sich im gerade unter dem Mauscursor befindet (Modus: Objekte auswählen und verschieben).

	[EffectCall]
	Description=Führt einen Funktionsaufruf im angegebenen Effekt durch. Der Aufruf erhält den Befehlskontext des Effektes, und die ersten beiden Aufrufparameter sind immer Zielobjekt und Effekt. Die weiteren Parameter können frei gewählt werden.
		[target]
		Description=Zielobjekt des Effektes, auf dessen Variablenspeicher zugegriffen wird. <code>nil<code/> für globale Effekte.

		[effect]
		Description=Der Effekt.

		[command]
		Description=Aufzurufender Befehl. Es wird automatisch Fx[Effektname] vorangestellt; dies sollte nicht mit angegeben werden.


	[EliminatePlayer]
	Description=Eliminiert einen Spieler. Die Runde gilt für diesen Spieler als verloren.
		[player]
		Description=Spielernummer des zu eliminierenden Spielers


	[Enter]
	Description=Versetzt das aufrufende Objekt in ein anderes hinein. Bei diesem Vorgang wird weder RejectCollect, noch Collection oder ActivateEntrance im Zielobjekt aufgerufen. Dafür aber RejectEntrance und Entrance im Objekt, das hineinversetzt werden soll.
		[target]
		Description=Objekt, in das hineinversetzt wird


	[eval]
	Description=Führt einen als String übergebenen Script aus.
		[script]
		Description=Auszuführender Script


	[Exit]
	Description=Versetzt das aufrufende Objekt aus seinem Behälter heraus, und setzt optional seine Geschwindigkeit.
		[x]
		Description=Offset der X-Austrittsposition.

		[y]
		Description=Offset der Y-Austrittsposition.

		[iR]
		Description=Rotation des Austrittsobjekts in Grad.

		[xdir]
		Description=X-Geschwindigkeit des Austrittsobjekts. Es gilt der übergebene Wert ohne Genauigkeitsteilung (Precision 1).

		[ydir]
		Description=Y-Geschwindigkeit des Austrittsobjekts. Es gilt der übergebene Wert ohne Genauigkeitsteilung (Precision 1).

		[rdir]
		Description=Rotationsgeschwindigkeit des Austrittsobjekts.


	[Explode]
	Description=Lässt ein Objekt explodieren. Die Explosion beschädigt Landschaft und Objekte, und das Objekt wird mitsamt Inhalt vor der Explosion entfernt. Wenn sich das Objekt in einen anderen Objekt befindet, werden alle anderen Inhaltsobjekte und das enthaltende Objekt beschädigt. Als Verursacher des Schadens gilt der Besitzer des explodierenden Objekts.
		[level]
		Description=Explosionsstärke. Die Explosionsstärke bestimmt das Ausmaß des Explosionsschadens sowie die akustische Gestaltung. Bis Stärke 29 einschließlich wird Blast1 abgespielt, von Stärke 30 bis stärke 39 einschließlich Blast2, und bei Werten darüber Blast3.

		[effect]
		Description=Wenn angegeben, wird ein Objekt dieser Art und keine Partikel erzeugt. Es wird angenommen, dass das neu erstellte Objekt den Explosionseffekt übernimmt.

		[particle]
		Description=Name eines Partikels, der statt der normalen Explosionspartikel erzeugt wird.


	[Extinguish]
	Description=Löscht das Feuer eines brennenden Objekts.

	[ExtractLiquid]
	Description=Saugt ein Pixel Flüssigkeit an der angegebenen Position ab. Zurückgegeben wird die Materialnummer des abgesogenen Materials; bei Misserfolg -1.
		[x]
		Description=X-Position, an der Material extrahiert wird. Offset bei lokalem Aufruf.

		[y]
		Description=Y-Position, an der Material extrahiert wird. Offset bei lokalem Aufruf.


	[ExtractMaterialAmount]
	Description=Extrahiert eine bestimmte Menge des gleichen Materials an einer Stelle. Zurückgegeben wird die tatsächlich erfolgreich extrahierte Materialmenge.
		[x]
		Description=X-Position, an der Material extrahiert wird. Offset bei lokalem Aufruf.

		[y]
		Description=Y-Position, an der Material extrahiert wird. Offset bei lokalem Aufruf.

		[material_index]
		Description=Index des Materials, das extrahiert wird. Siehe dazu auch <funclink>Material<funclink/>.

		[amount]
		Description=Maximale Menge, die extrahiert wird


	[FatalError]
	Description=Gibt die angegebene Fehlermeldung und den Aufrufstack aus und bricht dann die ausführung der aktuellen Funktion ab. FatalError kann benutzt werden, um effektiv zu debuggen oder einen Fehler bei falschen Parametern auszugeben.
		[message]
		Description=Fehlermeldung, die ausgegeben wird


	[Find_Action]
	Description=Suchkriterium: sucht alle Objekte mit der entsprechenden Aktion.
		[action]
		Description=Aktion nach der gesucht werden soll


	[Find_ActionTarget]
	Description=Suchkriterium: findet alle Objekte mit dem entsprechenden ersten Aktionsziel.
		[action_target]
		Description=Aktionsziel von Objekten, nach denen gesucht werden soll


	[Find_ActionTarget2]
	Description=Suchkriterium: findet alle Objekte mit dem entsprechenden zweiten Aktionsziel.
		[action_target]
		Description=Aktionsziel von Objekten, nach denen gesucht werden soll


	[Find_ActionTargets]
	Description=Suchkriterium: findet alle Objekte mit den angegebenen Aktionszielen.
		[action_target1]
		Description=Erstes Aktionsziel von Objekten, nach denen gesucht werden soll

		[action_target2]
		Description=Zweites Aktionsziel von Objekten, nach denen gesucht werden soll


	[Find_Allied]
	Description=Suchkriterium: sucht alle Objekte die Spielern gehören, die mit dem angegebenen Spieler verbündet sind.
		[player]
		Description=Spielernummer, dessen Verbündete Besitzer der zu suchenden Objekte sein müssen


	[Find_And]
	Description=Suchkriterium: sucht Objekte, auf die alle angegebenen Suchkriterien zutreffen.
		[Criteria]
		Description=Suchkriterium in Form einer Find_*-Funktion


	[Find_AnyContainer]
	Description=Suchkriterium: sucht alle Objekte die irgendwo enthalten sind.

	[Find_AtPoint]
	Description=Suchkriterium: sucht alle Objekte, deren Grafikbereich (Shape) den angegebenen Punkt überlappt.
		[x]
		Description=X-Position des Suchpunktes. Relativ zu Objektmitte bei lokalem Aufruf.

		[y]
		Description=Y-Position des Suchpunktes. Relativ zu Objektmitte bei lokalem Aufruf.


	[Find_Category]
	Description=Suchkriterium: sucht alle Objekte mit der entsprechenden Kategorie.
		[category]
		Description=Objektkategorie der zu suchenden Objekte


	[Find_Container]
	Description=Suchkriterium: sucht alle Objekte im angegebenen Behälter.
		[container]
		Description=Behälter der zu findenden Objekte


	[Find_Distance]
	Description=Suchkriterium: Sucht alle Objekte, die höchstens den angegebenen Radius vom Bezugspunkt entfernt sind. Wird kein Bezugspunkt angegeben, gilt der Mittelpunkt des aufrufenden Objektes.
		[radius]
		Description=Maximaler Abstand des Objektes.

		[x]
		Description=Bezugspunkt für den Abstand. Bei lokalem Aufruf Offset zum aufrufenden Objekt.

		[y]
		Description=Bezugspunkt für den Abstand. Bei lokalem Aufruf Offset zum aufrufenden Objekt.


	[Find_Exclude]
	Description=Suchkriterium: das angegebene Objekt wird von der Suche ausgeschlossen.
		[exclude]
		Description=Auszuschließendes Objekt. Aufrufendes Objekt wenn nicht angegeben oder <code>nil<code/>.


	[Find_Func]
	Description=Suchkriterium: sucht alle Objekte bei denen der Aufruf der angegebenen Funktion <code>true<code/> liefert. Wenn es eine lokale Funktion gibt, wird diese aufgerufen, sonst wenn vorhanden eine globale.
		[function]
		Description=Aufzurufende Funktion


	[Find_Hostile]
	Description=Suchkriterium: sucht alle Objekte die Spielern gehören, die mit dem angegebenen Spieler verfeindet sind.
		[player]
		Description=Spielernummer, dessen Feinde Besitzer der zu suchenden Objekte sein müssen


	[Find_ID]
	Description=Suchkriterium: sucht alle Objekte mit der angegeben ID.
		[definition]
		Description=ID der zu findenden Objekte


	[Find_InRect]
	Description=Suchkriterium: sucht alle Objekte im angegebenen Suchrechteck.
		[x]
		Description=X-Position der linken oberen Ecke des Suchbereiches. Bei lokalem Aufruf relativ zur Objektmitte.

		[y]
		Description=Y-Position der linken oberen Ecke des Suchbereiches. Bei lokalem Aufruf relativ zur Objektmitte.

		[width]
		Description=Breite des Suchbereiches

		[height]
		Description=Höhe des Suchbereiches


	[Find_NoContainer]
	Description=Suchkriterium: sucht alle Objekte die im Freien sind.

	[Find_Not]
	Description=Suchkriterium: findet genau alle Objekte, die nicht das angegebene Kriterium erfüllen.
		[Criteria]
		Description=Suchkriterium in Form einer Find_*-Funktion


	[Find_OCF]
	Description=Suchkriterium: Sucht alle Objekte, bei denen eine der angegebenen Object-Character-Flags gesetzt ist.
		[ocf]
		Description=Object-Character-Flag der zu suchenden Objekte


	[Find_OnLine]
	Description=Suchkriterium: findet alle Objekte, deren Grafikbereich (Shape) die angegebene Linie überlappt.
		[x1]
		Description=X-Position des Suchpunktes. Relativ zu Objektmitte bei lokalem Aufruf.

		[y1]
		Description=Y-Position des Suchpunktes. Relativ zu Objektmitte bei lokalem Aufruf.

		[x2]
		Description=X-Position des Endpunktes. Relativ zu Objektmitte bei lokalem Aufruf.

		[y2]
		Description=Y-Position des Endpunktes. Relativ zu Objektmitte bei lokalem Aufruf.


	[Find_Or]
	Description=Suchkriterium: sucht alle Objekte, auf die mindestens eines der angegebenen Suchkriterien zutrifft.
		[Criteria]
		Description=Suchkriterium in Form einer Find_*-Funktion


	[Find_Owner]
	Description=Suchkriterium: sucht alle Objekte die dem angegebenen Spieler gehören.
		[player]
		Description=Spielernummer, der Besitzer der zu suchenden Objekte sein soll


	[FindBase]
	Description=Sucht eine Heimatbasis eines Spielers. Die Heimatbasis ist zumeist das Gebäude, auf dem eine Flagge weht.
		[player]
		Description=Spielernummer des Spielers, dessen Basis gesucht wird

		[index]
		Description=Suchindex, mit dem mehrere Basen eines Spielers gefunden werden können. index=0 sucht die erste Basis.


	[FindConstructionSite]
	Description=Sucht einen Bauplatz für ein Gebäude, ausgehend von der angegebenen Position. Wenn ein Bauplatz gefunden wird, wird die Position als das Array [x,y] zurückgegeben. Ansonsten ist der Rückgabewert <code>nil<code/>.
		[definition]
		Description=ID des gewünschten Gebäudetyps

		[x]
		Description=Gewünschte X-Position der Baustelle. Immer globale Koordinaten.

		[y]
		Description=Gewünschte Y-Position der Baustelle. Immer globale Koordinaten.


	[FindContents]
	Description=Liefert das erste in einem Behälter enthaltene Objekt vom Typ type.
		[type]
		Description=Objekttyp, von dem das Inhaltsobjekt sein soll


	[FindObject]
	Description=Gibt ein Objekt zurück, das die angegebenen Suchkriterien erfüllt. Die Suchkriterien werden mittels speziellen Kriteriums-Funktionen der Form "Find_*" angegeben.
		[Criteria]
		Description=Suchkriterium in Form einer Find_*-Funktion


	[FindObjects]
	Description=Erstellt eine Liste von Objekten, auf die alle angegeben Suchkriterien zutreffen. Die Suchkriterien werden mittels speziellen Kriteriums-Funktionen der Form "Find_*" angegeben.
		[Criteria]
		Description=Suchkriterium in Form einer Find_*-Funktion


	[FindOtherContents]
	Description=Liefert das erste Inhaltsobjekt eines Behälters, das nicht vom angegebenen Typ ist.
		[type]
		Description=ID des zu ignorierenden Objekttyps


	[FinishCommand]
	Description=Beendet ein Kommado in der Kommandoliste eines Objekts.
		[success]
		Description=Ob das Kommando als erfolgreich gewertet werden soll.

		[command_num]
		Description=Index des Kommandos. 0 für das aktuelle, 1 für das als nächstes auszuführende usw.


	[Fling]
	Description=Verschleudert das aufrufende Objekt in die angegebene Richtung. Diese Funktion ist für Lebewesen konzipiert, da sie die entsprechenden Aktivitäten setzt.
		[xdir]
		Description=X-Schleudergeschwindigkeit

		[ydir]
		Description=Y-Schleudergeschwindigkeit


	[Format]
	Description=Composes a string of several values. To do this, text is scanned for placeholders starting with '%' which are then replaced by the parameters.<br><br/>The general syntax for these placeholders is:<br><br/><code>%[length][.precision]type<code/>Except for type all fields are optional. Type specifies the data type of the parameter to be expected. It can be one of the following values: 
      <table>
        <rowh>
          <col>Typ<col/>
          <col>Bedeutung<col/>
        <rowh/>
        <row>
          <col>d<col/>
          <col>Ganzzahl (int)<col/>
        <row/>
        <row>
          <col>x<col/>
          <col>Ganzzahl (int), hexadezimale Ausgabe (0123456789abcdef)<col/>
        <row/>
        <row>
          <col>X<col/>
          <col>Ganzzahl (int), hexadezimale Ausgabe (0123456789ABCDEF)<col/>
        <row/>
        <row>
          <col>i<col/>
          <col>id (Bei IDs funktionieren die restlichen Parameter wie Länge und Präzision nicht!)<col/>
        <row/>
        <row>
          <col>s<col/>
          <col>Zeichenkette<col/>
        <row/>
        <row>
          <col>v<col/>
          <col>Beliebig. Vor allem nützlich zur Fehlersuche.<col/>
        <row/>
      <table/>
 Length specifies the minimum number of characters used to display the value. If the value is shorter, the display is padded on the left with space characters, or with zeroes if there is a '0' before the length specification.<br><br/><br><br/>The meaning of the precision field varies with the data type: for integers (d) it specifies the minimum display length (the number is padded with zeroes at the beginning); however for strings (s) it specifies the maximum number of characters to be displayed.<br><br/>
		[text]
		Description=Zeichenkette, in die die Werte eingesetzt werden


	[FrameCounter]
	Description=Gibt die Nummer des Frames zurück, in dem sich das Spiel befindet. Dieser Zähler beginnt beim Szenarienstart mit 0, und zählt dann mit ca. 37 Frames pro Sekunde hoch (abhängig von der Spielgeschwindigkeit)

	[FreeRect]
	Description=Entfernt alle Materialien innerhalb des angegebenen Rechtecks. Die Koordinaten sind immer global, und der untere und rechte Rand des Rechtecks zählen nicht mit dazu.
		[x]
		Description=Linke Kante des Rechtecks

		[y]
		Description=Obere Kante des Rechtecks

		[width]
		Description=Breite des Rechtecks

		[height]
		Description=Höhe des Rechtecks

		[density]
		Description=Wenn angegeben, wird Material mit der entsprechenden Dichte entfernt


	[GainMissionAccess]
	Description=Fügt ein Passwort in die Liste der Missionszugänge ein. Alle Spieler auf dem selben Computer können dann ein Szenario starten, welches in der Scenario.txt dieses Passwort als Voraussetzung enthält. Sinnvollerweise sollte jedes Szenario in einer Reihe von Missionen bei erfolgreichem Beenden der Runde das für die jeweils nächste Mission benötigte Passwort freigeben.
		[password]
		Description=Passwort, das der Liste hinzugefügt wird.


	[GameCall]
	Description=Ruft function im Szenario-Script auf. Falls die Funktion nicht im Szenario-Script vorhanden ist, gibt die Funktion <code>nil<code/> zurück und verursacht keine Fehlermeldung.
		[function]
		Description=Name der Funktion im Szenario-Script


	[GameCallEx]
	Description=Macht einen Broadcast-Aufruf an das Szenarioscript, alle Spielziele, -regeln und Umweltobjekte. Dies ist das gleiche was die Engine macht wenn sie einen Szenario-Callback macht. Siehe <emlink>Szenario Script Callbacks<emlink/>.
		[function]
		Description=Name der Scriptfunktion


	[GameOver]
	Description=Beendet die Runde. Die Runde wird für alle überlebenden Spieler als gewonnen gewertet.

	[GBackLiquid]
	Description=Überprüft ob sich an angegebener Position in der Landschaft Flüssigkeit befindet.
		[x]
		Description=X-Koordinate, Offset bei lokalem Aufruf

		[y]
		Description=Y-Koordinate, Offset bei lokalem Aufruf


	[GBackSemiSolid]
	Description=Überprüft ob sich an angegebener Position in der Landschaft feste Materie oder Flüssigkeit befindet. Also alles außer Himmel und Tunnel.
		[x]
		Description=X-Koordinate, Offset bei lokalem Aufruf

		[y]
		Description=Y-Koordinate, Offset bei lokalem Aufruf


	[GBackSky]
	Description=Überprüft ob sich an angegebener Position in der Landschaft Himmel befindet.
		[x]
		Description=X-Koordinate, Offset bei lokalem Aufruf

		[y]
		Description=Y-Koordinate, Offset bei lokalem Aufruf


	[GBackSolid]
	Description=Überprüft ob sich an angegebener Position in der Landschaft feste Materie befindet. Also alles wo Objekte nicht durchkönnen.
		[x]
		Description=X-Koordinate, Offset bei lokalem Aufruf

		[y]
		Description=Y-Koordinate, Offset bei lokalem Aufruf


	[GetAction]
	Description=Liefert den Namen der momentanen Aktivität eines Objekts zurück, "Idle", wenn das Objekt keine Aktivität ausführt.

	[GetActionTarget]
	Description=Liefert die aktuellen Aktivitätszielobjekte des aufrufenden Objekts.
		[index]
		Description=0 für target oder 1 für target2


	[GetActMapVal]
	Description=Fragt Aktionsdaten aus der <emlink>ActMap<emlink/> anhand deren dortigem Namen ab.
		[entry]
		Description=Name des abzufragenden Eintrags

		[action]
		Description=Name der Aktion, von der der Eintrag abgefragt werden soll

		[definition]
		Description=Objektdefinition, von der die Aktionsdaten abgefragt werden sollen. Wenn nicht angegeben wird die Definition des aufrufenden Objekts angenommen.

		[entry_number]
		Description=Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.


	[GetActTime]
	Description=Liefert den Zeitraum in Frames, die das aufrufende Objekt bereits die aktuelle Aktivität ausgeführt hat.

	[GetAlive]
	Description=Gibt zurück, ob das aufrufende Objekt noch am Leben ist.

	[GetAnimationLength]
	Description=Gibt die Länge der Animation mit dem angegebenen Namen zurück, oder <code>nil<code/> wenn keine solche Animation existiert. Gültige Positionen (für <funclink>PlayAnimation<funclink/> und <funclink>SetAnimationPosition<funclink/>) liegen zwischen 0 und der Länge der Animation. Die zurückgegebene Zahl entspricht der Animationslänge (wie sie im Modellierungstool eingestellt wurde) in Millisekunden.
		[animation]
		Description=Name der Animation deren Länge abgefragt werden soll.


	[GetAnimationName]
	Description=Gibt den Namen der Animation mit der angegebenen Nummer zurück. Falls keine Animation mit der angegebenen Nummer existiert, oder falls es sich dabei um einen Kombinationsknoten handelt gibt die Funktion <code>nil<code/> zurück.
		[animation_number]
		Description=Animationsnummer der Animation deren Name abgefragt werden soll.


	[GetAnimationPosition]
	Description=Gibt die Stelle zurück an der die Animation mit der angegebenen Nummer gerade ist. Die Zahl liegt zwischen 0 und <funclink>GetAnimationLength<funclink/>(<funclink>GetAnimationName<funclink/>(animation_number)). Falls es keine Animation mit der angegebenen Nummer gibt oder es sich dabei um einen Kombinationsknoten handelt gibt die Funktion <code>nil<code/> zurück.
		[animation_number]
		Description=Animationsnummer der Animation deren Position abgefragt werden soll.


	[GetAnimationWeight]
	Description=Gibt die Gewichtung eines Kombinationsknotens zurück. Die Gewichtung bestimmt, zu welchem Anteil die beiden kombinierten Animationen in die Gesamtanimation einfließen. Die Zahl liegt immer zwischen 0 (erste Animation geht voll ein) und 1000 (zweite Animation geht voll ein). Gibt <code>nil<code/> zurück falls es keine Animation mit der angegebenen Nummer gibt, oder falls es sich dabei um einen Animationsknoten handelt.
		[animation_number]
		Description=Animationsnummer der Animation deren Gewichtung abgefragt werden soll.


	[GetBase]
	Description=Liefert die Nummer des Spielers, dessen Heimatbasis das aufrufende Objekt ist. Rückgabewert <funclink>NO_OWNER<funclink/> wenn es keine Heimatbasis ist.

	[GetBit]
	Description=Gibt den Wert des bit_number'nten Bits zurück.
		[old_value]
		Description=Alter Wert der Bitmaske

		[bit_number]
		Description=Das abzufragende Bit


	[GetBreath]
	Description=Gibt den momentanen Atemwert des Objektes zurück. Dies ist die Anzahl der Frames die ein Objekt noch seinen Atem halten kann.

	[GetCategory]
	Description=Fragt die Objektkategorie des aufrufenden Objekts oder der aufrufenden Definition ab. Die Objektkategorie wird normalerweise über die <emlink>DefCore<emlink/> gesetzt, und danach höchstens in seltenen Fällen mit <funclink>SetCategory<funclink/> geändert. Sie bestimmt das allgemeine Verhalten eines Objekts und dessen Platzierung. Eine mit GetCategory abgefragt Kategorie kann mit dem &-Operator gegen eine C4D_-Konstante geprüft werden.

	[GetChar]
	Description=Ermittelt den Zeichencode eines indizierten Zeichens einer Zeichenkette.
		[text]
		Description=Zeichenkette, von der ein Zeichen abgefragt wird

		[index]
		Description=Position des abgefragten Zeichens. 0 entspricht dabei dem ersten Zeichen. Ist dieser Wert größer oder gleich der Länge der Zeichenkette, wird <code>nil<code/> zurückgegeben.


	[GetClimate]
	Description=Liefert den aktuellen Klimawert. Dieser wird als Konstante zum durch TemperatureRange und Season entstehenden Wert hinzugezählt.

	[GetClrModulation]
	Description=Fragt die Farbmodulation des aufrufenden Objekts ab. Diese ist ein Farbwert, der multiplikativ (oder auch additiv, bei entsprechend aktiviertem BlitMode in der DefCore) aufgerechnet wird. Für weitere Hinweise siehe auch <funclink>SetClrModulation<funclink/>().
		[overlay_id]
		Description=Wenn angegeben, wird stattdessen die Farbmodulation dieses Grafikoverlays abgefragt. Das Overlay muss vorher mit <funclink>SetGraphics<funclink/> erstellt worden sein.


	[GetColor]
	Description=Fragt den RGB-Farbwert der Färbung der ColorByOwner-Flächen des aufrufenden Objekts ab. Diese werden beispielsweise durch <funclink>SetOwner<funclink/> oder <funclink>SetColor<funclink/> gesetzt.

	[GetComDir]
	Description=Liefert die aktuelle Befehlsrichtung des aufrufenden Objekts. Diese gibt die momentane, beabsichtigte Bewegungsrichtung an. Die Auswirkung dieser Richtung hängt von der <emlink>Prozedur<emlink/> der aktuellen <emlink>Aktivität<emlink/> ab.

	[GetCommand]
	Description=Gibt Informationen über ein Kommando des aufrufenden Objekts zurück. Führt das Objekt momentan keine Aktion aus, so wird (bei jedem Wert von element) <code>nil<code/> zurückgegeben.
		[element]
		Description=Information, die zurückgegeben werden soll. 0 oder kA: Name, 1: Target, 2: TargetX, 3: TargetY, 4: Target2, 5: Data

		[command_num]
		Description=Nummer des Kommandos. 0 steht für das momentan aktive, 1 für das danach auszuführende usw.


	[GetComponent]
	Description=Liefert Objektkomponenten.
		[component]
		Description=Objektkomponente, dessen Menge zurückgeliefert werden soll. Wenn 0, wird index benutzt und eine Objektkomponente zurückgegeben.

		[index]
		Description=Index der zurückzuliefernden Komponente. Dieser Parameter wird ignoriert, wenn component angegeben ist. Ansonsten wird eine ID der Komponente zurückgegeben, dessen Menge in einem darauffolgenden GetComponent-Aufruf ermittelt werden kann.

		[obj]
		Description=Objekt dessen Komponenten abgefragt werden sollen. <code>nil<code/> bei lokalem Aufruf. Wenn stattdessen eine definition angegeben ist, wird dieser Parameter ignoriert.

		[definition]
		Description=Definition, von der die Komponenten abgefragt werden sollen. Wenn <code>nil<code/>, wird stattdessen in obj bzw. dem aufrufenden Objekt abgefragt.


	[GetCon]
	Description=Liefert die Fertigstellung des aufrufenden Objekts in Prozent. Bei Baustellen ist dies die Fertigstellung, während es bei Tieren und Pflanzen die Größe angibt (Siehe StretchGrowth/OverSize in der <emlink>DefCore<emlink/>)

	[GetContact]
	Description=Ermittelt, in welche Richtungen einzelne oder alle Vertices des aufrufenden Objekts feste Landschaft berühren. Die Richtungen werden als Bitmaske von <emlink>CNAT-Werten<emlink/> übergeben bzw. von der Funktion zurückgegeben.
		[index]
		Description=Index des abzufragenden Vertex. -1 prüft alle Vertices, und gibt das Ergebnis als eine mit binärem Oder kombinierte Bitmaske zurück.

		[dwCNAT]
		Description=Bitmaske von CNAT-Werten, die angeben, welche Richtungen geprüft werden sollen. Wenn nicht angegeben werden alle Richtungen geprüft.


	[GetController]
	Description=Fragt ab, welcher Spieler das aufrufende Objekt zur Zeit kontrolliert bzw. zuletzt kontrolliert hat. Bei Mannschaftsmitgliedern ist dies normalerweise immer der Besitzer; bei Fahrzeugen der Controller des Clonks, der es zuletzt bedient (angefasst und geschoben/gezogen) hat. Objekte, die von Lebewesen aufgenommen werden, nehmen automatisch den Controller ihres Containers an. Beim Besitzerwechsel (siehe <funclink>SetOwner<funclink/>())wird automatisch auch der Controller auf den neuen Besitzer geändert.

	[GetCrew]
	Description=Gibt ein Mannschaftsmitglied eines Spielers zurück. Wird ein ungültiger Index angegeben, gibt die Funktion <code>nil<code/> zurück.
		[player]
		Description=Spielernummer des Spielers, dessen Mannschaftsmitglied zurückgegeben werden soll.

		[index]
		Description=Index des Clonks in der Crew


	[GetCrewCount]
	Description=Liefert die Anzahl der Mannschaftsmitglieder eines Spielers zurück.
		[player]
		Description=Spielernummer des Spielers, dessen Mannschaftsmitglieder gezählt werden sollen.


	[GetCrewEnabled]
	Description=Fragt ab, ob ein Mannschaftsmitglied gegenwärtig angewählt werden kann.

	[GetCrewExtraData]
	Description=Dieser Befehl fragt im Clonk in der Spielerdatei gespeicherten Extra-Daten ab, die per <funclink>SetCrewExtraData<funclink/> gesetzt wurden.
		[data_name]
		Description=Name der zugeordneten Daten.


	[GetCursor]
	Description=Gibt den momentan kontrollierten Clonk eines Spielers zurück.
		[player]
		Description=Spielernummer des Spielers, dessen kontrollierter Clonk zurückgegeben werden soll.


	[GetDamage]
	Description=Fragt den Schadenswert des aufrufenden Objekts ab.

	[GetDefBottom]
	Description=Fragt die Unterkante des aufrufenden Objekts ab. Diese entspricht Y-Position + DefCore-OffsetY + DefCore-Height. Eine eventuelle Drehung wird hier nicht mit eingerechnet.

	[GetDefCoreVal]
	Description=Gibt einen Eigenschaftswert der aufrufenden Objektdefinition nach seinem Namen in der <emlink>DefCore.txt<emlink/> zurück.
		[entry]
		Description=Name des abzufragenden Eintrags

		[section]
		Description=Sektion des abzufragenden Eintrags. Wenn nicht angegeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.

		[entry_number]
		Description=Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.


	[GetDefinition]
	Description=Liefert das ID der indizierten von der Engine in dieser Runde geladenen Objektdefinition der angegebenen Kategorie.
		[index]
		Description=Index der gesuchten Definition.


	[GetDir]
	Description=Liefert die aktuelle Richtung des aufrufenden Objekts als DIR_x-Wert.

	[GetEffect]
	Description=Gibt einen bestimmten Effekt zurück. Wurde der Effekt nicht gefunden, wird <code>nil<code/> zurückgegeben.
		[name]
		Description=Name des Effektes ohne vorangestelltes Fx. Es können '*' und '?' als Suchmaske verwendet werden.

		[target]
		Description=Zielobjekt, in dem Effekte abgefragt werden sollen. Bei <code>nil<code/> wird die globale Effektliste durchsucht.

		[index]
		Description=Effektindex. Bei angegebenem name gibt dies bei mehreren, der Suchmaske entsprechenden Effekten den indizierten Effekt in der Liste der passenden Effekte an.

		[max_priority]
		Description=Wenn ungleich 0, werden nur Effekte zurückgegeben, die höchstens die angegebene Priorität haben.


	[GetEffectCount]
	Description=Zählt die Effekte in einem Objekt oder globale Effekte.
		[mask]
		Description=Suchmaske für den Namen der Effekte. Es können '*' und '?' in der Maske verwendet, oder auch direkt Effektnamen angegeben werden. Wenn nicht angegeben, werden alle Effekte gezählt.

		[target]
		Description=Zielobjekt, dessen Effekte gezählt werden sollen. Bei unspecified werden globale Effekte gezählt.

		[max_priority]
		Description=Wenn ungleich 0, werden nur Effekte zurückgegeben, die höchstens die angegebene Priorität haben.


	[GetEnergy]
	Description=Liefert den aktuellen Energiewert des aufrufenden Objekts in Prozent. 100% stellen hierbei den maximalen Physical-Wert von 100000 dar. Siehe auch DefCore.txt Sektion [Physical].

	[GetEntrance]
	Description=Liefert den aktuellen Eintrittsstatus des aufrufenden Objekts. <code>true<code/> bei erlaubtem Eintritt, <code>false<code/> bei verbotenem Eintritt.

	[GetGravity]
	Description=Liest die Schwerkraft (in Prozent) aus.

	[GetHiRank]
	Description=Liefert den höchstrangigen aktiven Clonk von player.
		[player]
		Description=Spieler


	[GetHomebaseMaterial]
	Description=Bei angegebenen id gibt die Funktion die Menge der Objekte zurück, die der Spieler in seiner Heimatbasis kaufen kann. index und category werden hierbei ignoriert. Wird id nicht angegeben, liefert die Funktion den indizierten Objekttyp der entsprechenden Kategorie der kaufbaren Objekte des Spielers. Der Objekttyp (id) taucht in der Liste auf und wird zurückgeliefert, selbst wenn zur Zeit keine Objekte dieses Typs verfügbar sind.
		[player]
		Description=Die Nummer des Spieler, dessen Kaufmöglichkeiten abgefragt werden sollen. Der erste Spieler hat die Nummer 0.

		[id]
		Description=Wenn angegeben, gibt die Funktion die Menge der Objekte zurück, die der Spieler in seiner Heimatbasis kaufen kann. index und category werden hierbei ignoriert.

		[index]
		Description=Der Index der gesuchten Kaufmöglichkeit.

		[category]
		Description=Die Kategorie der gesuchten Kaufmöglichkeit.


	[GetHomebaseProduction]
	Description=Bei angegebenen id gibt die Funktion zurück, wie schnell die Menge der Objekte in der Heimatbasis des Spielers nachgeliefert wird. index und category werden hierbei ignoriert. Wird id nicht angegeben, liefert die Funktion den indizierten Objekttyp der entsprechenden Kategorie der nachgelieferten Objekte des Spielers. Der Objekttyp (id) taucht in der Liste auf und wird zurückgeliefert, selbst wenn zur Zeit keine Objekte dieses Typs nachgeliefert werden.
		[player]
		Description=Die Nummer des Spielers, dessen Kaufmöglichkeiten abgefragt werden sollen. Der erste Spieler hat die Nummer 0.

		[id]
		Description=Wenn angegeben, gibt die Funktion die Menge der Objekte zurück, die in der Heimatbasis des Spielers nachgeliefert wird. index und category werden hierbei ignoriert.

		[index]
		Description=Der Index der gesuchten Kaufmöglichkeit.

		[category]
		Description=Die Kategorie der gesuchten Kaufmöglichkeit.


	[GetID]
	Description=Gibt die ID des aufrufenden Objekts zurück.

	[GetIndexOf]
	Description=
		[array2search]
		Description=

		[needle]
		Description=


	[GetKiller]
	Description=Liefert den Spieler, der zuletzt Energieabzug am aufrufenden Objekt verursacht hat.

	[GetLength]
	Description=Ermittelt die Länge einer Zeichenkette oder eines Arrays.
		[text]
		Description=Zeichenkette oder Array, von der die Länge abgefragt wird


	[GetMass]
	Description=Liefert die Masse des aufrufenden Objekts (inklusive aller Inhaltsobjekte) oder der aufrufenden Definition.

	[GetMaterial]
	Description=Fragt das Material an einer bestimmten Stelle der Landschaft ab. Der zurückgegebene Wert ist ein Materialindex, der mit anderen Indizes zum Beispiel über die Funktion <funclink>Material<funclink/>() verglichen werden kann. Für Himmel gibt die Funktion -1 zurück.
		[x]
		Description=X-Position, an der das Material abgefragt werden soll. Offset bei lokalem Aufruf.

		[y]
		Description=Y-Position, an der das Material abgefragt werden soll. Offset bei lokalem Aufruf.


	[GetMaterialCount]
	Description=Liefert die in der Landschaft vorhandene Menge des angegebenen Materials.
		[material_index]
		Description=Materialsindex


	[GetMaterialVal]
	Description=Gibt einen Eigenschaftswert einer Materialdefinition nach seinem Namen in der <emlink>Materialdatei<emlink/> zurück.
		[entry]
		Description=Name des abzufragenden Eintrags

		[section]
		Description=Sektion des abzufragenden Eintrags. Wenn nicht angegeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.

		[material]
		Description=Nummer des Materials, von dem der Eintrag abgefragt werden soll. Bei Übergabe von 0 wird die Definition des aufrufenden Objekts angenommen.

		[entry_number]
		Description=Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.


	[GetMenu]
	Description=Liefert die ID des Menüs, falls das Objekt ein Menü geöffnet hat. Normalerweise ist das die ID des Menüsymbols (symbol), wenn nicht bei <funclink>CreateMenu<funclink/> explizit eine andere Menü-ID als idMenuID angegeben wurde.

	[GetMenuSelection]
	Description=Ermittelt den gerade ausgewählten Menüeintrag des geöffneten Menüs des aufrufenden Objekts, oder <code>nil<code/>, wenn kein Menü geöffnet ist.

	[GetMeshMaterial]
	Description=Gibt zurück, welches Material das Mesh des aufrufenden Objekts gerade gesetzt hat.
		[submesh]
		Description=Besteht das Mesh aus mehreren SubMeshes, so kann durch diesen Parameter angegeben werden das Material welches SubMeshes abgefragt werden soll.


	[GetMissionAccess]
	Description=Stellt fest und gibt zurück, ob der Spieler bereits das angegebene Missionszugangspasswort besitzt
		[mission_access]
		Description=Missionszugang, der überprüft wird


	[GetName]
	Description=Gibt den Namen eines Objekts oder einer Objektdefinition zurück. Hat das Objekt keinen eigenen Namen, wird der Name der Definition zurückgegeben.

	[GetNeededMatStr]
	Description=Liefert die noch benötigten Baumaterialien des Objekts

	[GetObjectBlitMode]
	Description=Liefert den aktuellen Zeichenmodus des aufrufenden Objekts.
		[overlay_id]
		Description=Wenn angegeben, wird stattdessen der Blitmodus dieses Grafikoverlays abgefragt. Das Overlay muss vorher mit <funclink>SetGraphics<funclink/> erstellt worden sein.


	[GetObjectInfoCoreVal]
	Description=Bei dem InfoCore handelt es sich um die Informationen eines CrewMembers, die in dem Spieler gespeichert werden (*.oci). Dementsprechend gibt GetObjectInfoCoreVal einen Eigenschaftswert eines Crewmembers nach Namen in einer oci-Datei zurück
		[entry]
		Description=Name des abzufragenden Eintrags

		[section]
		Description=Sektion des abzufragenden Eintrags. Wenn nicht angegeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.

		[entry_number]
		Description=Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.


	[GetObjectVal]
	Description=Gibt einen Eigenschaftswert des aufrufenden Objekts nach seinem Namen in der Objects.txt zurück.
		[entry]
		Description=Name des abzufragenden Eintrags

		[section]
		Description=Sektion des abzufragenden Eintrags. Wenn nicht angegeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.

		[entry_number]
		Description=Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.


	[GetOCF]
	Description=Liefert das Object-Character-Flag des aufrufenden Objekts. Dieser Wert beschreibt den aktuellen Zustand des Objekts. Der Rückgabewert ist eine Bitmaske und kann mit & mit einem OCF_x-Wert verglichen werden.

	[GetOwner]
	Description=Ermittelt den Besitzer des aufrufenden Objekts.

	[GetPathLength]
	Description=Sucht mittels des auch für die Clonk-Wegfindung benutzten Algorithmus einen Weg zwischen zwei Punkten der Landschaft und gibt dessen Länge zurück. Wurde kein Weg gefunden, gibt die Funktion <code>nil<code/> zurück.
		[startx]
		Description=Y-Koordinate der Startposition. Immer globale Koordinaten.

		[starty]
		Description=Y-Koordiante der Startposition. Immer globale Koordinaten.

		[endx]
		Description=X-Koordiante der Zielposition. Immer globale Koordinaten.

		[endy]
		Description=Y-Koordiante der Zielposition. Immer globale Koordinaten.


	[GetPhase]
	Description=Liefert die Aktivitätsphase des aufrufenden Objekts.

	[GetPhysical]
	Description=Liefert die physischen Eigenschaften des Objekts oder der Definition im Aufrufkontext.
		[physical]
		Description=Name der abzufragenden physischen Eigenschaft.

		[mode]
		Description=Change mode:<br><br/>
            <table>
              <rowh>
                <col>Konstante<col/>
                <col>Wert<col/>
                <col>Bedeutung<col/>
              <rowh/>
              <row>
                <col>PHYS_Current<col/>
                <col>0<col/>
                <col>Im Objektkontext: Die Eigenschaften werden im gerade aktiven Modus (temporär oder permanent) des Objektes abgefragt. Dieser Modus funktioniert als einziger auch bei Objekten ohne Objektinfo. Im Definitionskontext: Die Standardwerte der Definition werden abgefragt.<col/>
              <row/>
              <row>
                <col>PHYS_Permanent<col/>
                <col>1<col/>
                <col>Die permanenten Eigenschaften aus der Spielerdatei werden abgefragt. Dies ist nur bei Spielercrew-Mitgliedern möglich.<col/>
              <row/>
              <row>
                <col>PHYS_Temporary<col/>
                <col>2<col/>
                <col>Die temporären Eigenschaften werden abgefragt, wenn sie existieren.<col/>
              <row/>
            <table/>


	[GetPlayerByIndex]
	Description=Gibt die indizierte Spielernummer zurück. Die Funktion garantiert für Werte zwischen 0 und GetPlayerCount()-1, dass eine gültige Spielernummer zurückgegeben wird (denn durch eliminierte Spieler und Neubeitritte kann es vorkommen, dass "Löcher" unbelegter Spielernummern in der Liste entstehen!). Damit ist es einfacher, eine Schleife zu schreiben, die alle Spielernummern durchgeht.
		[index]
		Description=Index in der Spielerliste

		[player_type]
		Description=Wenn angegeben, wird der indizierte Spieler des angegebenen Typs zurückgegeben. So lassen sich zum Beispiel nur alle menschlichen oder nur alle Scriptspieler durchgehen. Für eine Liste gültiger Werte, siehe <funclink>GetPlayerType<funclink/>.


	[GetPlayerByName]
	Description=Gibt die Spielernummer des angegebenen Spielers oder -1 wenn kein solcher Spieler gefunden wurde zurück.
		[player_name]
		Description=Name des Spielers


	[GetPlayerControlAssignment]
	Description=Liefert den Namen eines Spielers mit Markup in dessen Spielerfarbe. Wenn die Spielernummer zu keinem gültigen Spieler gehört, wird <code>nil<code/> zurückgegeben. Dadurch kann diese Funktion auch benutzt werden, um zu ermitteln, ob eine Spielernummer gültig ist.
		[player]
		Description=Spielernummer, dessen Verbündete Besitzer der zu suchenden Objekte sein müssen

		[control]
		Description=

		[human_readable]
		Description=

		[short_name]
		Description=


	[GetPlayerCount]
	Description=Liefert die Anzahl der Spieler, die momentan im Spiel sind.
		[player_type]
		Description=Wenn angegeben, wird nur die Anzahl des Spielers vom angegebenen Typ zurückgegeben. Für eine Liste gültiger Spielertypen siehe <funclink>GetPlayerType<funclink/>.


	[GetPlayerID]
	Description=Gibt die Spieler-ID eines beigetretenen Spielers zurück. Spieler-IDs werden von 1 hochgezählt, und - anders als Spielernummern - nicht wieder benutzt, nachdem ein Spieler eliminiert wurde. Jeder neu beigetetene Spieler hat also eine eigene ID.
		[player]
		Description=Spielernummer, dessen ID abgefragt werden soll.


	[GetPlayerInfoCoreVal]
	Description=Gibt einen Eigenschaftswert aus der Player.txt eines Spielers zurück.
		[entry]
		Description=Name des abzufragenden Eintrags

		[section]
		Description=Sektion des abzufragenden Eintrags. Wenn nicht angegeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.

		[player]
		Description=Spieler, dessen Eintrag abgefragt werden soll.

		[entry_number]
		Description=Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.


	[GetPlayerName]
	Description=Liefert den Namen eines Spielers. Wenn die Spielernummer zu keinem gültigen Spieler gehört, wird <code>nil<code/> zurückgegeben. Dadurch kann diese Funktion auch benutzt werden, um zu ermitteln, ob eine Spielernummer gültig ist.
		[player]
		Description=Spielernummer des Spieler, dessen Name abgefragt werden soll


	[GetPlayerScore]
	Description=Liefert die Punkte die player hat.
		[player]
		Description=Spieler-Nummer dessen Punkte zurück gegeben werden sollen.


	[GetPlayerScoreGain]
	Description=Liefert die Änderung der Spielerpunkte seit Beginn der Runde.
		[player]
		Description=Spieler, dessen Spielerpunktegewinn gesucht wird.


	[GetPlayerTeam]
	Description=Liefert das Team eines Spielers. Hat der Spieler kein Team, wird 0 zurückgegeben.
		[player]
		Description=Spielernummer des Spieler, dessen Team abgefragt werden soll


	[GetPlayerType]
	Description=Returns the type of a player. Possible values are: 
      <table>
        <rowh>
          <col>Konstante<col/>
          <col>Wert<col/>
          <col>Beschreibung<col/>
        <rowh/>
        <row>
          <col>C4PT_User<col/>
          <col>1<col/>
          <col>Vom Benutzer gesteuerter Spieler<col/>
        <row/>
        <row>
          <col>C4PT_Script<col/>
          <col>2<col/>
          <col>Scriptgeesteuerter Spieler; zum Beispiel KI-Spieler.<col/>
        <row/>
      <table/>
		[player]
		Description=Spielernummer des Spieler, dessen Typ abgefragt werden soll


	[GetPlayerVal]
	Description=Fragt Eigenschaftswerte eines Spielers anhand dessen Namen ab, wie sie beim Speichern eines Spiels in die game.txt geschrieben werden
		[entry]
		Description=Name des abzufragenden Eintrags

		[section]
		Description=Sektion des abzufragenden Eintrags. Wenn nicht angegeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.

		[player]
		Description=Nummer des Spielers, von dem der Eintrag abgefragt werden soll.

		[entry_number]
		Description=Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.


	[GetPlrClonkSkin]
	Description=
		[player]
		Description=Abgefragter Spieler


	[GetPlrColor]
	Description=Fragt die Spielerfarbe ab. Die Spielerfarbe wird verwendet, um einige Besitzobjekte wie Clonks oder Flaggen, sowie Textnachrichten dieses Spielers einzufärben.
		[player]
		Description=Abgefragter Spieler


	[GetPlrExtraData]
	Description=Dieser Befehl fragt im Spieler gespeicherten Extra-Daten ab, die per <funclink>SetPlrExtraData<funclink/> gesetzt wurden.
		[player]
		Description=Nummer des Spielers, für den zusätzliche Daten gespeichert werden sollen

		[data_name]
		Description=Name der zugeordneten Daten.


	[GetPlrKnowledge]
	Description=Bei angegebenen <code>type<code/> gibt die Funktion <code>true<code/> zurück, wenn der Spieler den Bauplan des betreffenden herstellbaren Objekts besitzt. <code>index<code/> und <code>category<code/> werden hierbei ignoriert. Andernfalls liefert die Funktion den indizierten Bauplan der entsprechenden Kategorie des Spielers.
		[player]
		Description=Spieler, über dessen Baupläne Informationen abgerufen werden sollen.

		[type]
		Description=Wenn angegebenen, dann gibt die Funktion <code>true<code/> zurück, wenn der Spieler den Bauplan des betreffenden herstellbaren Objekts besitzt, ansonsten <code>false<code/>.

		[index]
		Description=Wenn <code>type<code/> nicht angegeben ist, ist dies der Index des Bauplans von der Liste der Baupläne.

		[category]
		Description=Wenn <code>type<code/> nicht angegeben ist, grenzt dies die Kategorie der Baupläne ein.


	[GetPlrMagic]
	Description=Stellt das Magiewissen eines bestimmten Spielers fest.
		[player]
		Description=Spieler, dessen Magiewissen abgefragt wird.

		[id]
		Description=Bei angegebenen id gibt die Funktion <code>true<code/> zurück, wenn der player betreffenden Zauber zur Verfügung hat. index wird hierbei ignoriert.

		[index]
		Description=Bei angegebenem index liefert die Funktion den indizierten Zauberspruch, der dem Spieler zur Verfügung steht.


	[GetPlrView]
	Description=Gibt das Objekt zurück, dem die Sicht eines Spielers folgt. Gibt <code>nil<code/> zurück, wenn kein Spieler mit der angegebenen Nummer existiert oder die Spielersicht keinem per Script gesetztem Objekt folgt (siehe <funclink>GetPlrViewMode<funclink/>).
		[player]
		Description=Nummer des Spielers, dessen Sicht abgefragt werden soll.


	[GetPlrViewMode]
	Description=Determines the current view mode of a player. The function returns the following values: 
      <ul>
        <li>0: Cursor - Die Sicht des Spielers folgt dem aktuell selektierten Clonk (siehe <funclink>GetCursor<funclink/>)<li/>
        <li>1: Target - Die Sicht folgt einem anderen Objekt, welches durch den Befehl <funclink>SetPlrView<funclink/> im Script gesetzt wurde. Siehe auch <funclink>GetPlrView<funclink/>.<li/>
        <li>2: Scroll - Der Spieler bewegt seine Sicht unabhängig von der Position eines Objekts. Dies geschieht, wenn der Spieler die Maus an den Rand seines Sichtbereichs zieht.<li/>
      <ul/>
		[player]
		Description=Nummer des Spielers, dessen Sichtmodus abgefragt werden soll.


	[GetProcedure]
	Description=Gibt die Prozedur der gegenwärtigen Aktivität des aufrufenden Objekts zurück (z.B. FLOAT, ATTACH, etc.). Bei einer NONE-Prozedur oder keiner Aktivität wird <code>nil<code/> zurückgegeben.

	[GetProperties]
	Description=Liefert die Eigenschaft <code>key<code/> von <code>object<code/>.
		[object]
		Description=Objekt von dem die Eigenschaft abgefragt wird. <code>nil<code/> für lokale Aufrufe.


	[GetProperty]
	Description=Liefert die Eigenschaft <code>key<code/> von <code>object<code/>.
		[key]
		Description=Abzufragende Eigenschaft.

		[object]
		Description=Objekt von dem die Eigenschaft abgefragt wird. <code>nil<code/> für lokale Aufrufe.


	[GetR]
	Description=Liefert die Rotation des aufrufenden Objekts in Grad. Der Rückgabewert liegt zwischen -180° und 180°. 0° ist der Normalzustand.

	[GetRank]
	Description=Liefert die Rang-Nummer des aufrufenden Objekts. 0 ist ein unbeförderter Clonk.

	[GetRDir]
	Description=Liefert die Rotations-Geschwindigkeit des aufrufenden Objekts.
		[precision]
		Description=Genauigkeit. Keine Angabe entspricht 10.


	[GetRGBaValue]
	Description=Returns one of the three color fractions of the specified 32 bit color value: 
      <table>
        <rowh>
          <col>select<col/>
          <col>Rückgabewert<col/>
        <rowh/>
        <row>
          <col>0<col/>
          <col>Alpha-Wert<col/>
        <row/>
        <row>
          <col>1<col/>
          <col>Rotanteil<col/>
        <row/>
        <row>
          <col>2<col/>
          <col>Grünanteil<col/>
        <row/>
        <row>
          <col>3<col/>
          <col>Blauanteil<col/>
        <row/>
      <table/>
		[Val]
		Description=32Bit-Farbwert

		[select]
		Description=0-3: Auswahl des gewünschten Rückgabewerts


	[GetRootAnimation]
	Description=Gibt die Nummer der obersten Animation im angegebenen Slot zurück. Diese Animation wird mit der Animation der nächstkleineren Slotnummer kombiniert um dann mit der obersten Animation der nächsthöheren Slotnummer kombiniert zu werden, oder, falls es keinen nächsthöheren Slot gibt, auf dem Bildschirm angezeigt zu werden. Enthält der Slot mehr als eine Animation, so ist die oberste Animation immer ein Kombinationsknoten, der die Einzelanimationen oder Kombinationen derselben zu dem Gesamtergebnis des Slots kombiniert. Gibt <code>nil<code/> zurück wenn der angegebene Slot gar keine Animation enthält.
		[slot]
		Description=Slot dessen oberste Animation zurückgegeben werden soll.


	[GetScenarioVal]
	Description=Fragt Eigenschaftswerte des Szenarios anhand dessen Namen/Sekion in der <emlink>Scenario.txt<emlink/> ab
		[entry]
		Description=Name des abzufragenden Eintrags

		[section]
		Description=Sektion des abzufragenden Eintrags. Wenn nicht angegeben, werden alle Sektionen nach einem Eintrag mit dem entspr. Namen durchsucht.

		[entry_number]
		Description=Nummer des abzufragenden Wertes, wenn der Eintrag mehrere Werte enthält.


	[GetSeason]
	Description=Liefert die aktuelle Jahreszeit. 0 ist Winter, 50 Sommer.

	[GetSkyAdjust]
	Description=Gibt die mit <funclink>SetSkyAdjust<funclink/> gesetzte Himmelsmodulation zurück. Siehe <funclink>SetSkyAdjust<funclink/> für mehr Informationen.
		[back_color]
		Description=Wenn ungleich <code>false<code/>, wird die in SetSkyAdjust angegebene Zweitfarbe zurückgegeben.


	[GetTaggedPlayerName]
	Description=Liefert den Namen eines Spielers mit Markup in dessen Spielerfarbe. Wenn die Spielernummer zu keinem gültigen Spieler gehört, wird <code>nil<code/> zurückgegeben. Dadurch kann diese Funktion auch benutzt werden, um zu ermitteln, ob eine Spielernummer gültig ist.
		[player]
		Description=Spielernummer des Spieler, dessen Name abgefragt werden soll


	[GetTeamByIndex]
	Description=Gibt die indizierte Teamnummer zurück. Die Funktion garantiert für Werte zwischen 0 und GetTeamCount()-1, dass eine gültige Teamnummer zurückgegeben wird (denn durch eliminierte Spieler und Neubeitritte kann es vorkommen, dass "Löcher" unbelegter Teamnummern in der Liste entstehen!). Damit ist es einfacher, eine Schleife zu schreiben, die alle Teamnummern durchgeht.
		[index]
		Description=Index in der Teamliste


	[GetTeamColor]
	Description=Liefert die Farbe eines Teams.
		[team]
		Description=Teamnummer des Teams, dessen Farbe abgefragt werden soll


	[GetTeamCount]
	Description=Liefert die Anzahl der Teams, die momentan im Spiel sind.

	[GetTeamName]
	Description=Liefert den Namen eines Teams.
		[team]
		Description=Teamnummer des Teams, dessen Name abgefragt werden soll


	[GetTemperature]
	Description=Liefert die globale Temperatur. Werte abhängig von Klima und Jahreszeit zwischen +80 und -80.

	[GetTime]
	Description=Gibt die Zeit seit Windowsstart in Millisekunden zurück. Kann zur genauen Zeitmessung verwendet werden.

	[GetType]
	Description=Gibt den Typ des übergebenen Werts zurück.
		[Value]
		Description=Wert dessen Typ abgefragt werden soll.


	[GetUnusedOverlayID]
	Description=Gibt eine ungenutzte Overlay-ID zurück. Es wird der erste freie Overlay nach base_index zurückgegeben.
		[base_index]
		Description=ID des Overlays hinter dem die Suche beginnen soll.


	[GetValue]
	Description=Gibt einen Objekt- oder Definitionswert zurück.<br><br/>Ein Objektwert berechnet sich folgendermaßen: Zunächst geprüft, ob eine CalcValue-Funktion im Script des Objekttyps vorhanden ist, und gegebenenfalls ausgewertet. Ansonsten wird der Definitionswert (siehe nächster Absatz) verwendet. Unabhängig davon wird der Wert des Objekts immer mit der Fertigstellung (<placeholder-1><placeholder-1/>()/100) multipliziert. Tote Lebewesen (<placeholder-2><placeholder-2/>()&<placeholder-3><placeholder-3/> && !<placeholder-4><placeholder-4/>()) haben immer den Wert 0.<br><br/>Der Definitionswert wird folgendermaßen ermittelt: Ist eine CalcDefValue-Funktion im Script vorhanden, wird diese ausgewertet. Ansonsten wird eine Wertüberladung aus der Scenario.txt verwendet. Ist diese ebenfalls nicht vorhanden, wird der in der DefCore angegebene Wert benutzt.<br><br/>
		[base]
		Description=Basis, in der gekauft wird. Falls in diesem Objekt ein CalcValue-Aufruf zur Verfügung stellt, wird dieser Parameter an den Aufruf weitergegeben.

		[for_player]
		Description=Spieler, für den der Wert gilt. Falls in diesem Objekt ein CalcValue-Aufruf zur Verfügung stellt, wird auch dieser Parameter an den Aufruf weitergegeben.


	[GetVertex]
	Description=Liefert eine Koordinate des indizierten Vertex (siehe <emlink>DefCore.txt<emlink/>) des aufrufenden Objekts. Koordinaten in Relation zur Objektmitte.
		[index]
		Description=Index des Vertex.

		[data]
		Description=<table>
              <rowh>
                <col>Wert<col/>
                <col>Bedeutung<col/>
              <rowh/>
              <row>
                <col>VTX_X<col/>
                <col>X-Koordinate des Vertex.<col/>
              <row/>
              <row>
                <col>VTX_Y<col/>
                <col>Y-Koordinate des Vertex.<col/>
              <row/>
              <row>
                <col>VTX_CNAT<col/>
                <col><emlink>CNAT-Wert<emlink/> des Vertex.<col/>
              <row/>
              <row>
                <col>VTX_Friction<col/>
                <col>Reibung des Vertex.<col/>
              <row/>
            <table/>


	[GetVertexNum]
	Description=Liefert die Anzahl der Vertices des aufrufenden Objekts.

	[GetWealth]
	Description=Liefert das Vermögen von owner.
		[owner]
		Description=Spielernummer


	[GetWind]
	Description=Liefert die Windstärke und Richtung an der Position X, Y. Wird die Funktion aus einem Objekt heraus aufgerufen, so ist die Position relativ zur Objektposition. Wenn global is <code>true<code/>, wird der globale Wind zurückgegeben.
		[x]
		Description=X-Position

		[y]
		Description=Y-Position

		[global]
		Description=Ob der globale Wind abgefragt werden soll.


	[GetX]
	Description=Liefert die X-Position des aufrufenden Objekts.

	[GetXDir]
	Description=Liefert die Geschwindigkeit in X-Richtung des aufrufenden Objekts.
		[precision]
		Description=Genauigkeit mit der die Geschwindigkeit zurückgegeben werden soll (Standardwert: 10)


	[GetY]
	Description=Liefert die Y-Position des aufrufenden Objekts.

	[GetYDir]
	Description=Liefert die Geschwindigkeit in Y-Richtung des aufrufenden Objekts.
		[precision]
		Description=Genauigkeit mit der die Geschwindigkeit zurückgegeben werden soll (Standardwert: 10)


	[GrabContents]
	Description=Entfernt sämtlichen Inhalt von *obj, und gibt diesen dem aufrufenden Objekt.
		[obj]
		Description=Objekt dessen Inhalt gestohlen werden soll.


	[GrabObjectInfo]
	Description=Überträgt die Infosektion von einem anderen Objekt zu dem aufrufenden Objekt. Die Infosektion enthält Namen, Rang, permantente Physicals, usw. Mit diesem Befehl lassen sich beispielsweise Wiederbelebungen realisieren, indem einfach beim Tod eines Clonks ein neuer erstellt und die Infosektion übertragen wird.
		[from]
		Description=Objekt (Clonk), von dem die Infosektion genommen werden soll.


	[Hostile]
	Description=Prüft, ob zwei Spieler verfeindet sind. Dazu reicht es, wenn nur einer von beiden mit dem anderen Spieler verfeindet ist.
		[player1]
		Description=Erster Spieler

		[player2]
		Description=Zweiter Spieler

		[check_one_way]
		Description=Wenn <code>true<code/>, wird nur geprüft, ob player1 mit player2 verfeindet ist und nicht umgekehrt.


	[HSL]
	Description=Setzt einen 32Bit-Farbwert aus den drei Parametern zusammen. 0-255 für alle Parameter.
		[byH]
		Description=Farbton der Farbe. 0 ist Rot, 85 ist Grün, 170 Blau und 255 wieder Rot.

		[byS]
		Description=Sättigung der Farbe. Dies ist der Farbkontrast.

		[byL]
		Description=Helligkeit der Farbe. Helligkeit gleich null entspräche <funclink>RGB<funclink/>(0,0,0)


	[HSL2RGB]
	Description=Wandelt einen 24Bit HSL-Wert in den bekannten 32Bit RGB-Farbwert um.<br><br/> Der 24Bit HSL-Wert kann mit <funclink>RGB<funclink/>(Hue,Saturation,Lightness) erzeugt werden.<br><br/>
		[Val]
		Description=24Bit HSL-Wert


	[HSLa]
	Description=Setzt einen 32Bit-Farbwert aus den drei Parametern und einem Durchsichtigkeitswert zusammen. 0-255 für alle Parameter.
		[byH]
		Description=Farbton der Farbe. 0 ist Rot, 85 ist Grün, 170 Blau und 255 wieder Rot.

		[byS]
		Description=Sättigung der Farbe. Dies ist der Farbkontrast.

		[byL]
		Description=Helligkeit der Farbe. Helligkeit gleich null entspräche <funclink>RGB<funclink/>(0,0,0)

		[byA]
		Description=Deckkraft der Farbe.


	[Incinerate]
	Description=Zündet das aufrufende Objekt an. In dem jeweiligen Objekt wird ggf. Incineration() aufgerufen

	[inherited]
	Description=Ruft die überladene Funktion auf. Funktionen überladen sich, wenn sie beide den gleichen Namen haben.

	[InLiquid]
	Description=Gibt <code>true<code/> zurück, wenn sich das aufrufende Objekt in einer Flüssigkeit befindet.

	[InsertMaterial]
	Description=Inserts a material pixel at the given position and given speed.
		[material_index]
		Description=Einzufügendes Material (siehe <funclink>Material<funclink/>())

		[x]
		Description=X-Einfügeposition/-offset

		[y]
		Description=Y-Einfügeposition/-offset

		[xdir]
		Description=X-Geschwindigkeit des eingefügten Mateiralpixels

		[ydir]
		Description=Y-Geschwindigkeit des eingefügten Mateiralpixels

		[out_insertpos]
		Description=If a writeable proplist is passed, members x and y are filled with the actual insertion position.


	[Inside]
	Description=Gibt <code>true<code/> zurück, wenn value >= lower_bound und value <= upper_bound ist.
		[value]
		Description=Eingabewert

		[lower_bound]
		Description=Untergrenze für den Wert

		[upper_bound]
		Description=Obergrenze für den Wert


	[IsNetwork]
	Description=Prüft, ob das aktuelle Spiel ein Netzwerkspiel ist.

	[Jump]
	Description=Veranlasst das Objekt dazu, zu springen. Dabei gelten sämtliche Beschränkungen, die auch bei Ansteuerung über die Tastatur gelten: Das Objekt kann nur springen, wenn es gerade steht (seine Action die Procedure "WALK" hat).<br><br/> Im Wasser wird die Action "Dive" aktiviert.<br><br/> Die Funktion gibt zurück, ob die Aktion erfolgreich durchgeführt wurde.

	[Kill]
	Description=Tötet das aufrufende Objekt. Nur Lebewesen.
		[forced]
		Description=Wenn gesetzt, wird das Objekt auch dann getötet, wenn ein Effekt das zu unterbrechen versucht.


	[LandscapeHeight]
	Description=Gibt die Höhe der Landschaft in Pixel zurück.

	[LandscapeWidth]
	Description=Gibt die Breite der Landschaft in Pixel zurück.

	[LaunchEarthquake]
	Description=Erzeugt einen Erdbeben an angegebener Stelle. Koordinaten auch bei lokalem Aufruf global
		[x]
		Description=X-Position

		[y]
		Description=Y-Position


	[LaunchLightning]
	Description=Erzeugt einen Blitz. Dieser bewegt sich von der Position (x, y) mit der angegebenen Geschwindigkeit fort. Dabei geben xrange/yrange an, wie sehr der Blitz von diesem vorgegegebenen Weg abweichen kann (mit xrange = yrange = 0 würde der Blitz schnurgerade verlaufen). xrange/yrange sind sozusagen ein Maß für die "Zackigkeit" eines Blitzes.<br><br/> Die Position muss auch bei lokalem Aufruf in globalen Koordinaten angegeben werden.
		[x]
		Description=X-Position

		[y]
		Description=Y-Position

		[xspeed]
		Description=horizontale mittlere Geschwindigkeit des Blitzes

		[xrange]
		Description=maximale Abweichung von xspeed

		[yspeed]
		Description=vertikale mittlere Geschwindigkeit des Blitzes

		[yrange]
		Description=maximale Abweichung von yspeed

		[do_gamma]
		Description=Wenn gesetzt, bewirkt dieser Blitz ein Aufflackern des Bildschirms bei allen Spielern.


	[LaunchVolcano]
	Description=Erzeugt einen Vulkan an angegebener Position
		[x]
		Description=X-Position

		[y]
		Description=Y-Zielposition. Default: am unteren Ende der Landschaft

		[strength]
		Description=Stärke. Default: relativ zur Höhe der Landschaft

		[material_name]
		Description=Name des Materials. Default ist "Lava"


	[Log]
	Description=Gibt einen Text im Messageboard am unteren Bildschirmrand aus. Die Parameter können über den C-Formatierungsstil in den Text eingebunden werden. Siehe dazu auch <funclink>Format<funclink/>.
		[message]
		Description=Auszugebender Text


	[MakeCrewMember]
	Description=Fügt das aufrufende Objekt (z.B. einen Clonk) der Crew eines Spielers hinzu. Das Objekt muss die CrewMember-Eigenschaft in der DefCore gesetzt haben.<br><br/> Gibt <code>true<code/> zurück, wenn das Objekt erfolgreich der Crew hinzugefügt wurde.
		[player]
		Description=Spieler, dessen Crew das Objekt hinzugefügt werden soll.


	[Material]
	Description=Gibt den Index eines Materials anhand seines Namens zurück. Dieser Index wird in den meisten materialbezogenen Funktionen verwendet.
		[material_name]
		Description=Name des Materials


	[MaterialName]
	Description=Gibt den (internen, englischen) Namen eines Materials zurück.
		[material_index]
		Description=Index des Materials, dessen Name ermittelt wird


	[Max]
	Description=Gibt den größeren der beiden Werte zurück
		[value1]
		Description=erster Wert

		[value2]
		Description=zweiter Wert


	[Message]
	Description=Zeigt eine Nachricht an. Diese kann nach dem C-Formatierungsstil formatiert werden (siehe <funclink>Format<funclink/>)
		[message]
		Description=Nachricht, die angezeigt werden soll.


	[Min]
	Description=Gibt den kleineren der beiden Werte zurück
		[value1]
		Description=erster Wert

		[value2]
		Description=zweiter Wert


	[Music]
	Description=Spielt ein Musikstück ab. Die entsprechende Datei muss in einer der aktiven Musikdateien vorhanden sein. Sind im ausgewählten Szenario Musikdateien vorhanden, gilt die Szenariodatei als aktive Musikdatei, andernfalls wird die globale Musikdatei Music.ocg genutzt.
		[song_name]
		Description=Dateiame des Musikstückes. Die Endung muss mit angegeben werden. Wird der Parameter weggelassen, so wird die Musikwiedergabe unterbrochen.

		[loop]
		Description=Wenn 1, wird das angegebene Musikstück andauernd abgespielt.


	[MusicLevel]
	Description=Setzt die Lautstärke, mit der die Hintergrundmusik abgespielt wird (siehe <funclink>Music<funclink/>).
		[level]
		Description=Gewünschte Lautstärke (0-100).


	[Object]
	Description=Wandelt eine Objektnummer in einen Objektpointer um.
		[object_number]
		Description=Eindeutige Objektnummer.


	[ObjectCount]
	Description=Gibt die Anzahl der Objekte zurück, die das angegebenen Suchkriterien erfüllen. Die Suchkriterien werden mittels speziellen Kriteriums-Funktionen der Form "Find_*" angegeben.
		[Criteria]
		Description=Suchkriterium in Form einer Find_*-Funktion


	[ObjectDistance]
	Description=Liefert die Distanz zwischen zwei Objekten. Ist obj <code>nil<code/>, Wird die Distanz zwischen dem aufrufenden Objekt und obj2 gemessen.
		[obj2]
		Description=Zweites Objekt.

		[obj]
		Description=Erstes Objekt. <code>nil<code/> bei lokalem Aufruf.


	[ObjectNumber]
	Description=Bestimmt die Nummer des aufrufenden Objekts. Diese Nummer ist eindeutig und kann mittels der Funktion <funclink>Object<funclink/> in einen Objektpointer zurückverwandelt werden.

	[OnFire]
	Description=Gibt zurück, ob das aufrufende Objekt brennt.

	[Par]
	Description=Gibt einen der an die Funktion übergebenen Parameter zurück.
		[index]
		Description=0-9: Index des abzufragenden Parameters


	[PathFree]
	Description=Gibt zurück, ob der Weg zwischen den beiden angegebenen Punkten in der Landschaft frei ist, d.h., ob sich keine festen Materialien auf der Verbindungslinie zwischen den Punkten befinden.
		[x1]
		Description=X-Position des Anfangspunktes

		[y1]
		Description=Y-Position des Anfangspunktes

		[x2]
		Description=X-Position des Endpunktes

		[y2]
		Description=Y-Position des Endpunktes


	[PlaceAnimal]
	Description=Erzeugt ein Lebewesen vom angegebenen Typ in der Landschaft. Die Startposition bestimmt sich dabei aus dem Wert Placement im <emlink>DefCore<emlink/> des Lebewesens. Rückgabewert ist ein Zeiger auf das neu erzeugte Objekt.
		[animal_id]
		Description=ID des zu erstellenden Tieres.


	[PlaceObjects]
	Description=Erzeugt amount viele Objekte im angegebenen Zielrechteck (optional) im angegebenen Material. Gibt die Anzahl der Iterationen zurück, oder -1 wenn die Erzeugung fehlschlägt.
		[definition]
		Description=ID des zu platzierenden Objekts

		[amount]
		Description=Menge der zu erzeugenden Objekte

		[material_name]
		Description=Material in which object are to be created. This can be a material number or a string as follows: 
            <table>
              <rowh>
                <col>material_index<col/>
                <col>Erzeugung in<col/>
              <rowh/>
              <row>
                <col>"GBackSolid"<col/>
                <col>Objekte werden in festem Material erzeugt. Siehe auch <funclink>GBackSolid<funclink/>()<col/>
              <row/>
              <row>
                <col>"GBackSemiSolid"<col/>
                <col>Objekte werden in festem oder flüssigem Material erzeugt. Siehe auch <funclink>GBackSemiSolid<funclink/>()<col/>
              <row/>
              <row>
                <col>"GBackLiquid"<col/>
                <col>Objekte werden in flüssigem Material erzeugt. Siehe auch <funclink>GBackLiquid<funclink/>()<col/>
              <row/>
              <row>
                <col>"GBackSky"<col/>
                <col>Objekte werden im freien Himmel erzeugt. Siehe auch <funclink>GBackSky<funclink/>()<col/>
              <row/>
            <table/>

		[x]
		Description=Linke Kante der Position. Bei lokalem Aufruf Offset zum aufrufenden Objekt.

		[y]
		Description=Obere Kante der Position. Bei lokalem Aufruf Offset zum aufrufenden Objekt.

		[width]
		Description=Platzierrechteck Breite. Wenn nicht angegeben wird das Ende der Landschaft angenommen

		[height]
		Description=Platzierrechteck Höhe. Wenn nicht angegeben wird das Ende der Landschaft angenommen

		[on_surface]
		Description=Wenn <code>true<code/>, werden alle Objekte oberhalb des angegeben Materials erzeugt. (Ohne Berücksichtigung des Zielrechtecks)

		[no_stuck]
		Description=Wenn <code>true<code/>, wird nicht sichergestellt dass des Objekt fest in der Erde ist. Dies ist z.B.: nötig wenn man Objekte im Flüssigkeiten erstellen will.


	[PlaceVegetation]
	Description=Platziert Vegetation im angegebenen Zielrechteck. Bei lokalen Aufrufen gelten die Koordinaten als Offset zur Mitte des aufrufenden Objekts. Rückgabewert ist ein Zeiger auf das neu erzeugte Objekt.
		[id]
		Description=ID des zu erstellenden Objekts.

		[x]
		Description=Obere linke Ecke des Zielrechtecks, X-Koordinate

		[y]
		Description=Obere linke Ecke des Zielrechtecks, Y-Koordinate

		[width]
		Description=Breite des Zielrechtecks

		[height]
		Description=Höhe des Zielrechtecks

		[growth]
		Description=Wachstumsphase des Zielobjekts. -1 platziert Vegetation in zufälligem Wachstumsstadium, ansonsten gilt der Wertebereich 1-100000 (1-100%)


	[PlayAnimation]
	Description=Spielt eine neue neue Animation ab. Der Rückgabewert der Funktion ist die Animationsnummer des eingefügten Animationsknotens, mit der die Animation später manipuliert oder wieder entfernt werden kann. Falls im angegebenen Slot bereits Animationen vorhanden sind, so wird auch ein Kombinationsknoten erstellt. Dieser erhält die zurückgegebene Nummer plus 1.
		[animation]
		Description=Name der abzuspielenden Animation.

		[slot]
		Description=Slot im Animation Stack in den die Animation eingefügt werden soll. Siehe <emlink>Animationen<emlink/>.

		[position]
		Description=Bestimmt, wie die aktuelle Position der Animation berechnet wird. Diese wird mittels Animationsfunktionen der Form "Anim_" angegeben.

		[weight]
		Description=Bestimmt, wie die aktuelle Gewichtung der Animation berechnet wird, falls die Animation mit einer anderen Animation im gegebenen Slot kombiniert wird. Diese wird mittels Animationsfunktionen der Form "Anim_" angegeben.

		[sibling]
		Description=Falls die Animation mit einer anderen Animation kombiniert wird, dann gibt dies den Knoten an, mit dem die neue Animation kombiniert wird. Falls nicht angegeben oder <code>nil<code/> wird die Animation mit der obersten Animation des Slots verknüpft wie sie von <funclink>GetRootAnimation<funclink/> zurückgeliefert wird.


	[PlayerMessage]
	Description=Gibt eine Nachricht nur im Viewport eines Spielers aus. Die Nachrichtenformatierung erfolgt analog zu <funclink>Message<funclink/>.
		[player]
		Description=Nummer des Spielers, bei dem die Nachricht ausgegeben wird

		[message]
		Description=Nachricht, die ausgegeben wird


	[Punch]
	Description=Schlägt obj.
		[obj]
		Description=Das Opfer.

		[strength]
		Description=Stärke des Schlages (abgezogene Energiemenge).


	[PushParticles]
	Description=Beschleunigt alle Partikel eines angegebenen Typs in die angegebene Richtung.
		[name]
		Description=Name der Partikeldefinition, dessen Instanzen beschleunigt werden sollen. Wenn nicht angegeben werden alle Partikeltypen beschleunigt.

		[xacc]
		Description=Horizontalbeschleunigung

		[yacc]
		Description=Vertikalbeschleunigung


	[Random]
	Description=Gibt eine Zufallszahl zwischen 0 und max-1 zurück. Der zurückgegebene Wert kann jedoch nicht höher als 32767 sein.
		[max]
		Description=Höchstwert


	[RandomX]
	Description=Liefert einen Zufallswert zwischen value1 und value2. Dabei ist egal, welcher Wert der größere ist.
		[value1]
		Description=Anfang des Bereichs

		[value2]
		Description=Ende des Bereichs


	[ReloadDef]
	Description=Aktualisiert eine Definition. Dieser Befehl kann im Entwicklermodus in der Konsole eingegeben werden, nachdem die Definition auf der Festplatte verändert wurde. Sie muss zuvor geladen gewesen sein.
		[definition]
		Description=ID der neu zu ladenden Definition


	[ReloadParticle]
	Description=Aktualisiert eine Partikeldefinition. Dieser Befehl kann im Entwicklermodus in der Konsole eingegeben werden, nachdem die Definition auf der Festplatte verändert wurde. Sie muss zuvor geladen gewesen sein.
		[particle]
		Description=Name des neu zu ladenden Partikeltyps.


	[RemoveAll]
	Description=Entfernt alle Objekte die den Suchkriterien entsprechen.
		[Criteria]
		Description=Suchkriterium in Form einer Find_*-Funktion


	[RemoveEffect]
	Description=Löscht einen Effekt
		[name]
		Description=Name des Effektes ohne vorangestelltes Fx. Es können '*' und '?' als Suchmaske verwendet werden.

		[target]
		Description=Zielobjekt, in dem ein Effekt gelöscht werden sollen. Bei <code>nil<code/> wird die globale Effektliste durchsucht.

		[effect]
		Description=Der Effekt. Statt nach dem Namen zu suchen, kann der Effekt direkt entfernt werden wenn dieser Parameter angegeben ist.

		[no_calls]
		Description=Wenn ungleich <code>false<code/>, werden keine Stop-Aufrufe durchgeführt.


	[RemoveObject]
	Description=Entfernt das aufrufende Objekt.
		[eject_contents]
		Description=Wenn wahr, wird der Inhalt des Objekts vor der Vernichtung ausgeleert. Ansonsten wird er mit vernichtet.


	[RemoveVertex]
	Description=Entfernt einen Vertex vom aufrufenden Objekt.
		[index]
		Description=Index des Vertex, das entfernt werden soll.


	[ResetGamma]
	Description=Setzt eine Gammarampe auf den Normalwert zurück. Dies entspricht <funclink>SetGamma<funclink/>(<funclink>RGB<funclink/>(0,0,0), <funclink>RGB<funclink/>(128,128,128), <funclink>RGB<funclink/>(255,255,255), ramp_index);. Für weitere Informationen siehe <funclink>SetGamma<funclink/>.
		[ramp_index]
		Description=0-7: Index der Gammarampe, die zurückgesetzt werden soll.


	[ResetPhysical]
	Description=Setzt alle Physicals auf den Normalwert zurück. Für weitere Informationen siehe <funclink>SetPhysical<funclink/>.
		[physical]
		Description=Sollte, wenn angegeben, der Name einer Physical sein, die zuvor mit <funclink>SetPhysical<funclink/> im Modus PHYS_StackTemporary gesetzt wurde. Es wird dann diese Physical auf den alten Wert, den sie vor dem temporären Setzen hatte, zurückgesetzt und die temporäre Änderung vom Stapel entfernt. Ist der Stapel leer - das heißt, wenn für alle <funclink>SetPhysical<funclink/>-Aufrufe mit PHYS_StackTemporary-Parameter entsprechende ResetPhysical-Aufrufe mit sPhys-Parameter getätigt wurden, werden die temporären Physicals wieder gelöscht. Ist der Parameter 0 oder nicht angegeben, werden die temporären Physicals immer zurückgesetzt und alle temporären Zwischenwerte vom Stapel gelöscht. Für ein Beispiel zu diesem Parameter siehe <funclink>SetPhysical<funclink/>.


	[RGB]
	Description=Setzt einen 32Bit-Farbwert aus den drei Grundfarben zusammen. 0-255 für alle Parameter.
		[byR]
		Description=Rotanteil für die Farbe

		[byG]
		Description=Grünanteil für die Farbe

		[byB]
		Description=Blauanteil für die Farbe


	[RGB2HSL]
	Description=Wandelt einen 32Bit-Farbwert in die entsprechenden Hue-, Saturation- und Lightness-Werte um wie bereits von Malprogrammen bekannt.<br><br/> Die HSL Werte werden ebenfalls als int zurückgegeben und können mit <funclink>GetRGBaValue<funclink/> oder <funclink>SplitRGBaValue<funclink/> weiter verwendet werden.<br><br/> Alle Werte sind von 0 bis 255 skaliert.
		[Val]
		Description=32Bit-Farbwert


	[RGBa]
	Description=Setzt einen 32Bit-Farbwert aus den drei Grundfarben und einem Durchsichtigkeitswert zusammen. 0-255 für alle Parameter.
		[byR]
		Description=Rotanteil für die Farbe

		[byG]
		Description=Grünanteil für die Farbe

		[byB]
		Description=Blauanteil für die Farbe

		[byA]
		Description=Deckkraft


	[Schedule]
	Description=Führt einen bestimmes Script mit Verzögerung aus.
		[obj]
		Description=Objekt, in dem das Script ausgeführt werden soll. <code>nil<code/> für ohne Objektkontext.

		[script]
		Description=Auszuführendes Script

		[delay]
		Description=Zeit, bis die Funktion zum ersten Mal aufgerufen werden soll. Wenn repeat > 1, ist es außerdem der Zeitabstand zwischen erneuten Aufrufen.

		[repeat]
		Description=Anzahl der Aufrufe. Wenn 0 oder nicht angegeben wird die Funktion genau ein mal aufgerufen.


	[ScheduleCall]
	Description=Ruft eine Funktion nach einer angegebenen Verzögerung auf.
		[obj]
		Description=Objekt, in dem die Funktion aufgerufen werden soll. <code>nil<code/> für ohne Objektkontext.

		[function]
		Description=Name der Funktion, die aufgerufen werden soll.

		[delay]
		Description=Zeit, bis die Funktion zum ersten Mal aufgerufen werden soll. Wenn repeat > 1, ist es außerdem der Zeitabstand zwischen erneuten Aufrufen.

		[repeat]
		Description=Anzahl der Aufrufe. Wenn 0 oder nicht angegeben wird die Funktion genau ein mal aufgerufen.


	[ScoreboardCol]
	Description=Wandelt eine Objektdefinitions-ID in eine Zahl um, die als Spaltenidentifikator für <funclink>SetScoreboardData<funclink/> verwendet werden kann. Diese Funktion ist dann interessant, wenn ein Objekt auf das Scoreboard zugreifen will, aber dabei sicher stellen muss, dass es nicht dieselbe ID wie ein anderes Objekt verwendet.
		[definition]
		Description=C4ID, die in einen Scoreboard-Spaltenindex umgewandelt werden soll. Für Scoreboards auf Objektbasis sollte hier die ID der Objektdefinition genommen werden, die die Scoreboardfunktionen bereit stellt.


	[ScrollContents]
	Description=Rotiert den Inhalt des aufrufenden Objekts. Dabei wird immer genau ein Objekt weiter gescrollt (im Gegensatz zu <funclink>ShiftContents<funclink/>). Es wird außerdem kein ControlContents aufgerufen. <br><br/> Zurückgegeben wird ein Pointer auf das Objekt, das sich nach der Rotation am Anfang der Inhaltsliste befindet.

	[SelectMenuItem]
	Description=Setzt die Auswahl in einem Menü.
		[number]
		Description=Nummer des MenuItems, das selektiert werden soll. Der erste Eintrag hat die Nummer 0.


	[Sell]
	Description=Verkauft das aufrufende Objekt mitsamt Inhalt.
		[player]
		Description=Nummer des Spielers, an den verkauft wird


	[SetAction]
	Description=Setzt die Aktivität des aufrufenden Objekts. Siehe auch <emlink>ActMap<emlink/>.
		[action]
		Description=Neue Aktivität. "ActIdle" oder "Idle" löscht die Aktivität.

		[target1]
		Description=Erstes Zielobjekt für die Aktivität

		[target2]
		Description=Zweites Zielobjekt für die Aktivität

		[force]
		Description=Wenn <code>true<code/> wir die Aktion selbst dann geändert wenn in der momentanten Aktion NoOtherAction=1 gesetzt ist.


	[SetActionData]
	Description=Setzt den Zusatzparameter für die aktuell ausgeführte Aktivitäts-Prozedur. Die Auswirkung dieses Parameters hängt von der gesetzten Prozedur ab. Siehe dazu auch <emlink>ActMap-Prozeduren<emlink/>.
		[data]
		Description=Zusatzparameter für die Aktivität.


	[SetActionTargets]
	Description=Setzt die aktuellen Aktivitätszielobjekte des aufrufenden Objekts. Die Auswirkung der Zielobjekte richtet sich nach der <emlink>Prozedur<emlink/> der aktuell gesetzten Aktivität.
		[target1]
		Description=Erstes Zielobjekt

		[target2]
		Description=Zweites Zielobjekt


	[SetAlive]
	Description=Legt fest, ob ein Objekt lebt.
		[alive]
		Description=false = Tot; ansonsten lebendig


	[SetAnimationPosition]
	Description=Setzt die Position der angegebenen Animation neu. Rückgabewert <code>true<code/> falls der neue AVP gesetzt wurde oder <code>false<code/> wenn es keine Animation mit der angegebenen Nummer gibt oder es sich bei ihr um einen Kombinationsknoten handelt.
		[animation_number]
		Description=Animationsnummer der Animation deren Position gesetzt werden soll.

		[position]
		Description=Bestimmt, wie die aktuelle Position der Animation berechnet wird. Diese wird mittels Animationsfunktionen der Form "Anim_" angegeben.


	[SetAnimationWeight]
	Description=Setzt die Gewichtung der angegebenen Animation neu. Rückgabewert <code>true<code/> falls der neue AVP gesetzt wurde oder <code>false<code/> wenn es keine Animation mit der angegebenen Nummer gibt oder es sich bei ihr um einen Animationsknoten handelt.
		[animation_number]
		Description=Animationsnummer der Animation deren Position gesetzt werden soll.

		[weight]
		Description=Bestimmt, wie die aktuelle Gewichtung der Animation berechnet wird, falls die Animation mit einer anderen Animation im gegebenen Slot kombiniert wird. Diese wird mittels Animationsfunktionen der Form "Anim_" angegeben.


	[SetAttachBones]
	Description=Wurde zuvor mit <placeholder-1><placeholder-1/> ein Mesh an einem anderen befestigt, so kann mit dieser Funktion einer oder beide der Bones geändert werden mit denen sie aneinander hängen. Um nur einen Bone zu ändern kann für den anderen Parameter <code>nil<code/> angegeben werden.
		[attach_number]
		Description=Nummer des angehängten Meshes. Der Rückgabewert von <funclink>AttachMesh<funclink/> bildet solch eine Nummer.

		[parent_bone]
		Description=Bone am aufrufenden Objekt an den das Mesh angehängt werden soll.

		[child_bone]
		Description=Bone des anzuhängenden Meshes mit dem es befestigt werden soll.


	[SetAttachTransform]
	Description=Wurde zuvor mit <funclink>AttachMesh<funclink/> ein Mesh an einem anderen befestigt, so kann mit dieser Funktion die Transformation des angehängten Meshes geändert werden.
		[attach_number]
		Description=Nummer des angehängten Meshes dessen Transformation geändert werden soll. Der Rückgabewert von <funclink>AttachMesh<funclink/> bildet solch eine Nummer.

		[transformation]
		Description=Neue Transformation im Koordinatensystem des angehängten Meshes, die auf selbiges angewandt wird. Das Array sollte 12 Integer-Einträge haben die eine 3x4-Matrix beschreiben wobei jeder Wert in Promille (1000 = 100%) angegeben ist. Die Matrizen können auch mit <funclink>Trans_Identity<funclink/>, <funclink>Trans_Translate<funclink/>, <funclink>Trans_Rotate<funclink/> und <funclink>Trans_Scale<funclink/> erzeugt und mit <funclink>Trans_Mul<funclink/> kombiniert werden.


	[SetBit]
	Description=Gibt die neue Bitmaske mit dem an bit_number durch bit ersetzten Bit zurück.
		[old_value]
		Description=Alter Wert der Bitmaske

		[bit_number]
		Description=Das zu verändernde Bit

		[bit]
		Description=Der neue Wert des Bits


	[SetBridgeActionData]
	Description=Setzt Zusatzparameter für eine aktuell ausgeführte BRIDGE-Prozedur des aufrufenden Objekts.
		[bridge_length]
		Description=Länge der Brücke.

		[move_clonk]
		Description=Ob sich der Clonk mit der Brücke mitbewegen soll.

		[build_wall]
		Description=Sollte <code>true<code/> sein, wenn der Clonk keine Brücke, sondern eine Wand (d.h. über seinem Kopf) baut.

		[bridge_material]
		Description=Materialnummer des Materials aus dem die Brücke bestehen soll.


	[SetCategory]
	Description=Ändert die Kategorie des aufrufenden Objekts.
		[category]
		Description=Objektkategorie. Sollte ein gültiger C4D_x-Wert sein.


	[SetClimate]
	Description=Setzt das Klima (Durchschnittstemperatur).
		[temperature]
		Description=Temperatur zwischen -50 und 50.


	[SetClrModulation]
	Description=Ändert die Farbmodulation des aufrufenden Objekts. Diese ist ein Farbwert, der multiplikativ aufgerechnet wird. Bei <funclink>RGB<funclink/>(255,0,0) würden also nur die Rotanteile der Grafik gezeichnet werden. <funclink>RGBa<funclink/>(255,255,255,128) würde die Grafik halbtransparent machen.
		[color]
		Description=Neue Farbe, mit der moduliert wird.

		[overlay_id]
		Description=Wenn angegeben, wird stattdessen die Farbmodulation dieses Grafikoverlays gesetzt. Das Overlay muss vorher mit <funclink>SetGraphics<funclink/> erstellt worden sein.


	[SetColor]
	Description=Setzt die ColorByOwner-Färbung des aufrufenden Objekts. Dieser Aufruf entspricht dem Setzen eines neuen Besitzers mit <funclink>SetOwner<funclink/> bei einem Spieler mit der Spielerfarbe color.
		[color]
		Description=Neue Farbe für ColorByOwner-Flächen


	[SetComDir]
	Description=Setzt die Befehlsrichtung des aufrufenden Objekts (siehe <funclink>GetComDir<funclink/>)
		[com_dir]
		Description=Befehlsrichtung. Muss <funclink>COMD_None<funclink/>, <funclink>COMD_Stop<funclink/>, <funclink>COMD_Down<funclink/>, <funclink>COMD_DownLeft<funclink/>, <funclink>COMD_DownRight<funclink/>, <funclink>COMD_Left<funclink/>, <funclink>COMD_Right<funclink/>, <funclink>COMD_Up<funclink/>, <funclink>COMD_UpLeft<funclink/> oder <funclink>COMD_UpRight<funclink/> sein.


	[SetCommand]
	Description=Gibt dem aufrufenden Objekt ein Kommando, welches dieses selbstständig (ggf. durch automatische Wegfindung) auszuführen versucht.
		[command]
		Description=Kommandoname (als String). Siehe untere Tabelle

		[target]
		Description=Zielobjekt für Aktion

		[x]
		Description=X-Zielkoordinate

		[y]
		Description=Y-Zielkoordinate

		[target2]
		Description=zweites Zielobjekt

		[Data]
		Description=zusätzliche Daten zur Aktion

		[retries]
		Description=Anzahl der Wiederholungen (wenn das Kommando fehlschlägt), bis das Kommando abgebrochen wird.


	[SetComponent]
	Description=Setzt die Anzahl einer Komponente des aufrufenden Objekts.
		[component]
		Description=Hinzuzufügende Komponente

		[count]
		Description=Zu setzende Anzahl der Komponenten mit der ID component


	[SetCon]
	Description=Setzt die Fertigstellung des aufrufenden Objekts auf den angegebenen Wert.
		[con]
		Description=Fertigstellung/Wachstum in Prozent


	[SetContactDensity]
	Description=Legt fest, welche Dichte ein Material haben muss, damit das Objekt mit diesem kollidiert. Standardmäßig liegt dieser Wert bei 50 (dichtes Material).
		[density]
		Description=Dichte des Materials, mit dem das Objekt kollidieren soll.


	[SetController]
	Description=Ändert den steuernden Spieler des aufrufenden Objekts.
		[player]
		Description=Spielernummer des neuen steuernden Spielers. <code>NO_OWNER<code/> für keinen Spieler.


	[SetCrewEnabled]
	Description=Aktiviert oder deaktiviert Mannschaftsmitglieder. Deaktivierte Mannschaftsmitglieder können nicht mehr vom Spieler angewählt werden. So kann es auch passieren, dass ein Spieler zwar 0 Mannschaftsmitglieder zur Auswahl hat, aber trotzdem nicht eliminiert ist. Nur für Objekte, die auch wirklich zu einer Mannschaft gehören. Deaktivierte Mannschaftsmitglieder sind automatisch nicht mehr ausgewählt.
		[enabled]
		Description=Gibt an, ob das Mannschaftsmitglied aktiviert oder deaktiviert werden soll.


	[SetCrewExtraData]
	Description=Mithilfe dieses Befehls können beliebige, scriptdefinierte Werte unter einem gegebenen Namen im Clonk in der Spielerdatei gespeichert werden. Auf diese Weise kann man Daten über einen Clonk in einer Spielerdatei über Szenariogrenzen hinweg erhalten (z.B. für RPGs) Zurückgegeben wird (wenn erfolgreich) der gesetzte Wert.
		[data_name]
		Description=Name der zugeordneten Daten.

		[Data]
		Description=Daten, die gesetzt werden sollen.


	[SetCrewStatus]
	Description=Adds or removes an object (usually a clonk) to or from the crew of a player. The object must have the CrewMember property set in the DefCore.
    This does not add the object to the permanent crew of the player, use <funclink>MakeCrewMember<funclink/> for that.
		[player]
		Description=Spielernummer des Spielers, dessen Crew verändert werden soll.

		[into_crew]
		Description=<code>true<code/> wenn der Clonk der Crew hinzugefügt und <code>false<code/> wenn er aus dieser entfernt werden soll.


	[SetCursor]
	Description=Setzt die Auswahlmarkierung eines Spielers auf ein Zielobjekt und aktiviert dieses für die Steuerung. Gibt <code>false<code/> zurück falls das Zielobjekt momentan durch <funclink>SetCrewEnabled<funclink/> deaktiviert ist.
		[player]
		Description=Spielernummer

		[obj]
		Description=Anzuwählendes Objekt

		[no_select_arrow]
		Description=Wenn angegeben und ungleich <code>false<code/>, wird bei der Anwahl kein Auswahlpfeil angezeigt.


	[SetDir]
	Description=Setzt die Richtung des aufrufenden Objekts.
		[dir]
		Description=Aktionsrichtung. Vordefinierte Werte: <funclink>DIR_Right<funclink/> / <funclink>DIR_Left<funclink/>


	[SetEntrance]
	Description=Ermöglicht bzw. verhindert das Betreten dieses Gebäudes.
		[status]
		Description=<code>false<code/> = Geschlossen; <code>true<code/> = Offen


	[SetFilmView]
	Description=Setzt die Sicht in Filmwiedergaben auf den angegebenen Spieler.
		[for_player]
		Description=Nummer des Spielers, dessen Sicht gezeigt werden soll.


	[SetFoW]
	Description=Schaltet den Nebel des Krieges für einen Spieler ein oder aus.
		[enabled]
		Description=Wenn <code>true<code/>,, wird der Kriegsnebel aktiviert, bei <code>false<code/>, deaktiviert.

		[player]
		Description=Nummer des Spielers.


	[SetGameSpeed]
	Description=Setzt die Spielgeschwindigkeit.
		[game_speed]
		Description=Spielgeschwindigkeit in FPS (Frames per Second). Wird der Parameter nicht angegeben oder <code>false<code/> übergeben, so wird die Standard-Spielgeschwindigkeit (38 FPS) gewählt.


	[SetGamma]
	Description=Setzt eine Gammarampe. Mit Gammarampen kann global das Aussehen des gesamten Spieles gesteuert werden, indem jedem Farbkanal eine eigene Tabelle zugewiesen wird, aus der die neue Helligkeit abgelesen wird. Damit kann man zum Beispiel bestimmte Farben speziell hervorheben, alles abdunkeln oder erhellen oder sogar das Bild komplett invertieren.
		[color1]
		Description=Veränderung für dunkle Farben. Standard ist <funclink>RGB<funclink/>(0,0,0) für keine Veränderung.

		[color2]
		Description=Veränderung für mittlere Farben. Standard ist <funclink>RGB<funclink/>(128,128,128) für keine Veränderung.

		[color3]
		Description=Veränderung für helle Farben. Standard ist <funclink>RGB<funclink/>(255,255,255) für keine Veränderung.

		[ramp_index]
		Description=0-7: Index der zu verändernden Rampe. Es stehen acht Gammarampen zur Verfügung, die aufeinander gerechnet werden. So können zum Beispiel Tag/Nacht-Objekte die globale Helligkeit verändern, ohne dabei andere Effekte wie Blitze zu behindern.


	[SetGraphics]
	Description=Ändert die Grafik des aufrufenden Objekts. Diese beeinflusst die Darstellung des betreffenden Objekts überall im Spiel: In der Landschaft, im Menü oder auf Maussteuerungssymbolen.
		[gfx_name]
		Description=Name der neu zu setzenden Grafik. Bei <code>nil<code/> wird die Standardgrafik gesetzt.

		[source_definition]
		Description=Definition, von der die Grafik entnommen werden soll. Wenn nicht angegeben, gilt die Definition des Objekts, dessen Grafik geändert wird. Wenn nicht angegeben für overlay!=0, wird das entsprechende Overlay entfernt.

		[overlay]
		Description=Index der zu setzenden Overlaygrafik. Muss wenn angegeben größer 0 sein, und fügt dem Objekt eine Grafik mit dem gegebenen Index hinzu, bzw. ändert sie wenn eine Grafik mit dem gegebenen Overlayindex schon existiert. Overlays mit größerem Index werden stets über denen mit kleinerem Index gezeichnet. Wenn ein Objekt nur eine Overlaygrafik hat, kann die symbolische Konstante GFX_Overlay (=1) verwendet werden.

		[overlay_mode]
		Description=Only in conjunction with overlay parameter: specifies how the overlay is to be drawn. The following constants are allowed: 
            <table>
              <rowh>
                <col>Konstante<col/>
                <col>Wert<col/>
                <col>Effekt<col/>
              <rowh/>
              <row>
                <col>GFXOV_MODE_None<col/>
                <col>0<col/>
                <col>Ungültig: Nicht benutzen<col/>
              <row/>
              <row>
                <col>GFXOV_MODE_Base<col/>
                <col>1<col/>
                <col>Die Basisgrafik der angegebenen Definition, das heißt das Zielrechteck (0,0,Width,Height,OffsetX,OffsetY), wird an der Objektposition über die Grafik gelegt.<col/>
              <row/>
              <row>
                <col>GFXOV_MODE_Action<col/>
                <col>2<col/>
                <col>Die Aktivität der angegebenen Objektdefinition.<col/>
              <row/>
              <row>
                <col>GFXOV_MODE_Picture<col/>
                <col>3<col/>
                <col>Hat nur Auswirkung, wenn das Objekt im Inventar eines Clonks oder in einem Menü (z.B. Aktivieren in Gebäuden) auftaucht: Das Picture-Rechteck der angegebenen Definition wird über das Repräsentativbild des Objekts gezeichnet. Hiermit können zum Beispiel Zauberer auf Steine oder Zaubersymbole auf Schriftrollen gedruckt werden.<col/>
              <row/>
              <row>
                <col>GFXOV_MODE_IngamePicture<col/>
                <col>4<col/>
                <col>Legt die Picture-Grafik der Quelldefinition über das Shape des Zielobjektes.<col/>
              <row/>
              <row>
                <col>GFXOV_MODE_Object<col/>
                <col>5<col/>
                <col>Legt die aktuelle Objektgrafik inklusive aller Overlays von pOverlayObject über das Objekt. Achtung: Ein Objekt darf sich nicht rekursiv über sich selbst als Overlay legen.<col/>
              <row/>
              <row>
                <col>GFXOV_MODE_ExtraGraphics<col/>
                <col>6<col/>
                <col>Benutzt die angegebene Grafik als Quellgrafik, um das Objekt erneut zu zeichnen. Die Quellkoordinaten sind die gleichen wie die, die auch beim Zeichnen von obj verwendet wurden.<col/>
              <row/>
            <table/>

		[action]
		Description=Nur für overlay_mode==GFXOV_MODE_Action: Aktivität in der Definition source_definition, dessen Grafik über das Zielobjekt gelegt werden soll. Diese Aktivität muss in der <emlink>ActMap<emlink/> der Quelldefinition definiert sein. Achtung: Die Länge dieser Animation sollte 1 sein; bewegte Animtionen sind noch nicht möglich.

		[dwBlitMode]
		Description=Blitmodus der überlegten Grafik (z.B. additiv). Siehe <funclink>SetObjectBlitMode<funclink/>

		[overlay_object]
		Description=Nur für overlay_mode==GFXOV_MODE_Object: Objekt, dessen Grafik über das Zielobjekt gelegt werden soll.


	[SetGravity]
	Description=
		[gravity]
		Description=


	[SetHostility]
	Description=Setzt das Bündnisverhältnis zwischen zwei Spielern einseitig.
		[player1]
		Description=Der Spieler, dessen Bündnisverhältnis gesetzt wird

		[player2]
		Description=Der Spieler, zu dem das Bündnisverhältnis gesetzt wird

		[hostile]
		Description=Wenn <code>true<code/> wird verfeindet. Ansonsten verbündet.

		[silent]
		Description=Wenn ungleich <code>false<code/>, erscheint keine Verfeindungsnachricht im Messageboard. Im ersten Frame des Spieles wird auch ohne diesen Parameter nie eine Nachricht ausgegeben.

		[no_calls]
		Description=Wenn ungleich <code>false<code/>, werden die Callbacks RejectHostilityChange und OnHostilityChange nicht ausgeführt.


	[SetKiller]
	Description=Setzt den Mörder des aufrufenden Objekts.
		[new_killer]
		Description=Spielernummer des neuen Besitzers. <code>NO_OWNER<code/> für keinen Besitzer.


	[SetLength]
	Description=Verändert die Länge eines Arrays auf den angegebenen Wert. Überzählige Elemente werden dabei gegebenenfalls gelöscht.
		[resize]
		Description=Array, dessen Länge verändert werden soll

		[size]
		Description=Neue Länge des Feldes


	[SetMass]
	Description=Ändert die Eigenmasse des aufrufenden Objekts. Die Eigenmasse entspricht dem in der <emlink>DefCore.txt<emlink/> angegebenen Wert unter [DefCore], Mass. Die tatsächliche Objektmasse ergibt sich durch Hinzurechnen der Masse aller enthaltenen Objekte.
		[mass]
		Description=Neue Eigenmasse


	[SetMatAdjust]
	Description=Setzt die Materialmodulation. Die Materialfarben werden mit der angegebenen Farbe so verrechnet wie auch ColorByOwner-Grafiken.
		[colorMod]
		Description=Primäre Farbmodulation


	[SetMaxPlayer]
	Description=Ändert die Maximalzahl der Spieler, die an der Runde teilnehmen können. Dieser Wert wirkt sich nur auf Neubeitritte aus; es werden keine vorhandenen Spieler eliminiert, um das Limit zu erfüllen.
		[max]
		Description=Neue, maximale Spielerzahl


	[SetMenuSize]
	Description=Ändert die Größe eines Objektmenüs, so dass die vorgegebene Anzahl an Menüeinträgen in Breite und Höhe hineinpassen.
		[coloumns]
		Description=0-50: Anzahl der Menüeinträge, die das Menü in der Breite anzeigen können soll

		[rows]
		Description=0-50: Anzahl der Menüeinträge, die das Menü in der Höhe anzeigen können soll


	[SetMeshMaterial]
	Description=Ändert das Material des Meshes des aufrufenden Objekts zur Laufzeit.
		[material]
		Description=Name des zu setzenden Materials. Es muss beim Start der Engine bereits geladen sein, d.h. in einer *.material-Datei definiert worden sein die sich in einem geladenen Objekt befindet.

		[submesh]
		Description=Besteht das Mesh aus mehreren SubMeshes, so kann durch diesen Parameter angegeben werden das Material welches SubMeshes geändert werden soll.


	[SetName]
	Description=Ändert für eine Runde den Namen eines Objekts oder einer Definition.
		[name]
		Description=Neuer Name. Wenn <code>nil<code/>, wird der Name des Objekts auf den Namen seiner Definition beziehungsweise den Namen in der Spielerdatei zurückgesetzt.

		[set_permanent]
		Description=Nur für Crewobjekte: Wenn wahr, wird der Name permanent in der Infosektion des Spielers geändert. Namen dürfen jeweils nur einmal pro Spielerdatei vorkommen.

		[make_valid_if_exists]
		Description=Steuert das Verhalten, falls ein Clonk mit dem angegebenen Namen schon in der Stammcrew des Spielers existiert: Wenn unwahr, schlägt die Funktion in diesem Fall fehl. Wenn wahr, wird ein neuer Name durch Anhängen einer Zahl erzeugt.


	[SetObjDrawTransform]
	Description=Transformiert die Grafik des aufrufenden Objektes.
		[width]
		Description=Breite der Grafik. 1000 ist die Standardbreite, negative Angaben bedeuten eine horizontale Spiegelung der Grafik. Die Grafik wird immer mittig (zentriert) dargestellt.

		[xskew]
		Description=Horizontale schräge Streckung der Grafik: 0 bedeutet keine Streckung. 1000 bedeutet eine Verschiebung der horizontalen Kante um 45° nach links (oben nach links, unten nach rechts). Negative Werte bedeuten eine Verschiebung nach rechts.

		[xadjust]
		Description=Horizontale Verschiebung der Grafik. Bei 1000 wird die Grafik einen Pixel nach rechts verschoben, bei negativen Angaben wird die Grafik nach links verschoben. Die Grafik um halbe Pixel zu verschieben, ist auch möglich.

		[yskew]
		Description=Vertikale schräge Streckung der Grafik: 0 bedeutet keine Streckung. 1000 bedeutet eine Verschiebung der vertikalen Kante um 45° nach unten (links hoch, rechts runter). Negative Werte bedeuten eine Verschiebung nach oben.

		[height]
		Description=Höhe der Grafik. 1000 ist die Standardhöhe, negative Angaben bedeuten eine vertikale Spiegelung der Grafik. Die Grafik wird immer mittig (zentriert) dargestellt.

		[yadjust]
		Description=Vertikale Verschiebung der Grafik. Bei 1000 wird die Grafik einen Pixel nach unten verschoben, bei negativen Angaben wird die Grafik nach oben verschoben. Die Grafik um halbe Pixel zu verschieben, ist auch möglich.

		[overlay_id]
		Description=ID des Overlays, dessen Transformation angepasst werden soll. Bei 0 (default) wird die Hauptgrafik transformiert.


	[SetObjectBlitMode]
	Description=Ändert den Zeichenmodus für das aufrufende Objekt. Die möglichen Werte entsprechen denen des DefCore-Flags BlitMode (siehe Anmerkung). Die Funktion gibt jeweils den vorher gesetzten Blitmodus zurück.
		[dwNewBlitMod]
		Description=Neuer Zeichenmodus (mögliche Werte siehe unten) - bei 0 oder nicht angegeben wird das Objekt auf seinen Definitions-Blitmodus zurückgesetzt. Ansonsten wird Bit 8 (benutzerdefinierter Farbwert) implizit gesetzt.

		[overlay_id]
		Description=Wenn angegeben, wird stattdessen der Blitmodus dieses Grafikoverlays gesetzt. Das Overlay muss vorher mit <funclink>SetGraphics<funclink/> erstellt worden sein.


	[SetOwner]
	Description=Ändert den Besitzer des aufrufenden Objekts.
		[new_owner]
		Description=Spielernummer des neuen Besitzers. <code>NO_OWNER<code/> für keinen Besitzer.


	[SetPhase]
	Description=Setzt die Aktivitätsphase des aufrufenden Objekts.
		[phase]
		Description=Neue Aktionsphase.


	[SetPhysical]
	Description=Ändert die physischen Eigenschaften des aufrufenden Objekts. Hiermit können die in der Physical-Sektion der <emlink>DefCore.txt<emlink/> angegebenen Werte temporär oder permanent angepasst werden.
		[physical]
		Description=Name Eigenschaft, die geändert werden soll

		[value]
		Description=0-100000: Neuer Wert für diese Eigenschaft

		[mode]
		Description=Physical attribute change mode:<br><br/>
            <table>
              <rowh>
                <col>Konstante<col/>
                <col>Wert<col/>
                <col>Bedeutung<col/>
              <rowh/>
              <row>
                <col>PHYS_Current<col/>
                <col>0<col/>
                <col>Die Eigenschaften werden im gerade aktiven Modus (temporär oder permanent) des Objektes geändert.<col/>
              <row/>
              <row>
                <col>PHYS_Permanent<col/>
                <col>1<col/>
                <col>The physical attributes are changed in permanent mode. This modifies the info section of the associated crew object, which means that the changes will be written to the player file as well. Only player crew objects have  a permanent info section.<col/>
              <row/>
              <row>
                <col>PHYS_Temporary<col/>
                <col>2<col/>
                <col>Für das Objekt wird eine temporäre Infosektion erzeugt, sofern noch nicht vorhanden, und temporären Modus gesetzt. Änderungen im temporären Modus landen nicht in der Spielerdatei. Um temporäre Physicals wieder zu den Originalen zurückzusetzen, sollte <funclink>ResetPhysical<funclink/> verwendet werden.<col/>
              <row/>
              <row>
                <col>PHYS_StackTemporary<col/>
                <col>3<col/>
                <col>Wie PHYS_Temporary, jedoch wird zusätzlich der vorherige Physical-Wert gesichert und kann einzeln mit einem <funclink>ResetPhysical<funclink/>-Aufruf wiederhergestellt werden.<col/>
              <row/>
            <table/>
<br><br/>


	[SetPicture]
	Description=Ändert die Repräsentativgrafik des aufrufenden Objekts auf ein neues Zielrechteck der aktuell benutzten Grafik. Die Repräsentativgrafik wird beispielsweise im Menü oder der Inventarliste des ausgewählten Clonks verwendet. Siehe auch Eintrag Picture in der <emlink>DefCore.txt<emlink/>.
		[x]
		Description=X-Position der oberen linken Ecke des neuen Grafikrechtecks

		[y]
		Description=Y-Position der oberen linken Ecke des neuen Grafikrechtecks

		[width]
		Description=Breite des neuen Grafikrechtecks

		[height]
		Description=Höhe des neuen Grafikrechtecks


	[SetPlayerTeam]
	Description=Teilt einen Spieler einem neuen Team zu. Es wird geprüft, ob in dem neuen Team noch Platz ist (anhand des MaxPlayer-Werts).
		[player]
		Description=Spielernummer des Spieler, dessen Team geändert werden soll.

		[new_team]
		Description=Teamnummer des neuen Teams.

		[no_calls]
		Description=Wenn <code>true<code/>, werden die Aufrufe "RejectTeamSwitch" und "OnTeamSwitch" nicht getätigt. Der Spieler wird auch nicht neu verfeindet (dies muss ggf. selbst nachgeholt werden).


	[SetPlayerViewLock]
	Description=Deaktiviert oder aktiviert gesperrte Sicht für einen oder alle Spieler. Falls die Sicht gesperrt wird kann der Spieler nicht umherscrollen um die Karte zu erkunden.
		[player]
		Description=Spieler, dessen Sichtsperre aktiviert oder deaktiviert werden soll. NO_OWNER für alle Spieler.

		[locked]
		Description=Ob die Sicht gesperrt (true) oder entsperrt (false) werden soll.


	[SetPlayerZoomByViewRange]
	Description=Deaktiviert oder aktiviert gesperrte Sicht für einen oder alle Spieler. Falls die Sicht gesperrt wird kann der Spieler nicht umherscrollen um die Karte zu erkunden.
		[player]
		Description=Spieler, dessen Zoom oder Zoomgrenzen angepasst werden sollen. NO_OWNER für alle Spieler.

		[range_x]
		Description=Horizontale Entfernung die vom Zoom abgedeckt wird. Null um nur range_y zu benutzen. Falls range_x und range_y null sind, wird eine vorgegebene Entfernung für range_x angenommen.

		[range_y]
		Description=Vertikale Entfernung die vom Zoom abgedeckt wird. Null um nur range_x zu benutzen. Falls range_x und range_y ungleich null sind, wird die Zahl genutzt die den kleineren Zoom.

		[flags]
		Description=Flags controlling function behaviour:
            <table>
              <rowh>
                <col>Wert<col/>
                <col>Beschreibung<col/>
              <rowh/>
              <row>
                <literal_col>PLRZOOM_Direct<literal_col/>
                <col>Der Zoom scrollt nicht sanft zum neuen Wert, sondern wird direkt gesetzt.<col/>
              <row/>
              <row>
                <literal_col>PLRZOOM_NoIncrease<literal_col/>
                <col>Die neuen Zoomwerte sollen nur gesetzt werden, wenn sie kleiner als die aktuellen Werte sind.<col/>
              <row/>
              <row>
                <literal_col>PLRZOOM_NoDecrease<literal_col/>
                <col>Die neuen Zoomwerte sollen nur gesetzt werden, wenn sie größer als die aktuellen Werte sind.<col/>
              <row/>
              <row>
                <literal_col>PLRZOOM_LimitMin<literal_col/>
                <col>Setzt das minimale Grenze für den Zoom. Der Spieler kann nicht weiter herauszoomen als dieser Wert.<col/>
              <row/>
              <row>
                <literal_col>PLRZOOM_LimitMax<literal_col/>
                <col>Setzt das maximale Grenze für den Zoom. Der Spieler kann nicht weiter hineinzoomen als dieser Wert.<col/>
              <row/>
            <table/>


	[SetPlayList]
	Description=Setzt die Liste der Musikstücke, die in zufälliger Reihenfolge abgespielt werden sollen (wenn die Musik aktiviert ist). Zurückgegeben wird die Anzahl der aktivierten Musikstücke (Im Netzwerk wird allerdings immer 0 zurückgegeben).
		[playlist]
		Description=List of pieces of music to be played. The individual file names are separated with semicolons (";"). Wildcards are expanded.  If the parameter is left out, the standard playlist is restored.


	[SetPlrExtraData]
	Description=Mithilfe dieses Befehls können beliebige, scriptdefinierte Werte unter einem gegebenen Namen in der Spielerdatei gespeichert werden. Auf diese Weise kann man Daten über einen Spieler über Szenariogrenzen hinweg erhalten (z.B. für RPGs) Zurückgegeben wird (wenn erfolgreich) der gesetzte Wert.
		[player]
		Description=Nummer des Spielers, für den zusätzliche Daten gespeichert werden sollen

		[data_name]
		Description=Name der zugeordneten Daten.

		[Data]
		Description=Daten, die gesetzt werden sollen.


	[SetPlrKnowledge]
	Description=Fügt einen Bauplan zum Wissen des Spielers hinzu (oder entfernt ihn bei angegebenem remove).
		[player]
		Description=Spieler, dem ein Bauplan gegeben werden soll

		[definition]
		Description=ID der Objektdefinition, für die der Bauplan gegeben werden soll

		[remove]
		Description=Wenn ungleich <code>false<code/>, wird der Bauplan vom Wissen des Spielers entfernt


	[SetPlrMagic]
	Description=Fügt einen Zauber der Liste der verfügbaren Zauber eines Spielers hinzu oder entfernt einen Zauber aus der Liste.
		[player]
		Description=Nummer des Spielers, dessen Liste der verfügbaren Zauber geändert werden soll

		[id]
		Description=ID des Zaubers

		[remove]
		Description=Ob der Zauber entfernt werden soll


	[SetPlrView]
	Description=Zentriert das Sichtfenster eines Spielers auf ein Objekt. Die Sicht folgt dem Objekt bis zum nächsten Spielerkommando.
		[player]
		Description=Spieler, dessen Sicht gesetzt werden soll.

		[obj]
		Description=Objekt, auf das die Sicht gesetzt werden soll.


	[SetPlrViewRange]
	Description=Setzt die Sichtweite des aufrufenden Objekts.
		[range]
		Description=Sichtweite in Pixel.


	[SetPosition]
	Description=Verschiebt das aufrufende Objekt an die angegebene Position. Dabei wird das Objekt an die exakte Pixelposition gesetzt, und eventuelle, interne Verschiebungen um Pixelbruchteile werden verworfen.
		[x]
		Description=Neue X-Position für das Objekt

		[y]
		Description=Neue Y-Position für das Objekt

		[check_bounds]
		Description=Nur wirksam für Objekte mit angegebenem BorderBound. Stellt sicher, dass die Position immer innerhalb der dem Objekt auferlegten Grenzen ist.


	[SetProperty]
	Description=Setzt die Eigenschaft <code>key<code/> von <code>obj<code/> auf <code>value<code/>. Die Eigenschaft muss vorher nicht existiert haben.
		[key]
		Description=Zu setzende Eigenschaft.

		[value]
		Description=Wert, auf den die Eigenschaft gesetzt werden soll.

		[obj]
		Description=Objekt, das geändert wird. <code>nil<code/> bei lokalem Aufruf.


	[SetR]
	Description=Setzt die Drehung des aufrufenden Objekts.
		[angle]
		Description=Winkel in Grad


	[SetRDir]
	Description=Setzt die Drehungsgeschwindigkeit des aufrufenden Objekts.
		[rdir]
		Description=Rotationsgeschwindigkeit geteilt durch precision

		[precision]
		Description=Genauigkeit. Keine Angabe entspricht 10.


	[SetRGBaValue]
	Description=Sets a single color value of a 32 bit color value. 
      <table>
        <rowh>
          <literal_col>select<literal_col/>
          <col>Auswahl<col/>
        <rowh/>
        <row>
          <literal_col>0<literal_col/>
          <col>Alpha-Wert<col/>
        <row/>
        <row>
          <literal_col>1<literal_col/>
          <col>Rotanteil<col/>
        <row/>
        <row>
          <literal_col>2<literal_col/>
          <col>Grünanteil<col/>
        <row/>
        <row>
          <literal_col>3<literal_col/>
          <col>Blauanteil<col/>
        <row/>
      <table/>
		[Val]
		Description=32Bit-Farbwert

		[NewVal]
		Description=0-255: Farbwert, der mit dem alten ersetzt werden soll.

		[select]
		Description=0-3: Farbwert, der geändert werden soll


	[SetScoreboardData]
	Description=Setzt Daten im Scoreboard. Das Scoreboard ist eine globale Tabelle, die Szenarien nutzen können um zum Beispiel den aktuellen Punktestand aller Spieler oder sonstige Rundendaten darzustellen. Es wird vom Spieler standardgemäß mit der Taste Tab aufgerufen, kann aber auch per Script mit <funclink>DoScoreboardShow<funclink/> forciert gezeigt oder verborgen werden.<br><br/> Das Scoreboard wird automatisch erstellt, sobald Daten darin gesetzt werden. Es wird automatisch gelöscht, wenn es außer Überschriften keine Daten mehr enthält.<br><br/> Daten werden über einen Zeilen- und Spaltenindex adressiert. Werte mit gleichem Zeilenindex landen in der gleichen Zeile; Werte mit gleichem Spaltenindex in der gleichen Spalte. Existieren noch keine Daten für einen Zeilen- bzw. Spaltenindex, so wird die Zeile bzw. Spalte neu angelegt und unten bzw. rechts angehängt. Es ist also nicht entscheidend, welche Indizes verwendet werden, solange sie eindeutig sind. Es können z.B. Spielernummern, Spieler-IDs (siehe <funclink>GetPlayerID<funclink/>) oder Team-IDs (siehe <funclink>GetPlayerTeam<funclink/>) angegeben werden. Damit mehrere Objektdefinitionen wie zum Beispiel ein Todeszähler nicht dieselben IDs für Spalten verwenden, gibt es die Funktion <funclink>ScoreboardCol<funclink/>, die aus einer ID einen eindeutige Spaltenindex generiert. Dabei ist natürlich trotzdem darauf zu achten, dass mehrere solcher Objekte die gleichen Zeilenadressierungen verwenden. Indizes müssen nicht fortlaufend sein; Zeilen und Spalten werden nach Reihenfolge des Hinzufügens und nicht nach Indizes sortiert. Für benutzerdefinierte Sortierungen (zum Beispiel absteigend nach Punkten für eine Bestenliste) dient die Funktion <funclink>SortScoreboard<funclink/>.
		[row_id]
		Description=Wert größer oder gleich 0, oder SBRD_Caption. Index der Zeile, dessen Daten gesetzt werden sollen. Die Konstante SBRD_Caption steht dabei für die erste Spalte, die als Spaltenbeschriftung verwendet werden sollte.

		[coloumn_id]
		Description=Wert größer oder gleich 0, oder SBRD_Caption. Index der Spalte, dessen Daten gesetzt werden sollen. Die Konstante SBRD_Caption steht dabei für die erste Zeile, die als Zeilenüberschrift verwendet werden sollte.

		[text]
		Description=Zu setzender Zellentext. Wenn 0 oder nicht angegeben, wird die Zelle ausgeleert. Sind in einer Zeile alle Zellen bis auf die Überschrift (Index SBRD_Caption) leer, wird diese Zeile komplett entfernt. Selbiges gilt für Spalten. Die Überprüfung auf leere Zeilen und Spalten wird immer nur dann durchgeführt, wenn eine Zelle ausgeleert wird.<br><br/>Um Text in anderen Farben darzustellen oder Symbole im Scoreboard einzufügen, sollte entsprechendes Markup verwendet werden.

		[data]
		Description=Zusatzdaten für diese Zellen. Nach diesen Daten wird das Scoreboard mit <funclink>SortScoreboard<funclink/> sortiert.


	[SetSeason]
	Description=Setzt die Jahreszeit.
		[season]
		Description=Jahreszeit von 0 (Frühling) bis 100 (Winter).


	[SetShape]
	Description=Ändert das interne Objektrechteck des aufrufenden Objekts. Das Objektrechteck wird beispielsweise für Kollisionsabfragen verwendet. Dies hat keine Auswirkung auf die Darstellung des Objekts.
		[x]
		Description=X-Offset des neuen Shapes

		[y]
		Description=Y-Offset des neuen Shapes

		[width]
		Description=Breite des neuen Shapes

		[height]
		Description=Höhe des neuen Shapes


	[SetSkyAdjust]
	Description=Setzt die Himmelsmodulation. Die Himmelsfarben werden mit der angegebenen Farbe so verrechnet wie auch ColorByOwner-Grafiken.
		[colorMod]
		Description=Primäre Farbmodulation

		[backgroundColor]
		Description=Hintergrundfarbe. Wenn in colorMod das Alphabyte nicht 0 ist, wird diese Farbe als Hintergrund hinter den Himmel gelegt. So lassen sich auch hellere oder entsättigte Himmel realisieren.


	[SetSkyParallax]
	Description=Verändert Parallaxität und Scrollgeschwindigkeit des Himmels.
		[mode]
		Description=Scrollmodus. 0 ist Standard; bei 1 bewegt sich der Himmel mit dem Wind.

		[xpar]
		Description=Parallaxität in X-Richtung. Bei 10 ist der Himmel fest an der Landschaft und erscheint daher auf dem selben Level wie die Landschaft selber. Größere Werte lassen den Himmel weiter vom Betrachter weg erscheinen.

		[ypar]
		Description=Parallaxität in Y-Richtung

		[xdir]
		Description=Feste, horizontale Bewegungsgeschwindigkeit des Himmels

		[ydir]
		Description=Feste, vertikale Bewegungsgeschwindigkeit des Himmels

		[x]
		Description=X-Scrollposition des Himmels

		[y]
		Description=Y-Scrollposition des Himmels


	[SetSolidMask]
	Description=Setzt einen neuen, festen Bereich eines Objekts. Das Quellrechteck der Grafik gibt dabei an, welche Pixel im Rechteck fest werden sollen: Alle Pixel, die zu weniger als 50% transparent sind, werden fest. Siehe auch Eintrag SolidMask in der <emlink>DefCore.txt<emlink/>.
		[x]
		Description=X-Position der oberen linken Ecke der neuen SolidMask in der Definitionsgrafik

		[y]
		Description=Y-Position der oberen linken Ecke der neuen SolidMask in der Definitionsgrafik

		[width]
		Description=Breite der neuen SolidMask in der Definitionsgrafik

		[height]
		Description=Höhe der neuen SolidMask in der Definitionsgrafik

		[target_x]
		Description=X-Zielposition der neuen SolidMask relativ zur oberen linken Objektecke

		[target_y]
		Description=Y-Zielposition der neuen SolidMask relativ zur oberen linken Objektecke


	[SetSpeed]
	Description=Setzt die Geschwindigkeit des Objekts.
		[xdir]
		Description=Horizontale Gechwindigkeit geteilt durch precision.

		[ydir]
		Description=Vertikale Gechwindigkeit geteilt durch precision.

		[precision]
		Description=Genauigkeit. Keine Angabe entspricht 10.


	[SetTemperature]
	Description=Setzt die globale Temperatur.
		[temperature]
		Description=Temperatur von -100 bis 100.


	[SetTransferZone]
	Description=Setzt einen neuen Transferbereich für das aufrufende Objekt. Führt die Suche der Wegfindung durch einen Transferbereich (dieser gilt für die Wegfindung immer als komplett durchlaufbar), werden für den Clonk ControlTransfer-Aufrufe an das Script des Objekts aufgerufen. In diesen sollte mit Hilfe von Befehlen dafür gesorgt werden, dass der Clonk an seine Zielposition kommt.
		[x]
		Description=X-Position der oberen linken Ecke der neuen Transferzone; relativ zum Objektmittelpunkt

		[y]
		Description=Y-Position der oberen linken Ecke der neuen Transferzone; relativ zum Objektmittelpunkt

		[width]
		Description=Breite der neuen Transferzone

		[height]
		Description=Höhe der neuen Transferzone


	[SetVertex]
	Description=Setzt eine Koordinate des indizierten Vertex (siehe <emlink>DefCore.txt<emlink/>) eines Objekts. Koordinaten in Relation zur Objektmitte.
		[index]
		Description=Index des Vertex.

		[select]
		Description=Determines which vertex data is to be changed. 
            <table>
              <rowh>
                <col>Wert<col/>
                <col>Bedeutung<col/>
              <rowh/>
              <row>
                <col>VTX_X<col/>
                <col>X-Koordinate des Vertex.<col/>
              <row/>
              <row>
                <col>VTX_Y<col/>
                <col>Y-Koordinate des Vertex.<col/>
              <row/>
              <row>
                <col>VTX_CNAT<col/>
                <col><emlink>CNAT-Wert<emlink/> des Vertex.<col/>
              <row/>
              <row>
                <col>VTX_Friction<col/>
                <col>Reibung des Vertex.<col/>
              <row/>
            <table/>

		[value]
		Description=Wert, auf den gesetzt werden soll.

		[set_custom_permanent]
		Description=Wenn 1 oder 2, wird der Wert in den hinteren 25 Vertices gesetzt und aus diesen beim nächsten Shape-Update kopiert. Mit diesem Parameter kann dafür gesorgt werden, dass benutzerdefinierte Vertices auch bei rotierten Objekten erhalten bleiben. Bei Wert 2 werden die gegenwärtigen Objektvertices auch gleich aktualisiert.


	[SetVertexXY]
	Description=Setzt X und Y eines Vertices zugleich
		[index]
		Description=Vertexnummer

		[xpos]
		Description=Gewünschte X-Position des Vertices

		[ypos]
		Description=Gewünschte Y-Position des Vertices


	[SetViewOffset]
	Description=Verschiebt die Sicht eines Spielers permanent um einen bestimmten Betrag. Ein erneuter Aufruf überschreibt die Verschiebung wieder, ein Aufruf mit 0-Koordinaten setzt die Sicht wieder in den Normalzustand zurück.
		[player]
		Description=Spieler, für den der Sicht-Offset gesetzt werden soll.

		[x]
		Description=X-Komponente des Offsets (in Pixel).


	[SetWealth]
	Description=Setzt das Vermögen eines Spielers.
		[player]
		Description=Spielernummer des Spielers, dessen Vermögen verändert werden soll

		[value]
		Description=Das neue Vermögen.


	[SetWind]
	Description=Setzt die globale Windrichtung und -stärke.
		[strength]
		Description=Windstärke von -100 bis 100.


	[SetXDir]
	Description=Setzt die horizontale Geschwindigkeit des aufrufenden Objekts.
		[xdir]
		Description=Horizontale Gechwindigkeit geteilt durch precision.

		[precision]
		Description=Genauigkeit. Keine Angabe entspricht 10.


	[SetYDir]
	Description=Setzt die vertikale Geschwindigkeit des Objekts.
		[ydir]
		Description=Vertikale Gechwindigkeit geteilt durch precision.

		[precision]
		Description=Genauigkeit. Keine Angabe entspricht 10.


	[ShakeFree]
	Description=Löst innerhalb eines kreisförmigen Bereiches halbfestes Material in der Landschaft. Für gelöstes Material wird neu geprüft, ob es in darunterliegendes Material fallen kann. Dadurch kann man zum Beispiel Höhlendecken einstürzen lassen.
		[x]
		Description=X-Mittelposition des freigeschüttelten Kreises. Immer global.

		[y]
		Description=Y-Mittelposition des freigeschüttelten Kreises. Immer global.

		[radius]
		Description=Radius des freigeschüttelten Kreises


	[ShakeObjects]
	Description=Schüttelt innerhalb eines kreisförmigen Bereiches alle Lebewesen durch. Dieses Verhalten ist vergleichbar mit <funclink>Fling<funclink/>()-Aufrufen mit kleinen Zufallswerten auf alle Objekte im Zielbereich.
		[x]
		Description=X-Mittelposition des durchgeschüttelten Kreises. Immer global.

		[y]
		Description=Y-Mittelposition des durchgeschüttelten Kreises. Immer global.

		[radius]
		Description=Radius des durchgeschüttelten Kreises


	[ShiftContents]
	Description=Sortiert die Inhaltsobjekte des aufrufenden Objekts so um, dass das nächste Objekt mit anderer ID vorne liegt. Die häufigste Anwendung für diesen Befehl ist ein Inventarwechsel.
		[shift_back]
		Description=Wenn wahr, wird rückwärts durchsortiert.

		[target_id]
		Description=ID des Objekttyps, der als nächstes ausgewählt sein soll. Wenn dieser Parameter angegeben ist, wird kein ControlContents-Aufruf mehr getätigt, sondern es wird direkt und ohne das Abspielen eines Sounds durchgeschaltet. Damit lässt sich beispielsweise das Durchschalten des Inventars in ControlConents überladen, und mit eigenen Sounds oder Zusatzaktivitäten versehen.

		[no_calls]
		Description=Wenn wahr, werden ControlContents- und Selection-Aufrufe getätigt.


	[ShowInfo]
	Description=Zeigt die Beschreibung eines Objekts in einem kleinen Informationsfenster (intern ein Menü) beim aufrufenden Objekt an.

	[SimFlight]
	Description=Simuliert die Bewegung eines fallenden Objekts mit einer gegebenen Startposition und initialier Geschwindigkeit. Das zurückgegebene Array enthält [int x_final, int y_final, int xdir_final, int ydir_final, int time_passed]. <br><br/> Falls die projektierte Flugbahn ein Material der angegebenen Dichte trifft wird die Simulation gestoppt und time_passed wird nicht negativ. Ansonsten wird time_passed negativ.
		[x]
		Description=X-Versatz der Startposition. (NICHT optional wenn ohne Objektkontext aufgerufen wird)

		[y]
		Description=Y-Versatz der Startposition. (NICHT optional wenn ohne Objektkontext aufgerufen wird)

		[xdir]
		Description=Initiale horizontale Geschwindigkeit. Falls nicht gesetzt, wird die horizontale Geschwindigkeit des Objekts angenommen. (NICHT optional wenn ohne Objektkontext aufgerufen wird)

		[ydir]
		Description=Initiale vertikale Geschwindigkeit. Falls nicht gesetzt, wird die vertikale Geschwindigkeit des Objekts angenommen. (NICHT optional wenn ohne Objektkontext aufgerufen wird)

		[min_density]
		Description=Minimale Dichte des Materials nach dem auf der Wurfbahn gesucht wird. Keine Angabe entspricht 50 (festes Material).

		[max_density]
		Description=Maximale Dichte des Materials nach dem auf der Wurfbahn gesucht wird. Keine Angabe entspricht 100.

		[iterations]
		Description=Anzahl der simulierten Frames bis zum Abbruch der Simulation. Keine Angabe oder ein negativer Wert bedeutet dass solange gesucht wird bis die Landschaft oder der Rand der Landkarte getroffen wird.

		[precision]
		Description=Genauigkeit. Keine Angabe entspricht 10.


	[Sin]
	Description=Liefert sin(angle) * radius.
		[angle]
		Description=Winkel in Grad

		[radius]
		Description=Radius

		[precision]
		Description=Der angegebene Winkel wird, wenn angegeben, vor der Berechnung durch diesen Wert dividiert. Bei einem Winkel von 455 und einer Präzision von 10 würde intern also mit einem Winkel von 45,5° gerechnet werden.


	[Smoke]
	Description=Erzeugt eine Rauchwolke an der angegebenen Position.
		[x]
		Description=X-Position der Rauchwolke. Offset bei lokalem Aufruf.

		[y]
		Description=Y-Position der Rauchwolke. Offset bei lokalem Aufruf.

		[level]
		Description=Größe des Rauchs


	[Sort_Distance]
	Description=Sortierkriterium: Sortiert die gefundenen Objekte nach Entfernung zum angegebenen Bezugspunkt. Die nahesten Objekte zuerst.
		[x]
		Description=Bezugspunkt für den Abstand. Bei lokalem Aufruf Offset zum aufrufenden Objekt.

		[y]
		Description=Bezugspunkt für den Abstand. Bei lokalem Aufruf Offset zum aufrufenden Objekt.


	[Sort_Func]
	Description=Sortierkriterium: Sortiert die gefundenen Objekte anhand des int-Rückgabewertes der angegebenen Funktion. Je kleiner der Wert, desto weiter vorne steht das Objekt im Array.
		[function]
		Description=Aufzurufende Funktion


	[Sort_Mass]
	Description=Sortierkriterium: Sortiert die gefundenen Objekte nach ihrer Masse. Die leichtesten Objekte zuerst.

	[Sort_Multiple]
	Description=Sortierkriterium: Erlaubt es nach mehreren Kriterien zu sortieren. Das erste Kriterium hat dabei die höchste Priorität.
		[Criteria]
		Description=Sortierkriterium in Form einer Sort_*-Funktion


	[Sort_Random]
	Description=Sortierkriterium: Sortiert die gefundenen Objekte zufällig.

	[Sort_Reverse]
	Description=Sortiermodifikator: Kehrt die Sortierung der angegebenen Sortierfunktion um.
		[iSort]
		Description=Sortierfunktion


	[Sort_Speed]
	Description=Sortierkriterium: Sortiert die gefundenen Objekte nach Geschwindigkeit. Die langsamsten Objekte zuerst.

	[Sort_Value]
	Description=Sortierkriterium: Sortiert die gefundenen Objekte nach ihrem Wert. Die wertlosesten Objekte zuerst.

	[SortArray]
	Description=
		[array2sort]
		Description=Array, dessen Länge verändert werden soll

		[descending]
		Description=Wenn wahr, wird in absteigender Reihenfolge sortiert. Ansonsten in aufsteigender Reihenfolge.


	[SortArrayByArrayElement]
	Description=
		[array2sort]
		Description=Array, dessen Länge verändert werden soll

		[element_index]
		Description=

		[descending]
		Description=Wenn wahr, wird in absteigender Reihenfolge sortiert. Ansonsten in aufsteigender Reihenfolge.


	[SortArrayByProperty]
	Description=
		[array2sort]
		Description=Array, dessen Länge verändert werden soll

		[property_name]
		Description=[opt] Variable, in der der Rotanteil gespeichert werden soll

		[descending]
		Description=Wenn wahr, wird in absteigender Reihenfolge sortiert. Ansonsten in aufsteigender Reihenfolge.


	[SortScoreboard]
	Description=Sortiert die Zeilen des Scoreboards nach den Extradaten einer Spalte. Wenn zwei Einträge in dieser Spalte die gleichen Werte besitzen, wird nicht umsortiert. So kann durch sukzessive Aufrufe dieser Funktion nach mehreren Spalten sortiert werden.
		[coloumn_id]
		Description=ID der Spalte, nach der sortiert werden soll.

		[reverse]
		Description=Wenn wahr, wird in absteigender Reihenfolge sortiert. Ansonsten in aufsteigender Reihenfolge.


	[Sound]
	Description=Spielt einen Sound ab. Die entsprechende Sounddatei muss in der Gruppendatei Sound.ocg, in der aktiven Szenariodatei oder in einer geladenen Objektdefinition vorhanden sein. Bei lokalen Aufrufen werden Geräusche abhängig von der aktuellen Position des aufrufenden Objekts abgespielt.
		[name]
		Description=Name des Soundeffekts (ohne .wav/.ogg-Erweiterung). Wildcards dürfen wie in <funclink>WildcardMatch<funclink/> verwendet werden

		[global]
		Description=Gibt an, ob der Sound global, d.h. unabhängig von der Objektposition immer in derselben Lautstärke abgespielt werden soll.

		[volume]
		Description=0-100: Lautstärke, in der der Sound abgespielt wird. Bei <code>nil<code/> wird 100 als Standard angenommen.

		[player]
		Description=Spielernummer des Spielers, für den der Sound abgespielt werden soll. Im Netzwerkspiel wird der Sound dann nicht bei einem Spieler abgespielt, der an einem anderen Rechner spielt. Wenn <code>nil<code/> oder nicht angegeben, wird der Sound für alle Spieler abgespielt.

		[loop_count]
		Description=Erhöht oder verringert die Anzahl der in einer Endlosschleife laufenden Sounds. Bei +1 wird dieser Sound unendlich oft abgespielt bis diese Funktion noch einmal mit -1 aufgerufen wird. Bei 0 wird der Sound normal abgespielt.


	[Split2Components]
	Description=Zerlegt ein Objekt in seine Bestandteile. Die Bestandteile werden in zufälliger Drehung und mit geringer Geschwindigkeit in zufälliger Richtung an der Stelle erzeugt, an der sich das Objekt befand. Das Objekt wird anschließend vernichtet. Wenn sich das Objekt in einem Behälter befand, werden auch die Komponenten nach der Erschaffung in den Behälter versetzt.

	[SplitRGBaValue]
	Description=Gibt ein Array mit dem Rot-, Grün-, Blau- und Alpha-Wertes des angegebenen 32Bit-Farbwerts zurück: [Rot, Grün, Blau, Alpha]
		[rgba]
		Description=32Bit-Farbwert


	[Sqrt]
	Description=Zieht die Wurzel aus dem ersten Parameter. Ist der Parameter kleiner als 0, wird einfach 0 zurückgegeben.
		[value]
		Description=Wert, aus dem die Wurzel gezogen werden soll


	[StartScriptProfiler]
	Description=Startet den Scriptprofiler.
		[definition_script]
		Description=Wenn angegeben, werden nur Scriptfunktionen einer bestimmten Objektdefinition gemessen.


	[StopAnimation]
	Description=Stoppt die Animation mit der angegeben Nummer (wie sie von <funclink>PlayAnimation<funclink/> zurückgegeben wird) und entfernt die Animation aus dem zugehörigen Slot im Animations-Stack. Gehört ein Kombinationsknoten zur Nummer, so werden beide Animationen entfernt die kombiniert werden; wenn eine oder beide davon wieder Kombinationen sind werden auch deren Animationen entfernt, und so weiter. Wird die gestoppte Animation mit einer anderen kombiniert, so wird auch der zugehörige Kombinationsknoten entfernt, da es nun nichts mehr zu kombinieren gibt. Gibt <code>true<code/> zurück wenn die Animation entfernt wurde, oder <code>false<code/> wenn dies nicht möglich war (zum Beispiel wenn es keine Animation zur gegebenen Nummer gibt, oder die Animation zu Slot 0 gehört).
		[animation_number]
		Description=Nummer der zu stoppenden Animation.


	[StopScriptProfiler]
	Description=Stoppt den Scriptprofiler, und gibt das Ergebnis im Log aus.

	[Stuck]
	Description=Ermittelt, ob das aufrufende Objekt feststeckt, d.h., ob sich einer seiner Vertices in festem Material befindet.

	[Tan]
	Description=Liefert tan(angle) * radius.
		[angle]
		Description=Winkel in Grad

		[radius]
		Description=Radius

		[precision]
		Description=Der angegebene Winkel wird, wenn angegeben, vor der Berechnung durch diesen Wert dividiert. Bei einem Winkel von 455 und einer Präzision von 10 würde intern also mit einem Winkel von 45,5° gerechnet werden.


	[ToggleBit]
	Description=Gibt die neue Bitmaske mit dem an der angegebenen Stelle umgedrehten Bit zurück
		[old_value]
		Description=Alter Wert der Bitmaske

		[bit_number]
		Description=Das umzudrehende Bit


	[Trans_Identity]
	Description=Liefert eine 3x4-Einheitsmatrix. Sie kann als Transformation für <funclink>AttachMesh<funclink/> oder für die "PictureTransformation" oder "MeshTransformation"-Eigenschaften (siehe <emlink>Meshes<emlink/>) verwendet werden.

	[Trans_Mul]
	Description=Multipliziert zwei oder mehr 3x4-Transformationsmatrizen in der gegegebenen Reihenfolge. Somit können die Effekte mehrerer Transformationen miteinander kombiniert werden. Das Ergebnis kann als Transformation für <funclink>AttachMesh<funclink/> oder für die "PictureTransformation" oder "MeshTransformation"-Eigenschaften (siehe <emlink>Meshes<emlink/>) verwendet werden.
		[first]
		Description=Erste Matrix wie von <funclink>Trans_Identity<funclink/>, <funclink>Trans_Translate<funclink/>, <funclink>Trans_Rotate<funclink/> oder <funclink>Trans_Scale<funclink/> zurückgegeben.

		[second]
		Description=Zweite Matrix.


	[Trans_Rotate]
	Description=Liefert eine 3x4-Rotationsmatrix welche eine Drehung um die Achse (<code>rx<code/>, <code>ry<code/>, <code>rz<code/>) um <code>angle<code/> Grad beschreibt. Sie kann als Transformation für <funclink>AttachMesh<funclink/> oder für die "PictureTransformation" oder "MeshTransformation"-Eigenschaften (siehe <emlink>Meshes<emlink/>) verwendet werden.
		[angle]
		Description=Drehwinkel. Positive Werte drehen entgegen dem Uhrzeigersinn wenn man in Richtung der Drehachse blickt, negative Werte drehen im Uhrzeigersinn.

		[rx]
		Description=X-Koordinate der Drehachse.

		[ry]
		Description=Y-Koordinate der Drehachse.

		[rz]
		Description=Z-Koordinate der Drehachse.


	[Trans_Scale]
	Description=Liefert eine 3x4-Skalierungsmatrix. Sie kann als Transformation für <funclink>AttachMesh<funclink/> oder für die "PictureTransformation" oder "MeshTransformation"-Eigenschaften (siehe <emlink>Meshes<emlink/>) verwendet werden.
		[sx]
		Description=Vergrößerung in X-Richtung.

		[sy]
		Description=Vergrößerung in Y-Richtung.

		[sz]
		Description=Vergrößerung in Z-Richtung.


	[Trans_Translate]
	Description=Liefert eine 3x4-Verschiebungsmatrix. Sie kann als Transformation für <funclink>AttachMesh<funclink/> oder für die "PictureTransformation" oder "MeshTransformation"-Eigenschaften (siehe <emlink>Meshes<emlink/>) verwendet werden.
		[dx]
		Description=Verschiebung in X-Richtung.

		[dy]
		Description=Verschiebung in Y-Richtung.

		[dz]
		Description=Verschiebung in Z-Richtung.


	[Translate]
	Description=Schlägt einen Text in der <emlink>StringTbl??.txt<emlink/> des aufrufenden Skripts nach, und gibt die Übersetzung zurück.
		[text]
		Description=Zeichenkette, die übersetzt werden soll


	[VerticesStuck]
	Description=Liefert die Anzahl feststeckender Vertices von *obj
		[obj]
		Description=Zielobjekt


	[WildcardMatch]
	Description=Prüft, ob zwei Strings gleich sind. Die Prüfung beachtet Groß- und Kleinschreibung, außerdem können Wildcards benutzt werden.
		[text]
		Description=String, der überprüft werden soll.

		[wildcard]
		Description=String, der überprüft werden soll.


	[CreatePropList]
	Description=
		[prototype]
		Description=


	[ResetProperty]
		[key]
		Description=

		[pObj]
		Description=


	[DebugLog]
	Description=
		[Pars]
		Description=


	[AsyncRandom]
	Description=
		[iRange]
		Description=


	[LocateFunc]
	Description=
		[funcname]
		Description=

		[p]
		Description=


	[ModulateColor]
	Description=
		[iClr1]
		Description=

		[iClr2]
		Description=


	[StartCallTrace]
	Description=

	[GetConstantNameByValue]
		[value]
		Description=

		[name_prefix]
		Description=

		[idx]
		Description=


	[IncinerateLandscape]
	Description=
		[iX]
		Description=

		[iY]
		Description=


	[GetPlayerColor]
		[iPlayer]
		Description=


	[GetTexture]
	Description=
		[x]
		Description=

		[y]
		Description=


	[GetAverageTextureColor]
		[Texture]
		Description=


	[BlastFree]
	Description=
		[iX]
		Description=

		[iY]
		Description=

		[iLevel]
		Description=

		[iCausedBy]
		Description=


	[AddMessage]
	Description=
		[Pars]
		Description=


	[ResetCursorView]
	Description=
		[plr]
		Description=


	[SurrenderPlayer]
	Description=
		[iPlr]
		Description=


	[SetLeaguePerformance]
	Description=
		[iScore]
		Description=


	[GetViewCursor]
	Description=
		[iPlr]
		Description=


	[SetViewCursor]
	Description=
		[iPlr]
		Description=

		[pObj]
		Description=


	[ClearFreeRect]
		[iX]
		Description=

		[iY]
		Description=

		[iWdt]
		Description=

		[iHgt]
		Description=


	[PathFree2]
	Description=
		[x1]
		Description=

		[y1]
		Description=

		[x2]
		Description=

		[y2]
		Description=


	[GetLeague]
	Description=
		[idx]
		Description=


	[TestMessageBoard]
	Description=
		[iForPlr]
		Description=

		[fTestIfInUse]
		Description=


	[CallMessageBoard]
	Description=
		[pObj]
		Description=

		[fUpperCase]
		Description=

		[szQueryString]
		Description=

		[iForPlr]
		Description=


	[AbortMessageBoard]
	Description=
		[pObj]
		Description=

		[iForPlr]
		Description=


	[OnMessageBoardAnswer]
	Description=
		[pObj]
		Description=

		[iForPlr]
		Description=

		[szAnswerString]
		Description=


	[GetMatAdjust]
	Description=

	[DrawMatChunks]
	Description=
		[tx]
		Description=

		[ty]
		Description=

		[twdt]
		Description=

		[thgt]
		Description=

		[icntx]
		Description=

		[icnty]
		Description=

		[strMaterial]
		Description=

		[strTexture]
		Description=

		[bIFT]
		Description=


	[CastAParticles]
		[szName]
		Description=

		[iAmount]
		Description=

		[iLevel]
		Description=

		[iX]
		Description=

		[iY]
		Description=

		[a0]
		Description=

		[a1]
		Description=

		[b0]
		Description=

		[b1]
		Description=

		[pObj]
		Description=

		[fBack]
		Description=


	[CastBackParticles]
	Description=
		[szName]
		Description=

		[iAmount]
		Description=

		[iLevel]
		Description=

		[iX]
		Description=

		[iY]
		Description=

		[a0]
		Description=

		[a1]
		Description=

		[b0]
		Description=

		[b1]
		Description=

		[pObj]
		Description=


	[SetTextureIndex]
	Description=
		[psMatTex]
		Description=

		[iNewIndex]
		Description=

		[fInsert]
		Description=


	[RemoveUnusedTexMapEntries]
	Description=

	[LoadScenarioSection]
	Description=
		[pstrSection]
		Description=

		[dwFlags]
		Description=


	[SetPreSend]
	Description=
		[iToVal]
		Description=

		[pNewName]
		Description=


	[GetTeamConfig]
	Description=
		[iConfigValue]
		Description=


	[InitScenarioPlayer]
	Description=
		[iPlayer]
		Description=

		[idTeam]
		Description=


	[GetScoreboardString]
	Description=
		[iRowID]
		Description=

		[iColID]
		Description=


	[GetScoreboardData]
	Description=
		[iRowID]
		Description=

		[iColID]
		Description=


	[AddEvaluationData]
	Description=
		[pText]
		Description=

		[idPlayer]
		Description=


	[HideSettlementScoreInEvaluation]
	Description=
		[fHide]
		Description=


	[ActivateGameGoalMenu]
	Description=
		[iPlayer]
		Description=


	[PauseGame]
	Description=
		[fToggle]
		Description=


	[SetNextMission]
	Description=
		[szNextMission]
		Description=

		[szNextMissionText]
		Description=

		[szNextMissionDesc]
		Description=


	[GetPlayerControlState]
	Description=
		[iPlr]
		Description=

		[iControl]
		Description=


	[SetPlayerControlEnabled]
	Description=
		[iplr]
		Description=

		[ctrl]
		Description=

		[is_enabled]
		Description=


	[GetPlayerControlEnabled]
		[iplr]
		Description=

		[ctrl]
		Description=


	[ExecuteCommand]
	Description=

	[SetMenuDecoration]
	Description=
		[idNewDeco]
		Description=


	[SetMenuTextProgress]
	Description=
		[iNewProgress]
		Description=


	[GetObjectLayer]
	Description=

	[SetObjectLayer]
	Description=
		[pNewLayer]
		Description=


	[SetObjDrawTransform2]
	Description=
		[iA]
		Description=

		[iB]
		Description=

		[iC]
		Description=

		[iD]
		Description=

		[iE]
		Description=

		[iF]
		Description=

		[iG]
		Description=

		[iH]
		Description=

		[iI]
		Description=

		[iOverlayID]
		Description=


	[SetObjectStatus]
	Description=
		[iNewStatus]
		Description=

		[fClearPointers]
		Description=


	[GetObjectStatus]
	Description=

	[AdjustWalkRotation]
	Description=
		[iRangeX]
		Description=

		[iRangeY]
		Description=

		[iSpeed]
		Description=


	[DoNoCollectDelay]
		[change]
		Description=



